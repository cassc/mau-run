//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	updateBits              // -- Begin function updateBits
.func  (.param .b32 func_retval0) get_thread_id
()
;
.func  (.param .b32 func_retval0) contract
(
	.param .b64 contract_param_0,
	.param .b64 contract_param_1,
	.param .b64 contract_param_2,
	.param .b32 contract_param_3,
	.param .b64 contract_param_4,
	.param .b64 contract_param_5,
	.param .b64 contract_param_6,
	.param .b32 contract_param_7
)
;
.extern .func  (.param .b64 func_retval0) malloc
(
	.param .b64 malloc_param_0
)
;
.func evm_$_udiv_$_i256
(
	.param .b64 evm_$_udiv_$_i256_param_0,
	.param .b64 evm_$_udiv_$_i256_param_1,
	.param .b64 evm_$_udiv_$_i256_param_2
)
;
.extern .func free
(
	.param .b64 free_param_0
)
;
.func evm_$_udivrem_$_i256
(
	.param .b64 evm_$_udivrem_$_i256_param_0,
	.param .b64 evm_$_udivrem_$_i256_param_1,
	.param .b64 evm_$_udivrem_$_i256_param_2,
	.param .b64 evm_$_udivrem_$_i256_param_3
)
;
.func  (.param .b32 func_retval0) deployer
(
	.param .b64 deployer_param_0,
	.param .b64 deployer_param_1,
	.param .b64 deployer_param_2,
	.param .b32 deployer_param_3,
	.param .b64 deployer_param_4,
	.param .b64 deployer_param_5,
	.param .b64 deployer_param_6,
	.param .b32 deployer_param_7
)
;
.visible .func keccak256
(
	.param .b64 keccak256_param_0,
	.param .b64 keccak256_param_1,
	.param .b64 keccak256_param_2
)
;
.func keccakf
(
	.param .b64 keccakf_param_0
)
;
.visible .func __device_calldataload
(
	.param .b64 __device_calldataload_param_0,
	.param .b64 __device_calldataload_param_1,
	.param .b64 __device_calldataload_param_2
)
;
.visible .func __device_sstore
(
	.param .b64 __device_sstore_param_0,
	.param .b64 __device_sstore_param_1,
	.param .b64 __device_sstore_param_2,
	.param .b64 __device_sstore_param_3
)
;
.visible .func __device_sload
(
	.param .b64 __device_sload_param_0,
	.param .b32 __device_sload_param_1,
	.param .b64 __device_sload_param_2,
	.param .b64 __device_sload_param_3
)
;
.visible .func __device_mstore
(
	.param .b64 __device_mstore_param_0,
	.param .b64 __device_mstore_param_1,
	.param .b64 __device_mstore_param_2,
	.param .b64 __device_mstore_param_3
)
;
.visible .func __device_mload
(
	.param .b64 __device_mload_param_0,
	.param .b64 __device_mload_param_1,
	.param .b64 __device_mload_param_2
)
;
.visible .func  (.param .b32 func_retval0) __hashword
(
	.param .b64 __hashword_param_0
)
;
.visible .func __mv_new_bits
(
	.param .b32 __mv_new_bits_param_0,
	.param .b64 __mv_new_bits_param_1,
	.param .b64 __mv_new_bits_param_2
)
;
.visible .func addBugSet
(
	.param .b32 addBugSet_param_0,
	.param .b32 addBugSet_param_1,
	.param .b32 addBugSet_param_2
)
;
.visible .func __mutateCalldata
(
	.param .b64 __mutateCalldata_param_0,
	.param .b32 __mutateCalldata_param_1
)
;
.visible .const .align 1 .b8 __evmCode[32769] = {96, 128, 96, 64, 82, 52, 128, 21, 97, 0, 16, 87, 96, 0, 128, 253, 91, 80, 97, 3, 141, 128, 97, 0, 32, 96, 0, 57, 96, 0, 243, 0, 96, 128, 96, 64, 82, 96, 4, 54, 16, 97, 0, 142, 87, 96, 0, 53, 124, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 144, 4, 99, 255, 255, 255, 255, 22, 128, 99, 38, 74, 251, 125, 20, 97, 0, 147, 87, 128, 99, 55, 92, 88, 176, 20, 97, 0, 222, 87, 128, 99, 60, 131, 7, 19, 20, 97, 1, 41, 87, 128, 99, 70, 137, 45, 99, 20, 97, 1, 116, 87, 128, 99, 101, 55, 33, 71, 20, 97, 1, 191, 87, 128, 99, 176, 17, 82, 226, 20, 97, 1, 234, 87, 128, 99, 192, 67, 162, 84, 20, 97, 2, 53, 87, 128, 99, 255, 205, 136, 59, 20, 97, 2, 96, 87, 91, 96, 0, 128, 253, 91, 52, 128, 21, 97, 0, 159, 87, 96, 0, 128, 253, 91, 80, 97, 0, 200, 96, 4, 128, 54, 3, 129, 1, 144, 128, 128, 53, 144, 96, 32, 1, 144, 146, 145, 144, 128, 53, 144, 96, 32, 1, 144, 146, 145, 144, 80, 80, 80, 97, 2, 171, 86, 91, 96, 64, 81, 128, 130, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 243, 91, 52, 128, 21, 97, 0, 234, 87, 96, 0, 128, 253, 91, 80, 97, 1, 19, 96, 4, 128, 54, 3, 129, 1, 144, 128, 128, 53, 144, 96, 32, 1, 144, 146, 145, 144, 128, 53, 144, 96, 32, 1, 144, 146, 145, 144, 80, 80, 80, 97, 2, 193, 86, 91, 96, 64, 81, 128, 130, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 243, 91, 52, 128, 21, 97, 1, 53, 87, 96, 0, 128, 253, 91, 80, 97, 1, 94, 96, 4, 128, 54, 3, 129, 1, 144, 128, 128, 53, 144, 96, 32, 1, 144, 146, 145, 144, 128, 53, 144, 96, 32, 1, 144, 146, 145, 144, 80, 80, 80, 97, 2, 215, 86, 91, 96, 64, 81, 128, 130, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 243, 91, 52, 128, 21, 97, 1, 128, 87, 96, 0, 128, 253, 91, 80, 97, 1, 169, 96, 4, 128, 54, 3, 129, 1, 144, 128, 128, 53, 144, 96, 32, 1, 144, 146, 145, 144, 128, 53, 144, 96, 32, 1, 144, 146, 145, 144, 80, 80, 80, 97, 2, 237, 86, 91, 96, 64, 81, 128, 130, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 243, 91, 52, 128, 21, 97, 1, 203, 87, 96, 0, 128, 253, 91, 80, 97, 1, 212, 97, 3, 3, 86, 91, 96, 64, 81, 128, 130, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 243, 91, 52, 128, 21, 97, 1, 246, 87, 96, 0, 128, 253, 91, 80, 97, 2, 31, 96, 4, 128, 54, 3, 129, 1, 144, 128, 128, 53, 144, 96, 32, 1, 144, 146, 145, 144, 128, 53, 144, 96, 32, 1, 144, 146, 145, 144, 80, 80, 80, 97, 3, 9, 86, 91, 96, 64, 81, 128, 130, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 243, 91, 52, 128, 21, 97, 2, 65, 87, 96, 0, 128, 253, 91, 80, 97, 2, 74, 97, 3, 31, 86, 91, 96, 64, 81, 128, 130, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 243, 91, 52, 128, 21, 97, 2, 108, 87, 96, 0, 128, 253, 91, 80, 97, 2, 149, 96, 4, 128, 54, 3, 129, 1, 144, 128, 128, 53, 144, 96, 32, 1, 144, 146, 145, 144, 128, 53, 144, 96, 32, 1, 144, 146, 145, 144, 80, 80, 80, 97, 3, 37, 86, 91, 96, 64, 81, 128, 130, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 243, 91, 96, 0, 129, 131, 2, 96, 0, 129, 144, 85, 80, 96, 0, 84, 144, 80, 146, 145, 80, 80, 86, 91, 96, 0, 129, 131, 1, 96, 1, 129, 144, 85, 80, 96, 1, 84, 144, 80, 146, 145, 80, 80, 86, 91, 96, 0, 129, 131, 3, 96, 1, 129, 144, 85, 80, 96, 1, 84, 144, 80, 146, 145, 80, 80, 86, 91, 96, 0, 129, 131, 1, 96, 0, 129, 144, 85, 80, 96, 0, 84, 144, 80, 146, 145, 80, 80, 86, 91, 96, 0, 84, 129, 86, 91, 96, 0, 129, 131, 3, 96, 0, 129, 144, 85, 80, 96, 0, 84, 144, 80, 146, 145, 80, 80, 86, 91, 96, 1, 84, 129, 86, 91, 96, 0, 128, 96, 0, 96, 1, 145, 80, 96, 0, 144, 80, 91, 131, 129, 16, 21, 97, 3, 77, 87, 132, 130, 2, 145, 80, 128, 128, 96, 1, 1, 145, 80, 80, 97, 3, 51, 86, 91, 129, 96, 0, 129, 144, 85, 80, 96, 0, 84, 146, 80, 80, 80, 146, 145, 80, 80, 86, 0, 161, 101, 98, 122, 122, 114, 48, 88, 32, 130, 29, 120, 182, 84, 23, 206, 112, 126, 35, 40, 11, 74, 157, 174, 222, 197, 242, 111, 82, 199, 31, 211, 109, 208, 231, 224, 22, 84, 84, 237, 176, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
.visible .const .align 4 .u32 __evmCodeSize = 941;
.visible .global .align 1 .u8 __l3snap_len;
.visible .global .align 8 .b8 __l3snap[2048];
// count_class_lookup8 has been demoted
.visible .global .align 1 .b8 __virgin_bits[4096];
.visible .global .align 8 .b8 __bitmaps[2048];
.visible .global .align 8 .b8 __signals[2056];
.visible .const .align 4 .u32 Rand = 200639606;
.visible .const .align 1 .b8 MAGIC[9] = {0, 1, 63, 64, 65, 127, 128, 129, 255};
.global .align 1 .b8 __const_$_pickBoundaryIntBytes_$_heads[9] = {0, 0, 63, 64, 64, 127, 128, 128, 255};
.global .align 1 .b8 __const_$_pickBoundaryIntBytes_$_tails[9] = {0, 1, 255, 0, 1, 255, 0, 1, 255};
.global .align 1 .b8 __const_$_pickBoundaryIntBytes_$_mids[9] = {0, 0, 255, 0, 0, 255, 0, 0, 255};
.visible .const .align 1 .b8 argTypeMap[21];
.visible .const .align 1 .u8 __level;
.visible .global .align 8 .b8 __l1snaps[524288];
.visible .global .align 1 .b8 __l1snap_lens[256];
.visible .global .align 8 .b8 __l2snaps[524288];
.visible .global .align 1 .b8 __l2snap_lens[256];
.visible .global .align 4 .u32 __l2_snap_chosen_id;
.visible .global .align 1 .b8 __cov_bits[4096];
.global .align 16 .b8 RC[192] = {1, 0, 0, 0, 0, 0, 0, 0, 130, 128, 0, 0, 0, 0, 0, 0, 138, 128, 0, 0, 0, 0, 0, 128, 0, 128, 0, 128, 0, 0, 0, 128, 139, 128, 0, 0, 0, 0, 0, 0, 1, 0, 0, 128, 0, 0, 0, 0, 129, 128, 0, 128, 0, 0, 0, 128, 9, 128, 0, 0, 0, 0, 0, 128, 138, 0, 0, 0, 0, 0, 0, 0, 136, 0, 0, 0, 0, 0, 0, 0, 9, 128, 0, 128, 0, 0, 0, 0, 10, 0, 0, 128, 0, 0, 0, 0, 139, 128, 0, 128, 0, 0, 0, 0, 139, 0, 0, 0, 0, 0, 0, 128, 137, 128, 0, 0, 0, 0, 0, 128, 3, 128, 0, 0, 0, 0, 0, 128, 2, 128, 0, 0, 0, 0, 0, 128, 128, 0, 0, 0, 0, 0, 0, 128, 10, 128, 0, 0, 0, 0, 0, 0, 10, 0, 0, 128, 0, 0, 0, 128, 129, 128, 0, 128, 0, 0, 0, 128, 128, 128, 0, 0, 0, 0, 0, 128, 1, 0, 0, 128, 0, 0, 0, 0, 8, 128, 0, 128, 0, 0, 0, 128};
                                        // @updateBits
.visible .entry updateBits(
	.param .u64 updateBits_param_0,
	.param .u64 updateBits_param_1
)
{
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<3>;

// %bb.0:
	ld.param.u64 	%rd1, [updateBits_param_0];
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r1, [retval0+0];
	} // callseq 0
	ld.param.u64 	%rd2, [updateBits_param_1];
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r1;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd2;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd1;
	call.uni 
	__mv_new_bits, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 1
	ret;
                                        // -- End function
}
.func  (.param .b32 func_retval0) get_thread_id() // -- Begin function get_thread_id
                                        // @get_thread_id
{
	.reg .b32 	%r<5>;

// %bb.0:
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %ntid.x;
	mad.lo.s32 	%r4, %r2, %r3, %r1;
	st.param.b32 	[func_retval0+0], %r4;
	ret;
                                        // -- End function
}
	// .globl	main_contract           // -- Begin function main_contract
.visible .entry main_contract(
	.param .u64 main_contract_param_0,
	.param .u64 main_contract_param_1,
	.param .u64 main_contract_param_2,
	.param .u32 main_contract_param_3
)                                       // @main_contract
{
	.local .align 1 .b8 	__local_depot2[640];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<20>;

// %bb.0:                               // %entry
	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd7, [main_contract_param_0];
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r6, [retval0+0];
	} // callseq 2
	ld.param.u32 	%r8, [main_contract_param_3];
	add.s32 	%r1, %r8, %r6;
	cvt.s64.s32 	%rd8, %r1;
	mul.wide.s32 	%rd9, %r1, 8;
	mov.u64 	%rd10, __bitmaps;
	add.s64 	%rd11, %rd10, %rd9;
	ld.global.u64 	%rd1, [%rd11];
	mov.u64 	%rd12, __l2snap_lens;
	add.s64 	%rd2, %rd12, %rd8;
	mul.wide.s32 	%rd13, %r1, 2048;
	mov.u64 	%rd14, __l2snaps;
	add.s64 	%rd3, %rd14, %rd13;
	ld.global.u64 	%rd4, [%rd7];
	ld.global.u32 	%r2, [%rd7+8];
	add.u64 	%rd15, %SP, 0;
	add.u64 	%rd5, %SPL, 0;
	add.s64 	%rd6, %rd7, 12;
	mov.u32 	%r12, 0;
$L__BB2_1:                              // %load-store-loop
                                        // =>This Inner Loop Header: Depth=1
	cvt.s64.s32 	%rd16, %r12;
	add.s64 	%rd17, %rd6, %rd16;
	ld.global.u8 	%rs1, [%rd17];
	add.s64 	%rd18, %rd5, %rd16;
	st.local.u8 	[%rd18], %rs1;
	add.s32 	%r12, %r12, 1;
	setp.lt.u32 	%p1, %r12, 628;
	@%p1 bra 	$L__BB2_1;
// %bb.2:                               // %memcpy-split
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd15;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r1;
	call.uni 
	__mutateCalldata, 
	(
	param0, 
	param1
	);
	} // callseq 3
	mov.u32 	%r9, 0;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd2;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd4;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r2;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd15;
	.param .b64 param5;
	st.param.b64 	[param5+0], %rd1;
	.param .b64 param6;
	st.param.b64 	[param6+0], %rd1;
	.param .b32 param7;
	st.param.b32 	[param7+0], %r9;
	.param .b32 retval0;
	call.uni (retval0), 
	contract, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32 	%r10, [retval0+0];
	} // callseq 4
	ret;
                                        // -- End function
}
.func  (.param .b32 func_retval0) contract(
	.param .b64 contract_param_0,
	.param .b64 contract_param_1,
	.param .b64 contract_param_2,
	.param .b32 contract_param_3,
	.param .b64 contract_param_4,
	.param .b64 contract_param_5,
	.param .b64 contract_param_6,
	.param .b32 contract_param_7
)                                       // -- Begin function contract
                                        // @contract
{
	.local .align 8 .b8 	__local_depot3[2400];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<241>;
	.reg .b16 	%rs<157>;
	.reg .b32 	%r<475>;
	.reg .b64 	%rd<1084>;

// %bb.0:                               // %Entry
	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd80, [contract_param_5];
	ld.param.u64 	%rd79, [contract_param_4];
	ld.param.u32 	%r14, [contract_param_3];
	mov.u64 	%rd84, 728;
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd84;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64 	%rd85, [retval0+0];
	} // callseq 5
	mov.u64 	%rd86, 8192;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd86;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64 	%rd87, [retval0+0];
	} // callseq 6
	ld.global.u8 	%rs1, [%rd80+1383];
	add.s16 	%rs2, %rs1, 1;
	st.global.u8 	[%rd80+1383], %rs2;
	mov.u16 	%rs3, 1;
	st.global.u8 	[__cov_bits+1383], %rs3;
	add.u64 	%rd88, %SP, 0;
	add.u64 	%rd89, %SPL, 0;
	mov.u64 	%rd74, 0;
	st.local.u64 	[%rd89+24], %rd74;
	st.local.u64 	[%rd89+16], %rd74;
	st.local.u64 	[%rd89+8], %rd74;
	mov.u64 	%rd90, 128;
	st.local.u64 	[%rd89], %rd90;
	mov.u64 	%rd91, 64;
	mov.u64 	%rd92, 32;
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd91;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd88;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd92;
	call.uni 
	__device_mstore, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 7
	setp.lt.u32 	%p1, %r14, 4;
	mov.u64 	%rd1083, 142;
	mov.u64 	%rd73, 20904;
	mov.u32 	%r12, 691;
	mov.u64 	%rd1074, __cov_bits;
	@%p1 bra 	$L__BB3_9;
// %bb.1:                               // %.13
	mov.u64 	%rd74, 1;
	ld.global.u8 	%rs4, [%rd80+373];
	add.s16 	%rs5, %rs4, 1;
	st.global.u8 	[%rd80+373], %rs5;
	st.global.u8 	[__cov_bits+373], %rs3;
	add.u64 	%rd96, %SP, 32;
	add.u64 	%rd97, %SPL, 32;
	mov.u64 	%rd4, 0;
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd96;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd79;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd4;
	call.uni 
	__device_calldataload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 8
	ld.local.u64 	%rd98, [%rd97+16];
	ld.local.u64 	%rd99, [%rd97+8];
	ld.local.u64 	%rd100, [%rd97];
	ld.local.u64 	%rd101, [%rd97+24];
	add.u64 	%rd102, %SP, 64;
	add.u64 	%rd103, %SPL, 64;
	st.local.u64 	[%rd103+24], %rd101;
	st.local.u64 	[%rd103], %rd100;
	st.local.u64 	[%rd103+8], %rd99;
	st.local.u64 	[%rd103+16], %rd98;
	add.u64 	%rd104, %SP, 96;
	add.u64 	%rd105, %SPL, 96;
	st.local.u64 	[%rd105+16], %rd4;
	mov.u64 	%rd106, 4294967296;
	st.local.u64 	[%rd105+24], %rd106;
	st.local.u64 	[%rd105], %rd4;
	st.local.u64 	[%rd105+8], %rd4;
	add.u64 	%rd107, %SP, 128;
	add.u64 	%rd108, %SPL, 128;
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd102;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd104;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd107;
	call.uni 
	evm_$_udiv_$_i256, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 9
	ld.local.u32 	%rd3, [%rd108];
	setp.eq.s64 	%p2, %rd3, 642448253;
	st.u64 	[%rd87+56], %rd4;
	st.u64 	[%rd87+48], %rd4;
	st.u64 	[%rd87+40], %rd4;
	st.u64 	[%rd87+32], %rd3;
	mov.u64 	%rd1083, 147;
	mov.u64 	%rd73, 20704;
	mov.u32 	%r12, 483;
	@%p2 bra 	$L__BB3_9;
// %bb.2:                               // %.65
	ld.global.u8 	%rs7, [%rd80+2442];
	add.s16 	%rs8, %rs7, 1;
	st.global.u8 	[%rd80+2442], %rs8;
	st.global.u8 	[__cov_bits+2442], %rs3;
	setp.eq.s64 	%p3, %rd3, 928798896;
	st.u64 	[%rd87+56], %rd4;
	st.u64 	[%rd87+48], %rd4;
	st.u64 	[%rd87+40], %rd4;
	st.u64 	[%rd87+32], %rd3;
	mov.u64 	%rd1083, 222;
	mov.u64 	%rd73, 20584;
	mov.u32 	%r12, 1076;
	@%p3 bra 	$L__BB3_9;
// %bb.3:                               // %.76
	ld.global.u8 	%rs10, [%rd80+3143];
	add.s16 	%rs11, %rs10, 1;
	st.global.u8 	[%rd80+3143], %rs11;
	st.global.u8 	[__cov_bits+3143], %rs3;
	setp.eq.s64 	%p4, %rd3, 1015219987;
	st.u64 	[%rd87+56], %rd4;
	st.u64 	[%rd87+48], %rd4;
	st.u64 	[%rd87+40], %rd4;
	st.u64 	[%rd87+32], %rd3;
	mov.u64 	%rd1083, 297;
	mov.u64 	%rd73, 20464;
	mov.u32 	%r12, 1081;
	@%p4 bra 	$L__BB3_9;
// %bb.4:                               // %.87
	ld.global.u8 	%rs13, [%rd80+2152];
	add.s16 	%rs14, %rs13, 1;
	st.global.u8 	[%rd80+2152], %rs14;
	st.global.u8 	[__cov_bits+2152], %rs3;
	setp.eq.s64 	%p5, %rd3, 1183395171;
	st.u64 	[%rd87+56], %rd4;
	st.u64 	[%rd87+48], %rd4;
	st.u64 	[%rd87+40], %rd4;
	st.u64 	[%rd87+32], %rd3;
	mov.u64 	%rd1083, 372;
	mov.u64 	%rd73, 20344;
	mov.u32 	%r12, 1576;
	@%p5 bra 	$L__BB3_9;
// %bb.5:                               // %.98
	ld.global.u8 	%rs16, [%rd80+2775];
	add.s16 	%rs17, %rs16, 1;
	st.global.u8 	[%rd80+2775], %rs17;
	st.global.u8 	[__cov_bits+2775], %rs3;
	setp.eq.s64 	%p6, %rd3, 1698111815;
	st.u64 	[%rd87+56], %rd4;
	st.u64 	[%rd87+48], %rd4;
	st.u64 	[%rd87+40], %rd4;
	st.u64 	[%rd87+32], %rd3;
	mov.u64 	%rd1083, 447;
	mov.u64 	%rd73, 20224;
	mov.u32 	%r12, 1663;
	@%p6 bra 	$L__BB3_9;
// %bb.6:                               // %.109
	ld.global.u8 	%rs19, [%rd80+565];
	add.s16 	%rs20, %rs19, 1;
	st.global.u8 	[%rd80+565], %rs20;
	st.global.u8 	[__cov_bits+565], %rs3;
	setp.eq.s64 	%p7, %rd3, 2953925346;
	st.u64 	[%rd87+56], %rd4;
	st.u64 	[%rd87+48], %rd4;
	st.u64 	[%rd87+40], %rd4;
	st.u64 	[%rd87+32], %rd3;
	mov.u64 	%rd1083, 490;
	mov.u64 	%rd73, 20104;
	mov.u32 	%r12, 549;
	@%p7 bra 	$L__BB3_9;
// %bb.7:                               // %.120
	ld.global.u8 	%rs22, [%rd80+2761];
	add.s16 	%rs23, %rs22, 1;
	st.global.u8 	[%rd80+2761], %rs23;
	st.global.u8 	[__cov_bits+2761], %rs3;
	setp.eq.s64 	%p8, %rd3, 3225657940;
	st.u64 	[%rd87+56], %rd4;
	st.u64 	[%rd87+48], %rd4;
	st.u64 	[%rd87+40], %rd4;
	st.u64 	[%rd87+32], %rd3;
	mov.u64 	%rd1083, 565;
	mov.u64 	%rd73, 19984;
	mov.u32 	%r12, 1142;
	@%p8 bra 	$L__BB3_9;
// %bb.8:                               // %.131
	mov.u32 	%r13, 0;
	ld.global.u8 	%rs25, [%rd80+2911];
	add.s16 	%rs26, %rs25, 1;
	st.global.u8 	[%rd80+2911], %rs26;
	st.global.u8 	[__cov_bits+2911], %rs3;
	setp.ne.s64 	%p9, %rd3, 4291659835;
	st.u64 	[%rd87+56], %rd4;
	st.u64 	[%rd87+48], %rd4;
	st.u64 	[%rd87+40], %rd4;
	st.u64 	[%rd87+32], %rd3;
	mov.u64 	%rd1083, 608;
	mov.u64 	%rd73, 19864;
	mov.u32 	%r12, 1940;
	@%p9 bra 	$L__BB3_10;
$L__BB3_9:                              // %JumpTable.preheader
	ld.param.u64 	%rd78, [contract_param_2];
	ld.param.u64 	%rd77, [contract_param_1];
	ld.param.u64 	%rd76, [contract_param_0];
	mov.u32 	%r13, 0;
	setp.eq.s64 	%p238, %rd78, 0;
	mov.u32 	%r462, 1117;
	selp.b32 	%r446, 4, 0, %p1;
$L__BB3_98:                             // %JumpTable
                                        // =>This Inner Loop Header: Depth=1
	setp.gt.s64 	%p10, %rd1083, 576;
	@%p10 bra 	$L__BB3_126;
// %bb.99:                              // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.gt.s64 	%p32, %rd1083, 371;
	@%p32 bra 	$L__BB3_113;
	bra.uni 	$L__BB3_100;
$L__BB3_113:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.gt.s64 	%p33, %rd1083, 467;
	@%p33 bra 	$L__BB3_120;
// %bb.114:                             // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.gt.s64 	%p40, %rd1083, 424;
	@%p40 bra 	$L__BB3_117;
	bra.uni 	$L__BB3_115;
$L__BB3_117:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p41, %rd1083, 447;
	@%p41 bra 	$L__BB3_44;
// %bb.118:                             // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p42, %rd1083, 459;
	@%p42 bra 	$L__BB3_48;
	bra.uni 	$L__BB3_119;
$L__BB3_48:                             // %.459
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p170, %rd73, 128;
	@%p170 bra 	$L__BB3_147;
// %bb.49:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r277, %r12, 563;
	cvt.s64.s32 	%rd674, %r277;
	add.s64 	%rd676, %rd1074, %rd674;
	xor.b32  	%r278, %r13, %r277;
	cvt.s64.s32 	%rd677, %r278;
	add.s64 	%rd678, %rd80, %rd677;
	ld.global.u8 	%rs88, [%rd678];
	add.s16 	%rs89, %rs88, 1;
	st.global.u8 	[%rd678], %rs89;
	st.global.u8 	[%rd676], %rs3;
	add.s64 	%rd73, %rd73, -128;
	shl.b64 	%rd679, %rd74, 5;
	add.s64 	%rd680, %rd87, %rd679;
	mov.u64 	%rd681, 0;
	st.u64 	[%rd680+24], %rd681;
	st.u64 	[%rd680+16], %rd681;
	st.u64 	[%rd680+8], %rd681;
	mov.u64 	%rd682, 468;
	st.u64 	[%rd680], %rd682;
	mov.u64 	%rd1083, 771;
	mov.u32 	%r12, 281;
	bra.uni 	$L__BB3_98;
$L__BB3_126:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.gt.s64 	%p11, %rd1083, 748;
	@%p11 bra 	$L__BB3_138;
	bra.uni 	$L__BB3_127;
$L__BB3_138:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.gt.s64 	%p12, %rd1083, 798;
	@%p12 bra 	$L__BB3_142;
	bra.uni 	$L__BB3_139;
$L__BB3_142:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.gt.s64 	%p13, %rd1083, 818;
	@%p13 bra 	$L__BB3_145;
// %bb.143:                             // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p16, %rd1083, 799;
	@%p16 bra 	$L__BB3_89;
// %bb.144:                             // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p17, %rd1083, 805;
	@%p17 bra 	$L__BB3_91;
	bra.uni 	$L__BB3_147;
$L__BB3_91:                             // %.805
                                        //   in Loop: Header=BB3_98 Depth=1
	shl.b64 	%rd233, %rd74, 5;
	add.s64 	%rd234, %rd87, %rd233;
	mov.u64 	%rd235, 0;
	st.u64 	[%rd234+56], %rd235;
	st.u64 	[%rd234+48], %rd235;
	st.u64 	[%rd234+40], %rd235;
	st.u64 	[%rd234+32], %rd235;
	st.u64 	[%rd234+88], %rd235;
	st.u64 	[%rd234+80], %rd235;
	st.u64 	[%rd234+72], %rd235;
	mov.u64 	%rd236, 1;
	st.u64 	[%rd234+64], %rd236;
	add.s64 	%rd74, %rd74, 3;
	st.u64 	[%rd234+120], %rd235;
	st.u64 	[%rd234+112], %rd235;
	st.u64 	[%rd234+104], %rd235;
	st.u64 	[%rd234+96], %rd235;
	bra.uni 	$L__BB3_92;
$L__BB3_100:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.gt.s64 	%p46, %rd1083, 233;
	@%p46 bra 	$L__BB3_107;
// %bb.101:                             // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.gt.s64 	%p53, %rd1083, 158;
	@%p53 bra 	$L__BB3_104;
	bra.uni 	$L__BB3_102;
$L__BB3_104:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p54, %rd1083, 159;
	@%p54 bra 	$L__BB3_16;
// %bb.105:                             // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p55, %rd1083, 222;
	@%p55 bra 	$L__BB3_20;
	bra.uni 	$L__BB3_106;
$L__BB3_20:                             // %.222
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p234, %rd73, 104;
	@%p234 bra 	$L__BB3_147;
// %bb.21:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r459, %r12, 2531;
	cvt.s64.s32 	%rd1048, %r459;
	add.s64 	%rd1050, %rd1074, %rd1048;
	xor.b32  	%r460, %r13, %r459;
	cvt.s64.s32 	%rd1051, %r460;
	add.s64 	%rd1052, %rd80, %rd1051;
	ld.global.u8 	%rs142, [%rd1052];
	add.s16 	%rs143, %rs142, 1;
	st.global.u8 	[%rd1052], %rs143;
	st.global.u8 	[%rd1050], %rs3;
	add.s64 	%rd73, %rd73, -104;
	add.s64 	%rd16, %rd74, 1;
	shl.b64 	%rd1053, %rd74, 5;
	add.s64 	%rd1054, %rd87, %rd1053;
	mov.u64 	%rd1055, 0;
	st.u64 	[%rd1054+56], %rd1055;
	st.u64 	[%rd1054+48], %rd1055;
	st.u64 	[%rd1054+40], %rd1055;
	st.u64 	[%rd1054+32], %rd78;
	mov.u64 	%rd1083, 234;
	mov.u32 	%r12, 1265;
	mov.u64 	%rd74, %rd16;
	@%p238 bra 	$L__BB3_98;
	bra.uni 	$L__BB3_22;
$L__BB3_127:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.gt.s64 	%p21, %rd1083, 660;
	@%p21 bra 	$L__BB3_133;
// %bb.128:                             // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.gt.s64 	%p27, %rd1083, 607;
	@%p27 bra 	$L__BB3_131;
	bra.uni 	$L__BB3_129;
$L__BB3_131:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p28, %rd1083, 608;
	@%p28 bra 	$L__BB3_68;
// %bb.132:                             // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p29, %rd1083, 620;
	@%p29 bra 	$L__BB3_72;
	bra.uni 	$L__BB3_147;
$L__BB3_72:                             // %.620
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p107, %rd73, 344;
	@%p107 bra 	$L__BB3_147;
// %bb.73:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r124, %r12, 293;
	cvt.s64.s32 	%rd397, %r124;
	add.s64 	%rd399, %rd1074, %rd397;
	xor.b32  	%r125, %r13, %r124;
	cvt.s64.s32 	%rd400, %r125;
	add.s64 	%rd401, %rd80, %rd400;
	ld.global.u8 	%rs49, [%rd401];
	add.s16 	%rs50, %rs49, 1;
	st.global.u8 	[%rd401], %rs50;
	st.global.u8 	[%rd399], %rs3;
	add.s64 	%rd73, %rd73, -344;
	shl.b64 	%rd402, %rd74, 5;
	add.s64 	%rd403, %rd87, %rd402;
	{ // callseq 43, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r126, [retval0+0];
	} // callseq 43
	mov.u32 	%r129, 629;
	{ // callseq 44, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r126;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r446;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r129;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 44
	{ // callseq 45, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r130, [retval0+0];
	} // callseq 45
	mov.u32 	%r132, 631;
	{ // callseq 46, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r130;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r446;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r132;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 46
	add.u64 	%rd404, %SP, 1152;
	add.u64 	%rd405, %SPL, 1152;
	mov.u64 	%rd406, 4;
	{ // callseq 47, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd404;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd79;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd406;
	call.uni 
	__device_calldataload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 47
	ld.local.u64 	%rd407, [%rd405];
	ld.local.u64 	%rd408, [%rd405+8];
	ld.local.u64 	%rd409, [%rd405+16];
	ld.local.u64 	%rd410, [%rd405+24];
	{ // callseq 48, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r133, [retval0+0];
	} // callseq 48
	mov.u32 	%r135, 0;
	mov.u32 	%r136, 639;
	{ // callseq 49, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r133;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r135;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r136;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 49
	add.u64 	%rd411, %SP, 1184;
	add.u64 	%rd412, %SPL, 1184;
	mov.u64 	%rd413, 36;
	{ // callseq 50, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd411;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd79;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd413;
	call.uni 
	__device_calldataload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 50
	ld.local.u64 	%rd414, [%rd412];
	ld.local.u64 	%rd415, [%rd412+8];
	ld.local.u64 	%rd416, [%rd412+16];
	ld.local.u64 	%rd417, [%rd412+24];
	{ // callseq 51, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r137, [retval0+0];
	} // callseq 51
	mov.u32 	%r139, 649;
	{ // callseq 52, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r137;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r135;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r139;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 52
	mov.u64 	%rd418, 0;
	st.u64 	[%rd403+24], %rd418;
	st.u64 	[%rd403+16], %rd418;
	st.u64 	[%rd403+8], %rd418;
	mov.u64 	%rd419, 661;
	st.u64 	[%rd403], %rd419;
	add.s64 	%rd74, %rd74, 2;
	st.u64 	[%rd403+56], %rd410;
	st.u64 	[%rd403+48], %rd409;
	st.u64 	[%rd403+40], %rd408;
	st.u64 	[%rd403+32], %rd407;
	st.u64 	[%rd403+88], %rd417;
	st.u64 	[%rd403+80], %rd416;
	st.u64 	[%rd403+72], %rd415;
	st.u64 	[%rd403+64], %rd414;
	mov.u64 	%rd1083, 805;
	mov.u32 	%r12, 146;
	bra.uni 	$L__BB3_98;
$L__BB3_120:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.gt.s64 	%p34, %rd1083, 501;
	@%p34 bra 	$L__BB3_123;
	bra.uni 	$L__BB3_121;
$L__BB3_123:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p35, %rd1083, 502;
	@%p35 bra 	$L__BB3_56;
// %bb.124:                             // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p36, %rd1083, 565;
	@%p36 bra 	$L__BB3_60;
	bra.uni 	$L__BB3_125;
$L__BB3_60:                             // %.565
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p147, %rd73, 104;
	@%p147 bra 	$L__BB3_147;
// %bb.61:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r233, %r12, 13;
	cvt.s64.s32 	%rd592, %r233;
	add.s64 	%rd594, %rd1074, %rd592;
	xor.b32  	%r234, %r13, %r233;
	cvt.s64.s32 	%rd595, %r234;
	add.s64 	%rd596, %rd80, %rd595;
	ld.global.u8 	%rs76, [%rd596];
	add.s16 	%rs77, %rs76, 1;
	st.global.u8 	[%rd596], %rs77;
	st.global.u8 	[%rd594], %rs3;
	add.s64 	%rd73, %rd73, -104;
	add.s64 	%rd35, %rd74, 1;
	shl.b64 	%rd597, %rd74, 5;
	add.s64 	%rd598, %rd87, %rd597;
	mov.u64 	%rd599, 0;
	st.u64 	[%rd598+56], %rd599;
	st.u64 	[%rd598+48], %rd599;
	st.u64 	[%rd598+40], %rd599;
	st.u64 	[%rd598+32], %rd78;
	mov.u64 	%rd1083, 577;
	mov.u32 	%r12, 6;
	mov.u64 	%rd74, %rd35;
	@%p238 bra 	$L__BB3_98;
	bra.uni 	$L__BB3_62;
$L__BB3_107:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.gt.s64 	%p47, %rd1083, 296;
	@%p47 bra 	$L__BB3_110;
	bra.uni 	$L__BB3_108;
$L__BB3_110:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p48, %rd1083, 297;
	@%p48 bra 	$L__BB3_28;
// %bb.111:                             // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p49, %rd1083, 309;
	@%p49 bra 	$L__BB3_32;
	bra.uni 	$L__BB3_112;
$L__BB3_32:                             // %.309
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p219, %rd73, 344;
	@%p219 bra 	$L__BB3_147;
// %bb.33:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r386, %r12, 795;
	cvt.s64.s32 	%rd874, %r386;
	add.s64 	%rd876, %rd1074, %rd874;
	xor.b32  	%r387, %r13, %r386;
	cvt.s64.s32 	%rd877, %r387;
	add.s64 	%rd878, %rd80, %rd877;
	ld.global.u8 	%rs118, [%rd878];
	add.s16 	%rs119, %rs118, 1;
	st.global.u8 	[%rd878], %rs119;
	st.global.u8 	[%rd876], %rs3;
	add.s64 	%rd73, %rd73, -344;
	shl.b64 	%rd879, %rd74, 5;
	add.s64 	%rd880, %rd87, %rd879;
	{ // callseq 137, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r388, [retval0+0];
	} // callseq 137
	mov.u32 	%r391, 318;
	{ // callseq 138, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r388;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r446;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r391;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 138
	{ // callseq 139, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r392, [retval0+0];
	} // callseq 139
	mov.u32 	%r394, 320;
	{ // callseq 140, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r392;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r446;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r394;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 140
	add.u64 	%rd881, %SP, 480;
	add.u64 	%rd882, %SPL, 480;
	mov.u64 	%rd883, 4;
	{ // callseq 141, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd881;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd79;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd883;
	call.uni 
	__device_calldataload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 141
	ld.local.u64 	%rd884, [%rd882];
	ld.local.u64 	%rd885, [%rd882+8];
	ld.local.u64 	%rd886, [%rd882+16];
	ld.local.u64 	%rd887, [%rd882+24];
	{ // callseq 142, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r395, [retval0+0];
	} // callseq 142
	mov.u32 	%r397, 0;
	mov.u32 	%r398, 328;
	{ // callseq 143, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r395;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r397;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r398;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 143
	add.u64 	%rd888, %SP, 512;
	add.u64 	%rd889, %SPL, 512;
	mov.u64 	%rd890, 36;
	{ // callseq 144, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd888;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd79;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd890;
	call.uni 
	__device_calldataload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 144
	ld.local.u64 	%rd891, [%rd889];
	ld.local.u64 	%rd892, [%rd889+8];
	ld.local.u64 	%rd893, [%rd889+16];
	ld.local.u64 	%rd894, [%rd889+24];
	{ // callseq 145, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r399, [retval0+0];
	} // callseq 145
	mov.u32 	%r401, 338;
	{ // callseq 146, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r399;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r397;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r401;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 146
	mov.u64 	%rd895, 0;
	st.u64 	[%rd880+24], %rd895;
	st.u64 	[%rd880+16], %rd895;
	st.u64 	[%rd880+8], %rd895;
	mov.u64 	%rd896, 350;
	st.u64 	[%rd880], %rd896;
	add.s64 	%rd74, %rd74, 2;
	st.u64 	[%rd880+56], %rd887;
	st.u64 	[%rd880+48], %rd886;
	st.u64 	[%rd880+40], %rd885;
	st.u64 	[%rd880+32], %rd884;
	st.u64 	[%rd880+88], %rd894;
	st.u64 	[%rd880+80], %rd893;
	st.u64 	[%rd880+72], %rd892;
	st.u64 	[%rd880+64], %rd891;
	mov.u64 	%rd1083, 727;
	mov.u32 	%r12, 397;
	bra.uni 	$L__BB3_98;
$L__BB3_133:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.gt.s64 	%p22, %rd1083, 704;
	@%p22 bra 	$L__BB3_136;
	bra.uni 	$L__BB3_134;
$L__BB3_136:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p23, %rd1083, 705;
	@%p23 bra 	$L__BB3_79;
// %bb.137:                             // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p24, %rd1083, 727;
	@%p24 bra 	$L__BB3_81;
	bra.uni 	$L__BB3_147;
$L__BB3_81:                             // %.727
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p185, %rd73, 320;
	@%p185 bra 	$L__BB3_147;
// %bb.82:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r303, %r12, 2136;
	cvt.s64.s32 	%rd730, %r303;
	add.s64 	%rd732, %rd1074, %rd730;
	xor.b32  	%r304, %r13, %r303;
	cvt.s64.s32 	%rd733, %r304;
	add.s64 	%rd734, %rd80, %rd733;
	ld.global.u8 	%rs100, [%rd734];
	add.s16 	%rs101, %rs100, 1;
	st.global.u8 	[%rd734], %rs101;
	st.global.u8 	[%rd732], %rs3;
	add.s64 	%rd73, %rd73, -320;
	shl.b64 	%rd735, %rd74, 5;
	add.s64 	%rd736, %rd87, %rd735;
	ld.u64 	%rd737, [%rd736];
	ld.u64 	%rd738, [%rd736+8];
	ld.u64 	%rd739, [%rd736+16];
	ld.u64 	%rd740, [%rd736+24];
	ld.u64 	%rd741, [%rd736+-32];
	ld.u64 	%rd742, [%rd736+-24];
	ld.u64 	%rd743, [%rd736+-16];
	ld.u64 	%rd744, [%rd736+-8];
	add.s64 	%rd74, %rd74, -2;
	ld.u64 	%rd1083, [%rd736+-64];
	setp.eq.s64 	%p186, %rd744, %rd740;
	setp.lt.u64 	%p187, %rd744, %rd740;
	selp.u32 	%r305, -1, 0, %p187;
	setp.lt.u64 	%p188, %rd743, %rd739;
	selp.u32 	%r306, -1, 0, %p188;
	selp.b32 	%r307, %r306, %r305, %p186;
	setp.eq.s64 	%p189, %rd742, %rd738;
	setp.lt.u64 	%p190, %rd742, %rd738;
	selp.u32 	%r308, -1, 0, %p190;
	setp.lt.u64 	%p191, %rd741, %rd737;
	selp.u32 	%r309, -1, 0, %p191;
	selp.b32 	%r310, %r309, %r308, %p189;
	xor.b64  	%rd745, %rd744, %rd740;
	xor.b64  	%rd746, %rd743, %rd739;
	or.b64  	%rd747, %rd746, %rd745;
	setp.eq.s64 	%p192, %rd747, 0;
	selp.b32 	%r311, %r310, %r307, %p192;
	and.b32  	%r312, %r311, 1;
	setp.eq.b32 	%p193, %r312, 1;
	{ // callseq 106, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r313, [retval0+0];
	} // callseq 106
	selp.b32 	%r315, 4, 0, %p193;
	mov.u32 	%r316, 732;
	{ // callseq 107, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r313;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r315;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r316;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 107
	sub.cc.s64 	%rd748, %rd741, %rd737;
	subc.cc.s64 	%rd749, %rd742, %rd738;
	subc.cc.s64 	%rd750, %rd743, %rd739;
	subc.cc.s64 	%rd751, %rd744, %rd740;
	add.u64 	%rd752, %SP, 1664;
	add.u64 	%rd753, %SPL, 1664;
	mov.u64 	%rd754, 0;
	st.local.u64 	[%rd753+24], %rd754;
	st.local.u64 	[%rd753+16], %rd754;
	st.local.u64 	[%rd753+8], %rd754;
	mov.u64 	%rd755, 1;
	st.local.u64 	[%rd753], %rd755;
	add.u64 	%rd756, %SP, 1696;
	add.u64 	%rd757, %SPL, 1696;
	st.local.u64 	[%rd757+16], %rd750;
	st.local.u64 	[%rd757+24], %rd751;
	st.local.u64 	[%rd757], %rd748;
	st.local.u64 	[%rd757+8], %rd749;
	{ // callseq 108, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd76;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd77;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd752;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd756;
	call.uni 
	__device_sstore, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 108
	add.u64 	%rd758, %SP, 1728;
	add.u64 	%rd759, %SPL, 1728;
	st.local.u64 	[%rd759+24], %rd754;
	st.local.u64 	[%rd759+16], %rd754;
	st.local.u64 	[%rd759+8], %rd754;
	st.local.u64 	[%rd759], %rd755;
	add.u64 	%rd760, %SP, 1760;
	add.u64 	%rd761, %SPL, 1760;
	ld.global.u8 	%r317, [%rd77];
	{ // callseq 109, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd76;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r317;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd758;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd760;
	call.uni 
	__device_sload, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 109
	{ // callseq 110, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd758;
	.param .b32 retval0;
	call.uni (retval0), 
	__hashword, 
	(
	param0
	);
	ld.param.b32 	%r318, [retval0+0];
	} // callseq 110
	{ // callseq 111, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd760;
	.param .b32 retval0;
	call.uni (retval0), 
	__hashword, 
	(
	param0
	);
	ld.param.b32 	%r320, [retval0+0];
	} // callseq 111
	xor.b32  	%r322, %r318, %r320;
	and.b32  	%r13, %r322, 4095;
	ld.local.u64 	%rd762, [%rd761+8];
	ld.local.u64 	%rd763, [%rd761];
	ld.local.u64 	%rd764, [%rd761+24];
	ld.local.u64 	%rd765, [%rd761+16];
	st.u64 	[%rd736+-48], %rd765;
	st.u64 	[%rd736+-40], %rd764;
	st.u64 	[%rd736+-64], %rd763;
	st.u64 	[%rd736+-56], %rd762;
	mov.u32 	%r12, 1068;
	bra.uni 	$L__BB3_98;
$L__BB3_139:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p18, %rd1083, 749;
	@%p18 bra 	$L__BB3_83;
// %bb.140:                             // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p19, %rd1083, 771;
	@%p19 bra 	$L__BB3_85;
// %bb.141:                             // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p20, %rd1083, 777;
	@%p20 bra 	$L__BB3_87;
	bra.uni 	$L__BB3_147;
$L__BB3_87:                             // %.777
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p120, %rd73, 320;
	@%p120 bra 	$L__BB3_147;
// %bb.88:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r160, %r12, 2260;
	cvt.s64.s32 	%rd456, %r160;
	add.s64 	%rd458, %rd1074, %rd456;
	xor.b32  	%r161, %r13, %r160;
	cvt.s64.s32 	%rd459, %r161;
	add.s64 	%rd460, %rd80, %rd459;
	ld.global.u8 	%rs55, [%rd460];
	add.s16 	%rs56, %rs55, 1;
	st.global.u8 	[%rd460], %rs56;
	st.global.u8 	[%rd458], %rs3;
	add.s64 	%rd73, %rd73, -320;
	shl.b64 	%rd461, %rd74, 5;
	add.s64 	%rd462, %rd87, %rd461;
	ld.u64 	%rd463, [%rd462];
	ld.u64 	%rd464, [%rd462+8];
	ld.u64 	%rd465, [%rd462+16];
	ld.u64 	%rd466, [%rd462+24];
	ld.u64 	%rd467, [%rd462+-32];
	ld.u64 	%rd468, [%rd462+-24];
	ld.u64 	%rd469, [%rd462+-16];
	ld.u64 	%rd470, [%rd462+-8];
	add.s64 	%rd74, %rd74, -2;
	ld.u64 	%rd1083, [%rd462+-64];
	setp.eq.s64 	%p121, %rd470, %rd466;
	setp.lt.u64 	%p122, %rd470, %rd466;
	selp.u32 	%r162, -1, 0, %p122;
	setp.lt.u64 	%p123, %rd469, %rd465;
	selp.u32 	%r163, -1, 0, %p123;
	selp.b32 	%r164, %r163, %r162, %p121;
	setp.eq.s64 	%p124, %rd468, %rd464;
	setp.lt.u64 	%p125, %rd468, %rd464;
	selp.u32 	%r165, -1, 0, %p125;
	setp.lt.u64 	%p126, %rd467, %rd463;
	selp.u32 	%r166, -1, 0, %p126;
	selp.b32 	%r167, %r166, %r165, %p124;
	xor.b64  	%rd471, %rd470, %rd466;
	xor.b64  	%rd472, %rd469, %rd465;
	or.b64  	%rd473, %rd472, %rd471;
	setp.eq.s64 	%p127, %rd473, 0;
	selp.b32 	%r168, %r167, %r164, %p127;
	and.b32  	%r169, %r168, 1;
	setp.eq.b32 	%p128, %r169, 1;
	{ // callseq 60, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r170, [retval0+0];
	} // callseq 60
	selp.b32 	%r172, 4, 0, %p128;
	mov.u32 	%r173, 782;
	{ // callseq 61, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r170;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r172;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r173;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 61
	sub.cc.s64 	%rd474, %rd467, %rd463;
	subc.cc.s64 	%rd475, %rd468, %rd464;
	subc.cc.s64 	%rd476, %rd469, %rd465;
	subc.cc.s64 	%rd477, %rd470, %rd466;
	add.u64 	%rd478, %SP, 1984;
	add.u64 	%rd479, %SPL, 1984;
	mov.u64 	%rd480, 0;
	st.local.u64 	[%rd479+24], %rd480;
	st.local.u64 	[%rd479+16], %rd480;
	st.local.u64 	[%rd479+8], %rd480;
	st.local.u64 	[%rd479], %rd480;
	add.u64 	%rd481, %SP, 2016;
	add.u64 	%rd482, %SPL, 2016;
	st.local.u64 	[%rd482+16], %rd476;
	st.local.u64 	[%rd482+24], %rd477;
	st.local.u64 	[%rd482], %rd474;
	st.local.u64 	[%rd482+8], %rd475;
	{ // callseq 62, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd76;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd77;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd478;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd481;
	call.uni 
	__device_sstore, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 62
	add.u64 	%rd483, %SP, 2048;
	add.u64 	%rd484, %SPL, 2048;
	st.local.u64 	[%rd484+24], %rd480;
	st.local.u64 	[%rd484+16], %rd480;
	st.local.u64 	[%rd484+8], %rd480;
	st.local.u64 	[%rd484], %rd480;
	add.u64 	%rd485, %SP, 2080;
	add.u64 	%rd486, %SPL, 2080;
	ld.global.u8 	%r174, [%rd77];
	{ // callseq 63, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd76;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r174;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd483;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd485;
	call.uni 
	__device_sload, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 63
	{ // callseq 64, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd483;
	.param .b32 retval0;
	call.uni (retval0), 
	__hashword, 
	(
	param0
	);
	ld.param.b32 	%r175, [retval0+0];
	} // callseq 64
	{ // callseq 65, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd485;
	.param .b32 retval0;
	call.uni (retval0), 
	__hashword, 
	(
	param0
	);
	ld.param.b32 	%r177, [retval0+0];
	} // callseq 65
	xor.b32  	%r179, %r175, %r177;
	and.b32  	%r13, %r179, 4095;
	ld.local.u64 	%rd487, [%rd486+8];
	ld.local.u64 	%rd488, [%rd486];
	ld.local.u64 	%rd489, [%rd486+24];
	ld.local.u64 	%rd490, [%rd486+16];
	st.u64 	[%rd462+-48], %rd490;
	st.u64 	[%rd462+-40], %rd489;
	st.u64 	[%rd462+-64], %rd488;
	st.u64 	[%rd462+-56], %rd487;
	mov.u32 	%r12, 1130;
	bra.uni 	$L__BB3_98;
$L__BB3_115:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p44, %rd1083, 372;
	@%p44 bra 	$L__BB3_36;
// %bb.116:                             // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p45, %rd1083, 384;
	@%p45 bra 	$L__BB3_40;
	bra.uni 	$L__BB3_147;
$L__BB3_40:                             // %.384
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p194, %rd73, 344;
	@%p194 bra 	$L__BB3_147;
// %bb.41:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r324, %r12, 3958;
	cvt.s64.s32 	%rd767, %r324;
	add.s64 	%rd769, %rd1074, %rd767;
	xor.b32  	%r325, %r13, %r324;
	cvt.s64.s32 	%rd770, %r325;
	add.s64 	%rd771, %rd80, %rd770;
	ld.global.u8 	%rs103, [%rd771];
	add.s16 	%rs104, %rs103, 1;
	st.global.u8 	[%rd771], %rs104;
	st.global.u8 	[%rd769], %rs3;
	add.s64 	%rd73, %rd73, -344;
	shl.b64 	%rd772, %rd74, 5;
	add.s64 	%rd773, %rd87, %rd772;
	{ // callseq 112, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r326, [retval0+0];
	} // callseq 112
	mov.u32 	%r329, 393;
	{ // callseq 113, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r326;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r446;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r329;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 113
	{ // callseq 114, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r330, [retval0+0];
	} // callseq 114
	mov.u32 	%r332, 395;
	{ // callseq 115, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r330;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r446;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r332;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 115
	add.u64 	%rd774, %SP, 640;
	add.u64 	%rd775, %SPL, 640;
	mov.u64 	%rd776, 4;
	{ // callseq 116, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd774;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd79;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd776;
	call.uni 
	__device_calldataload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 116
	ld.local.u64 	%rd777, [%rd775];
	ld.local.u64 	%rd778, [%rd775+8];
	ld.local.u64 	%rd779, [%rd775+16];
	ld.local.u64 	%rd780, [%rd775+24];
	{ // callseq 117, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r333, [retval0+0];
	} // callseq 117
	mov.u32 	%r335, 0;
	mov.u32 	%r336, 403;
	{ // callseq 118, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r333;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r335;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r336;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 118
	add.u64 	%rd781, %SP, 672;
	add.u64 	%rd782, %SPL, 672;
	mov.u64 	%rd783, 36;
	{ // callseq 119, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd781;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd79;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd783;
	call.uni 
	__device_calldataload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 119
	ld.local.u64 	%rd784, [%rd782];
	ld.local.u64 	%rd785, [%rd782+8];
	ld.local.u64 	%rd786, [%rd782+16];
	ld.local.u64 	%rd787, [%rd782+24];
	{ // callseq 120, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r337, [retval0+0];
	} // callseq 120
	mov.u32 	%r339, 413;
	{ // callseq 121, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r337;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r335;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r339;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 121
	mov.u64 	%rd788, 0;
	st.u64 	[%rd773+24], %rd788;
	st.u64 	[%rd773+16], %rd788;
	st.u64 	[%rd773+8], %rd788;
	mov.u64 	%rd789, 425;
	st.u64 	[%rd773], %rd789;
	add.s64 	%rd74, %rd74, 2;
	st.u64 	[%rd773+56], %rd780;
	st.u64 	[%rd773+48], %rd779;
	st.u64 	[%rd773+40], %rd778;
	st.u64 	[%rd773+32], %rd777;
	st.u64 	[%rd773+88], %rd787;
	st.u64 	[%rd773+80], %rd786;
	st.u64 	[%rd773+72], %rd785;
	st.u64 	[%rd773+64], %rd784;
	mov.u64 	%rd1083, 749;
	mov.u32 	%r12, 1979;
	bra.uni 	$L__BB3_98;
$L__BB3_145:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p14, %rd1083, 819;
	@%p14 bra 	$L__BB3_92;
// %bb.146:                             // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p15, %rd1083, 845;
	@%p15 bra 	$L__BB3_96;
	bra.uni 	$L__BB3_147;
$L__BB3_96:                             // %.845
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p59, %rd73, 456;
	@%p59 bra 	$L__BB3_147;
// %bb.97:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r27, %r12, 198;
	cvt.s64.s32 	%rd137, %r27;
	add.s64 	%rd139, %rd1074, %rd137;
	xor.b32  	%r28, %r13, %r27;
	cvt.s64.s32 	%rd140, %r28;
	add.s64 	%rd141, %rd80, %rd140;
	ld.global.u8 	%rs28, [%rd141];
	add.s16 	%rs29, %rs28, 1;
	st.global.u8 	[%rd141], %rs29;
	st.global.u8 	[%rd139], %rs3;
	add.s64 	%rd73, %rd73, -456;
	shl.b64 	%rd142, %rd74, 5;
	add.s64 	%rd143, %rd87, %rd142;
	ld.u64 	%rd144, [%rd143+-24];
	ld.u64 	%rd145, [%rd143+-32];
	ld.u64 	%rd146, [%rd143+-8];
	ld.u64 	%rd147, [%rd143+-16];
	add.s64 	%rd74, %rd74, -5;
	ld.u64 	%rd1083, [%rd143+-160];
	add.u64 	%rd148, %SP, 2272;
	add.u64 	%rd149, %SPL, 2272;
	mov.u64 	%rd150, 0;
	st.local.u64 	[%rd149+24], %rd150;
	st.local.u64 	[%rd149], %rd150;
	st.local.u64 	[%rd149+8], %rd150;
	st.local.u64 	[%rd149+16], %rd150;
	add.u64 	%rd151, %SP, 2304;
	add.u64 	%rd152, %SPL, 2304;
	st.local.u64 	[%rd152+16], %rd147;
	st.local.u64 	[%rd152+24], %rd146;
	st.local.u64 	[%rd152], %rd145;
	st.local.u64 	[%rd152+8], %rd144;
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd76;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd77;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd148;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd151;
	call.uni 
	__device_sstore, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 10
	add.u64 	%rd153, %SP, 2336;
	add.u64 	%rd154, %SPL, 2336;
	st.local.u64 	[%rd154+24], %rd150;
	st.local.u64 	[%rd154+16], %rd150;
	st.local.u64 	[%rd154+8], %rd150;
	st.local.u64 	[%rd154], %rd150;
	add.u64 	%rd155, %SP, 2368;
	add.u64 	%rd156, %SPL, 2368;
	ld.global.u8 	%r29, [%rd77];
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd76;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r29;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd153;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd155;
	call.uni 
	__device_sload, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 11
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd153;
	.param .b32 retval0;
	call.uni (retval0), 
	__hashword, 
	(
	param0
	);
	ld.param.b32 	%r30, [retval0+0];
	} // callseq 12
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd155;
	.param .b32 retval0;
	call.uni (retval0), 
	__hashword, 
	(
	param0
	);
	ld.param.b32 	%r32, [retval0+0];
	} // callseq 13
	xor.b32  	%r34, %r30, %r32;
	and.b32  	%r13, %r34, 4095;
	ld.local.u64 	%rd157, [%rd156+8];
	ld.local.u64 	%rd158, [%rd156];
	ld.local.u64 	%rd159, [%rd156+24];
	ld.local.u64 	%rd160, [%rd156+16];
	st.u64 	[%rd143+-144], %rd160;
	st.u64 	[%rd143+-136], %rd159;
	st.u64 	[%rd143+-160], %rd158;
	st.u64 	[%rd143+-152], %rd157;
	mov.u32 	%r12, 99;
	bra.uni 	$L__BB3_98;
$L__BB3_92:                             // %.819
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p82, %rd73, 440;
	@%p82 bra 	$L__BB3_147;
// %bb.93:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r74, %r12, 3250;
	cvt.s64.s32 	%rd238, %r74;
	add.s64 	%rd240, %rd1074, %rd238;
	xor.b32  	%r75, %r13, %r74;
	cvt.s64.s32 	%rd241, %r75;
	add.s64 	%rd242, %rd80, %rd241;
	ld.global.u8 	%rs37, [%rd242];
	add.s16 	%rs38, %rs37, 1;
	st.global.u8 	[%rd242], %rs38;
	st.global.u8 	[%rd240], %rs3;
	add.s64 	%rd73, %rd73, -440;
	shl.b64 	%rd243, %rd74, 5;
	add.s64 	%rd65, %rd87, %rd243;
	ld.u64 	%rd244, [%rd65];
	ld.u64 	%rd245, [%rd65+8];
	ld.u64 	%rd246, [%rd65+16];
	ld.u64 	%rd247, [%rd65+24];
	ld.u64 	%rd248, [%rd65+-96];
	ld.u64 	%rd249, [%rd65+-88];
	ld.u64 	%rd250, [%rd65+-80];
	ld.u64 	%rd251, [%rd65+-72];
	setp.eq.s64 	%p83, %rd247, %rd251;
	setp.ge.u64 	%p84, %rd247, %rd251;
	selp.u32 	%r76, -1, 0, %p84;
	setp.ge.u64 	%p85, %rd246, %rd250;
	selp.u32 	%r77, -1, 0, %p85;
	selp.b32 	%r78, %r77, %r76, %p83;
	setp.eq.s64 	%p86, %rd245, %rd249;
	setp.ge.u64 	%p87, %rd245, %rd249;
	selp.u32 	%r79, -1, 0, %p87;
	setp.ge.u64 	%p88, %rd244, %rd248;
	selp.u32 	%r80, -1, 0, %p88;
	selp.b32 	%r81, %r80, %r79, %p86;
	xor.b64  	%rd252, %rd247, %rd251;
	xor.b64  	%rd253, %rd246, %rd250;
	or.b64  	%rd254, %rd253, %rd252;
	setp.eq.s64 	%p89, %rd254, 0;
	selp.b32 	%r82, %r81, %r78, %p89;
	and.b32  	%r83, %r82, 1;
	setp.eq.b32 	%p90, %r83, 1;
	mov.u64 	%rd1083, 845;
	mov.u32 	%r12, 1625;
	@%p90 bra 	$L__BB3_98;
// %bb.94:                              // %.828
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p91, %rd73, 528;
	@%p91 bra 	$L__BB3_147;
// %bb.95:                              //   in Loop: Header=BB3_98 Depth=1
	add.s64 	%rd66, %rd65, -32;
	add.s64 	%rd67, %rd74, -3;
	add.s64 	%rd68, %rd65, -64;
	xor.b32  	%r85, %r13, 1684;
	cvt.s64.s32 	%rd256, %r85;
	add.s64 	%rd257, %rd80, %rd256;
	ld.global.u8 	%rs40, [%rd257];
	add.s16 	%rs41, %rs40, 1;
	st.global.u8 	[%rd257], %rs41;
	st.global.u8 	[__cov_bits+1684], %rs3;
	add.s64 	%rd73, %rd73, -528;
	ld.u64 	%rd258, [%rd65+24];
	ld.u64 	%rd259, [%rd65+16];
	ld.u64 	%rd260, [%rd65+8];
	ld.u64 	%rd261, [%rd65];
	ld.u64 	%rd262, [%rd65+-16];
	ld.u64 	%rd263, [%rd65+-32];
	ld.u64 	%rd264, [%rd65+-8];
	ld.u64 	%rd265, [%rd65+-24];
	ld.u64 	%rd266, [%rd66+-32];
	ld.u64 	%rd267, [%rd66+-24];
	ld.u64 	%rd268, [%rd66+-16];
	ld.u64 	%rd269, [%rd66+-8];
	ld.u64 	%rd270, [%rd68+-16];
	ld.u64 	%rd271, [%rd68+-24];
	ld.u64 	%rd272, [%rd68+-32];
	ld.u64 	%rd273, [%rd68+-8];
	shl.b64 	%rd274, %rd67, 5;
	add.s64 	%rd275, %rd87, %rd274;
	ld.u64 	%rd276, [%rd275+-8];
	ld.u64 	%rd277, [%rd275+-16];
	ld.u64 	%rd278, [%rd275+-24];
	ld.u64 	%rd279, [%rd275+-32];
	or.b64  	%rd280, %rd265, %rd264;
	or.b64  	%rd281, %rd263, %rd262;
	or.b64  	%rd282, %rd281, %rd280;
	setp.ne.s64 	%p92, %rd282, 0;
	mul.hi.u64 	%rd283, %rd263, %rd279;
	mul.lo.s64 	%rd284, %rd265, %rd279;
	mul.hi.u64 	%rd285, %rd265, %rd279;
	add.cc.s64 	%rd286, %rd284, %rd283;
	addc.cc.s64 	%rd287, %rd285, 0;
	mul.lo.s64 	%rd288, %rd263, %rd278;
	mul.hi.u64 	%rd289, %rd263, %rd278;
	add.cc.s64 	%rd290, %rd288, %rd286;
	addc.cc.s64 	%rd291, %rd289, 0;
	mov.u64 	%rd292, 0;
	add.cc.s64 	%rd293, %rd287, %rd291;
	addc.cc.s64 	%rd294, %rd292, 0;
	mul.lo.s64 	%rd295, %rd265, %rd278;
	mul.hi.u64 	%rd296, %rd265, %rd278;
	add.cc.s64 	%rd297, %rd295, %rd293;
	addc.cc.s64 	%rd298, %rd296, %rd294;
	mul.lo.s64 	%rd299, %rd279, %rd264;
	mul.hi.u64 	%rd300, %rd279, %rd262;
	add.s64 	%rd301, %rd300, %rd299;
	mul.lo.s64 	%rd302, %rd278, %rd262;
	add.s64 	%rd303, %rd301, %rd302;
	mul.lo.s64 	%rd304, %rd277, %rd265;
	mul.hi.u64 	%rd305, %rd277, %rd263;
	add.s64 	%rd306, %rd305, %rd304;
	mul.lo.s64 	%rd307, %rd276, %rd263;
	add.s64 	%rd308, %rd306, %rd307;
	mul.lo.s64 	%rd309, %rd279, %rd262;
	mul.lo.s64 	%rd310, %rd277, %rd263;
	add.cc.s64 	%rd311, %rd310, %rd309;
	addc.cc.s64 	%rd312, %rd308, %rd303;
	add.cc.s64 	%rd313, %rd297, %rd311;
	addc.cc.s64 	%rd314, %rd298, %rd312;
	mul.lo.s64 	%rd315, %rd263, %rd279;
	add.u64 	%rd316, %SP, 2176;
	add.u64 	%rd317, %SPL, 2176;
	st.local.u64 	[%rd317], %rd315;
	st.local.u64 	[%rd317+8], %rd290;
	st.local.u64 	[%rd317+24], %rd314;
	st.local.u64 	[%rd317+16], %rd313;
	add.u64 	%rd318, %SP, 2208;
	add.u64 	%rd319, %SPL, 2208;
	st.local.u64 	[%rd319+16], %rd262;
	st.local.u64 	[%rd319+24], %rd264;
	st.local.u64 	[%rd319], %rd263;
	st.local.u64 	[%rd319+8], %rd265;
	add.u64 	%rd320, %SP, 2240;
	add.u64 	%rd321, %SPL, 2240;
	{ // callseq 28, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd316;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd318;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd320;
	call.uni 
	evm_$_udiv_$_i256, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 28
	ld.local.u64 	%rd322, [%rd321];
	ld.local.u64 	%rd323, [%rd321+16];
	ld.local.u64 	%rd324, [%rd321+8];
	ld.local.u64 	%rd325, [%rd321+24];
	xor.b64  	%rd326, %rd325, %rd276;
	xor.b64  	%rd327, %rd324, %rd278;
	or.b64  	%rd328, %rd327, %rd326;
	xor.b64  	%rd329, %rd323, %rd277;
	xor.b64  	%rd330, %rd322, %rd279;
	or.b64  	%rd331, %rd330, %rd329;
	or.b64  	%rd332, %rd331, %rd328;
	setp.ne.s64 	%p93, %rd332, 0;
	{ // callseq 29, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r86, [retval0+0];
	} // callseq 29
	selp.b32 	%r88, 4, 0, %p93;
	selp.b32 	%r89, %r88, 0, %p92;
	mov.u32 	%r90, 830;
	{ // callseq 30, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r86;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r89;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r90;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 30
	add.cc.s64 	%rd333, %rd261, 1;
	addc.cc.s64 	%rd334, %rd260, 0;
	addc.cc.s64 	%rd335, %rd259, 0;
	addc.cc.s64 	%rd336, %rd258, 0;
	or.b64  	%rd337, %rd334, %rd336;
	or.b64  	%rd338, %rd333, %rd335;
	or.b64  	%rd339, %rd338, %rd337;
	setp.eq.s64 	%p94, %rd339, 0;
	{ // callseq 31, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r91, [retval0+0];
	} // callseq 31
	selp.b32 	%r93, 4, 0, %p94;
	mov.u32 	%r94, 837;
	{ // callseq 32, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r91;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r93;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r94;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 32
	st.u64 	[%rd275+-8], %rd276;
	st.u64 	[%rd275+-16], %rd277;
	st.u64 	[%rd275+-24], %rd278;
	st.u64 	[%rd275+-32], %rd279;
	st.u64 	[%rd68+-8], %rd273;
	st.u64 	[%rd68+-32], %rd272;
	st.u64 	[%rd68+-24], %rd271;
	st.u64 	[%rd68+-16], %rd270;
	st.u64 	[%rd66+-8], %rd269;
	st.u64 	[%rd66+-16], %rd268;
	st.u64 	[%rd66+-24], %rd267;
	st.u64 	[%rd66+-32], %rd266;
	st.u64 	[%rd65+-16], %rd313;
	st.u64 	[%rd65+-8], %rd314;
	st.u64 	[%rd65+-32], %rd315;
	st.u64 	[%rd65+-24], %rd290;
	st.u64 	[%rd65+16], %rd335;
	st.u64 	[%rd65+24], %rd336;
	st.u64 	[%rd65], %rd333;
	st.u64 	[%rd65+8], %rd334;
	mov.u64 	%rd1083, 819;
	mov.u32 	%r12, 102;
	bra.uni 	$L__BB3_98;
$L__BB3_102:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p57, %rd1083, 147;
	@%p57 bra 	$L__BB3_12;
	bra.uni 	$L__BB3_103;
$L__BB3_12:                             // %.147
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p237, %rd73, 104;
	@%p237 bra 	$L__BB3_147;
// %bb.13:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r463, %r12, 2234;
	cvt.s64.s32 	%rd1059, %r463;
	add.s64 	%rd1061, %rd1074, %rd1059;
	xor.b32  	%r464, %r13, %r463;
	cvt.s64.s32 	%rd1062, %r464;
	add.s64 	%rd1063, %rd80, %rd1062;
	ld.global.u8 	%rs148, [%rd1063];
	add.s16 	%rs149, %rs148, 1;
	st.global.u8 	[%rd1063], %rs149;
	st.global.u8 	[%rd1061], %rs3;
	add.s64 	%rd73, %rd73, -104;
	add.s64 	%rd12, %rd74, 1;
	shl.b64 	%rd1064, %rd74, 5;
	add.s64 	%rd1065, %rd87, %rd1064;
	mov.u64 	%rd1066, 0;
	st.u64 	[%rd1065+56], %rd1066;
	st.u64 	[%rd1065+48], %rd1066;
	st.u64 	[%rd1065+40], %rd1066;
	st.u64 	[%rd1065+32], %rd78;
	mov.u64 	%rd1083, 159;
	mov.u32 	%r12, %r462;
	mov.u64 	%rd74, %rd12;
	@%p238 bra 	$L__BB3_98;
	bra.uni 	$L__BB3_14;
$L__BB3_129:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p30, %rd1083, 577;
	@%p30 bra 	$L__BB3_64;
	bra.uni 	$L__BB3_130;
$L__BB3_64:                             // %.577
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p129, %rd73, 128;
	@%p129 bra 	$L__BB3_147;
// %bb.65:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r181, %r12, 2609;
	cvt.s64.s32 	%rd492, %r181;
	add.s64 	%rd494, %rd1074, %rd492;
	xor.b32  	%r182, %r13, %r181;
	cvt.s64.s32 	%rd495, %r182;
	add.s64 	%rd496, %rd80, %rd495;
	ld.global.u8 	%rs58, [%rd496];
	add.s16 	%rs59, %rs58, 1;
	st.global.u8 	[%rd496], %rs59;
	st.global.u8 	[%rd494], %rs3;
	add.s64 	%rd73, %rd73, -128;
	shl.b64 	%rd497, %rd74, 5;
	add.s64 	%rd498, %rd87, %rd497;
	mov.u64 	%rd499, 0;
	st.u64 	[%rd498+24], %rd499;
	st.u64 	[%rd498+16], %rd499;
	st.u64 	[%rd498+8], %rd499;
	mov.u64 	%rd500, 586;
	st.u64 	[%rd498], %rd500;
	mov.u64 	%rd1083, 799;
	mov.u32 	%r12, 1304;
	bra.uni 	$L__BB3_98;
$L__BB3_121:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p38, %rd1083, 490;
	@%p38 bra 	$L__BB3_52;
	bra.uni 	$L__BB3_122;
$L__BB3_52:                             // %.490
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p171, %rd73, 104;
	@%p171 bra 	$L__BB3_147;
// %bb.53:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r280, %r12, 1225;
	cvt.s64.s32 	%rd684, %r280;
	add.s64 	%rd686, %rd1074, %rd684;
	xor.b32  	%r281, %r13, %r280;
	cvt.s64.s32 	%rd687, %r281;
	add.s64 	%rd688, %rd80, %rd687;
	ld.global.u8 	%rs91, [%rd688];
	add.s16 	%rs92, %rs91, 1;
	st.global.u8 	[%rd688], %rs92;
	st.global.u8 	[%rd686], %rs3;
	add.s64 	%rd73, %rd73, -104;
	add.s64 	%rd31, %rd74, 1;
	shl.b64 	%rd689, %rd74, 5;
	add.s64 	%rd690, %rd87, %rd689;
	mov.u64 	%rd691, 0;
	st.u64 	[%rd690+56], %rd691;
	st.u64 	[%rd690+48], %rd691;
	st.u64 	[%rd690+40], %rd691;
	st.u64 	[%rd690+32], %rd78;
	mov.u64 	%rd1083, 502;
	mov.u32 	%r12, 612;
	mov.u64 	%rd74, %rd31;
	@%p238 bra 	$L__BB3_98;
	bra.uni 	$L__BB3_54;
$L__BB3_108:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p51, %rd1083, 234;
	@%p51 bra 	$L__BB3_24;
	bra.uni 	$L__BB3_109;
$L__BB3_24:                             // %.234
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p227, %rd73, 344;
	@%p227 bra 	$L__BB3_147;
// %bb.25:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r421, %r12, 124;
	cvt.s64.s32 	%rd989, %r421;
	add.s64 	%rd991, %rd1074, %rd989;
	xor.b32  	%r422, %r13, %r421;
	cvt.s64.s32 	%rd992, %r422;
	add.s64 	%rd993, %rd80, %rd992;
	ld.global.u8 	%rs130, [%rd993];
	add.s16 	%rs131, %rs130, 1;
	st.global.u8 	[%rd993], %rs131;
	st.global.u8 	[%rd991], %rs3;
	add.s64 	%rd73, %rd73, -344;
	shl.b64 	%rd994, %rd74, 5;
	add.s64 	%rd995, %rd87, %rd994;
	{ // callseq 154, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r423, [retval0+0];
	} // callseq 154
	mov.u32 	%r426, 243;
	{ // callseq 155, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r423;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r446;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r426;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 155
	{ // callseq 156, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r427, [retval0+0];
	} // callseq 156
	mov.u32 	%r429, 245;
	{ // callseq 157, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r427;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r446;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r429;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 157
	add.u64 	%rd996, %SP, 320;
	add.u64 	%rd997, %SPL, 320;
	mov.u64 	%rd998, 4;
	{ // callseq 158, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd996;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd79;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd998;
	call.uni 
	__device_calldataload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 158
	ld.local.u64 	%rd999, [%rd997];
	ld.local.u64 	%rd1000, [%rd997+8];
	ld.local.u64 	%rd1001, [%rd997+16];
	ld.local.u64 	%rd1002, [%rd997+24];
	{ // callseq 159, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r430, [retval0+0];
	} // callseq 159
	mov.u32 	%r432, 0;
	mov.u32 	%r433, 253;
	{ // callseq 160, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r430;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r432;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r433;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 160
	add.u64 	%rd1003, %SP, 352;
	add.u64 	%rd1004, %SPL, 352;
	mov.u64 	%rd1005, 36;
	{ // callseq 161, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd1003;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd79;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd1005;
	call.uni 
	__device_calldataload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 161
	ld.local.u64 	%rd1006, [%rd1004];
	ld.local.u64 	%rd1007, [%rd1004+8];
	ld.local.u64 	%rd1008, [%rd1004+16];
	ld.local.u64 	%rd1009, [%rd1004+24];
	{ // callseq 162, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r434, [retval0+0];
	} // callseq 162
	mov.u32 	%r436, 263;
	{ // callseq 163, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r434;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r432;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r436;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 163
	mov.u64 	%rd1010, 0;
	st.u64 	[%rd995+24], %rd1010;
	st.u64 	[%rd995+16], %rd1010;
	st.u64 	[%rd995+8], %rd1010;
	mov.u64 	%rd1011, 275;
	st.u64 	[%rd995], %rd1011;
	add.s64 	%rd74, %rd74, 2;
	st.u64 	[%rd995+56], %rd1002;
	st.u64 	[%rd995+48], %rd1001;
	st.u64 	[%rd995+40], %rd1000;
	st.u64 	[%rd995+32], %rd999;
	st.u64 	[%rd995+88], %rd1009;
	st.u64 	[%rd995+80], %rd1008;
	st.u64 	[%rd995+72], %rd1007;
	st.u64 	[%rd995+64], %rd1006;
	mov.u64 	%rd1083, 705;
	mov.u32 	%r12, 62;
	bra.uni 	$L__BB3_98;
$L__BB3_134:                            // %JumpTable
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.eq.s64 	%p25, %rd1083, 683;
	@%p25 bra 	$L__BB3_77;
	bra.uni 	$L__BB3_135;
$L__BB3_77:                             // %.683
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p224, %rd73, 320;
	@%p224 bra 	$L__BB3_147;
// %bb.78:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r407, %r12, 261;
	cvt.s64.s32 	%rd908, %r407;
	add.s64 	%rd910, %rd1074, %rd908;
	xor.b32  	%r408, %r13, %r407;
	cvt.s64.s32 	%rd911, %r408;
	add.s64 	%rd912, %rd80, %rd911;
	ld.global.u8 	%rs127, [%rd912];
	add.s16 	%rs128, %rs127, 1;
	st.global.u8 	[%rd912], %rs128;
	st.global.u8 	[%rd910], %rs3;
	add.s64 	%rd73, %rd73, -320;
	shl.b64 	%rd913, %rd74, 5;
	add.s64 	%rd914, %rd87, %rd913;
	ld.u64 	%rd915, [%rd914+24];
	ld.u64 	%rd916, [%rd914+16];
	ld.u64 	%rd917, [%rd914+8];
	ld.u64 	%rd918, [%rd914];
	ld.u64 	%rd919, [%rd914+-16];
	ld.u64 	%rd920, [%rd914+-32];
	ld.u64 	%rd921, [%rd914+-8];
	ld.u64 	%rd922, [%rd914+-24];
	add.s64 	%rd74, %rd74, -2;
	ld.u64 	%rd1083, [%rd914+-64];
	or.b64  	%rd923, %rd922, %rd921;
	or.b64  	%rd924, %rd920, %rd919;
	or.b64  	%rd925, %rd924, %rd923;
	setp.ne.s64 	%p225, %rd925, 0;
	mul.hi.u64 	%rd926, %rd920, %rd918;
	mul.lo.s64 	%rd927, %rd922, %rd918;
	mul.hi.u64 	%rd928, %rd922, %rd918;
	add.cc.s64 	%rd929, %rd927, %rd926;
	addc.cc.s64 	%rd930, %rd928, 0;
	mul.lo.s64 	%rd931, %rd920, %rd917;
	mul.hi.u64 	%rd932, %rd920, %rd917;
	add.cc.s64 	%rd933, %rd931, %rd929;
	addc.cc.s64 	%rd934, %rd932, 0;
	mov.u64 	%rd935, 0;
	add.cc.s64 	%rd936, %rd930, %rd934;
	addc.cc.s64 	%rd937, %rd935, 0;
	mul.lo.s64 	%rd938, %rd922, %rd917;
	mul.hi.u64 	%rd939, %rd922, %rd917;
	add.cc.s64 	%rd940, %rd938, %rd936;
	addc.cc.s64 	%rd941, %rd939, %rd937;
	mul.lo.s64 	%rd942, %rd918, %rd921;
	mul.hi.u64 	%rd943, %rd918, %rd919;
	add.s64 	%rd944, %rd943, %rd942;
	mul.lo.s64 	%rd945, %rd917, %rd919;
	add.s64 	%rd946, %rd944, %rd945;
	mul.lo.s64 	%rd947, %rd916, %rd922;
	mul.hi.u64 	%rd948, %rd916, %rd920;
	add.s64 	%rd949, %rd948, %rd947;
	mul.lo.s64 	%rd950, %rd915, %rd920;
	add.s64 	%rd951, %rd949, %rd950;
	mul.lo.s64 	%rd952, %rd918, %rd919;
	mul.lo.s64 	%rd953, %rd916, %rd920;
	add.cc.s64 	%rd954, %rd953, %rd952;
	addc.cc.s64 	%rd955, %rd951, %rd946;
	add.cc.s64 	%rd956, %rd940, %rd954;
	addc.cc.s64 	%rd957, %rd941, %rd955;
	mul.lo.s64 	%rd958, %rd920, %rd918;
	add.u64 	%rd959, %SP, 1312;
	add.u64 	%rd960, %SPL, 1312;
	st.local.u64 	[%rd960], %rd958;
	st.local.u64 	[%rd960+8], %rd933;
	st.local.u64 	[%rd960+24], %rd957;
	st.local.u64 	[%rd960+16], %rd956;
	add.u64 	%rd961, %SP, 1344;
	add.u64 	%rd962, %SPL, 1344;
	st.local.u64 	[%rd962+16], %rd919;
	st.local.u64 	[%rd962+24], %rd921;
	st.local.u64 	[%rd962], %rd920;
	st.local.u64 	[%rd962+8], %rd922;
	add.u64 	%rd963, %SP, 1376;
	add.u64 	%rd964, %SPL, 1376;
	{ // callseq 147, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd959;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd961;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd963;
	call.uni 
	evm_$_udiv_$_i256, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 147
	ld.local.u64 	%rd965, [%rd964];
	ld.local.u64 	%rd966, [%rd964+16];
	ld.local.u64 	%rd967, [%rd964+8];
	ld.local.u64 	%rd968, [%rd964+24];
	xor.b64  	%rd969, %rd968, %rd915;
	xor.b64  	%rd970, %rd967, %rd917;
	or.b64  	%rd971, %rd970, %rd969;
	xor.b64  	%rd972, %rd966, %rd916;
	xor.b64  	%rd973, %rd965, %rd918;
	or.b64  	%rd974, %rd973, %rd972;
	or.b64  	%rd975, %rd974, %rd971;
	setp.ne.s64 	%p226, %rd975, 0;
	{ // callseq 148, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r409, [retval0+0];
	} // callseq 148
	selp.b32 	%r411, 4, 0, %p226;
	selp.b32 	%r412, %r411, 0, %p225;
	mov.u32 	%r413, 688;
	{ // callseq 149, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r409;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r412;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r413;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 149
	add.u64 	%rd976, %SP, 1408;
	add.u64 	%rd977, %SPL, 1408;
	st.local.u64 	[%rd977+24], %rd935;
	st.local.u64 	[%rd977+16], %rd935;
	st.local.u64 	[%rd977+8], %rd935;
	st.local.u64 	[%rd977], %rd935;
	add.u64 	%rd978, %SP, 1440;
	add.u64 	%rd979, %SPL, 1440;
	st.local.u64 	[%rd979+16], %rd956;
	st.local.u64 	[%rd979+24], %rd957;
	st.local.u64 	[%rd979], %rd958;
	st.local.u64 	[%rd979+8], %rd933;
	{ // callseq 150, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd76;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd77;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd976;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd978;
	call.uni 
	__device_sstore, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 150
	add.u64 	%rd980, %SP, 1472;
	add.u64 	%rd981, %SPL, 1472;
	st.local.u64 	[%rd981+24], %rd935;
	st.local.u64 	[%rd981+16], %rd935;
	st.local.u64 	[%rd981+8], %rd935;
	st.local.u64 	[%rd981], %rd935;
	add.u64 	%rd982, %SP, 1504;
	add.u64 	%rd983, %SPL, 1504;
	ld.global.u8 	%r414, [%rd77];
	{ // callseq 151, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd76;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r414;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd980;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd982;
	call.uni 
	__device_sload, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 151
	{ // callseq 152, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd980;
	.param .b32 retval0;
	call.uni (retval0), 
	__hashword, 
	(
	param0
	);
	ld.param.b32 	%r415, [retval0+0];
	} // callseq 152
	{ // callseq 153, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd982;
	.param .b32 retval0;
	call.uni (retval0), 
	__hashword, 
	(
	param0
	);
	ld.param.b32 	%r417, [retval0+0];
	} // callseq 153
	xor.b32  	%r419, %r415, %r417;
	and.b32  	%r13, %r419, 4095;
	ld.local.u64 	%rd984, [%rd983+8];
	ld.local.u64 	%rd985, [%rd983];
	ld.local.u64 	%rd986, [%rd983+24];
	ld.local.u64 	%rd987, [%rd983+16];
	st.u64 	[%rd914+-48], %rd987;
	st.u64 	[%rd914+-40], %rd986;
	st.u64 	[%rd914+-64], %rd985;
	st.u64 	[%rd914+-56], %rd984;
	mov.u32 	%r12, 130;
	bra.uni 	$L__BB3_98;
$L__BB3_44:                             // %.447
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p196, %rd73, 104;
	@%p196 bra 	$L__BB3_147;
// %bb.45:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r341, %r12, 2350;
	cvt.s64.s32 	%rd791, %r341;
	add.s64 	%rd793, %rd1074, %rd791;
	xor.b32  	%r342, %r13, %r341;
	cvt.s64.s32 	%rd794, %r342;
	add.s64 	%rd795, %rd80, %rd794;
	ld.global.u8 	%rs106, [%rd795];
	add.s16 	%rs107, %rs106, 1;
	st.global.u8 	[%rd795], %rs107;
	st.global.u8 	[%rd793], %rs3;
	add.s64 	%rd73, %rd73, -104;
	add.s64 	%rd28, %rd74, 1;
	shl.b64 	%rd796, %rd74, 5;
	add.s64 	%rd797, %rd87, %rd796;
	mov.u64 	%rd798, 0;
	st.u64 	[%rd797+56], %rd798;
	st.u64 	[%rd797+48], %rd798;
	st.u64 	[%rd797+40], %rd798;
	st.u64 	[%rd797+32], %rd78;
	mov.u64 	%rd1083, 459;
	mov.u32 	%r12, 1175;
	mov.u64 	%rd74, %rd28;
	@%p238 bra 	$L__BB3_98;
	bra.uni 	$L__BB3_46;
$L__BB3_89:                             // %.799
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p106, %rd73, 224;
	@%p106 bra 	$L__BB3_147;
// %bb.90:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r115, %r12, 3499;
	cvt.s64.s32 	%rd376, %r115;
	add.s64 	%rd378, %rd1074, %rd376;
	xor.b32  	%r116, %r13, %r115;
	cvt.s64.s32 	%rd379, %r116;
	add.s64 	%rd380, %rd80, %rd379;
	ld.global.u8 	%rs46, [%rd380];
	add.s16 	%rs47, %rs46, 1;
	st.global.u8 	[%rd380], %rs47;
	st.global.u8 	[%rd378], %rs3;
	add.s64 	%rd73, %rd73, -224;
	shl.b64 	%rd381, %rd74, 5;
	add.s64 	%rd382, %rd87, %rd381;
	ld.u64 	%rd383, [%rd382+8];
	ld.u64 	%rd1083, [%rd382];
	ld.u64 	%rd384, [%rd382+24];
	ld.u64 	%rd385, [%rd382+16];
	add.u64 	%rd386, %SP, 2112;
	add.u64 	%rd387, %SPL, 2112;
	mov.u64 	%rd388, 0;
	st.local.u64 	[%rd387+16], %rd388;
	st.local.u64 	[%rd387+24], %rd388;
	mov.u64 	%rd389, 1;
	st.local.u64 	[%rd387], %rd389;
	st.local.u64 	[%rd387+8], %rd388;
	add.u64 	%rd390, %SP, 2144;
	add.u64 	%rd391, %SPL, 2144;
	ld.global.u8 	%r117, [%rd77];
	{ // callseq 40, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd76;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r117;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd386;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd390;
	call.uni 
	__device_sload, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 40
	{ // callseq 41, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd386;
	.param .b32 retval0;
	call.uni (retval0), 
	__hashword, 
	(
	param0
	);
	ld.param.b32 	%r118, [retval0+0];
	} // callseq 41
	{ // callseq 42, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd390;
	.param .b32 retval0;
	call.uni (retval0), 
	__hashword, 
	(
	param0
	);
	ld.param.b32 	%r120, [retval0+0];
	} // callseq 42
	xor.b32  	%r122, %r118, %r120;
	and.b32  	%r13, %r122, 4095;
	ld.local.u64 	%rd392, [%rd391+8];
	ld.local.u64 	%rd393, [%rd391];
	ld.local.u64 	%rd394, [%rd391+24];
	ld.local.u64 	%rd395, [%rd391+16];
	add.s64 	%rd74, %rd74, 1;
	st.u64 	[%rd382+16], %rd385;
	st.u64 	[%rd382+24], %rd384;
	st.u64 	[%rd382], %rd1083;
	st.u64 	[%rd382+8], %rd383;
	st.u64 	[%rd382+48], %rd395;
	st.u64 	[%rd382+56], %rd394;
	st.u64 	[%rd382+32], %rd393;
	st.u64 	[%rd382+40], %rd392;
	mov.u32 	%r12, 1749;
	bra.uni 	$L__BB3_98;
$L__BB3_16:                             // %.159
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p232, %rd73, 344;
	@%p232 bra 	$L__BB3_147;
// %bb.17:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r442, %r12, 498;
	cvt.s64.s32 	%rd1024, %r442;
	add.s64 	%rd1026, %rd1074, %rd1024;
	xor.b32  	%r443, %r13, %r442;
	cvt.s64.s32 	%rd1027, %r443;
	add.s64 	%rd1028, %rd80, %rd1027;
	ld.global.u8 	%rs139, [%rd1028];
	add.s16 	%rs140, %rs139, 1;
	st.global.u8 	[%rd1028], %rs140;
	st.global.u8 	[%rd1026], %rs3;
	add.s64 	%rd73, %rd73, -344;
	shl.b64 	%rd1029, %rd74, 5;
	add.s64 	%rd1030, %rd87, %rd1029;
	{ // callseq 164, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r444, [retval0+0];
	} // callseq 164
	mov.u32 	%r447, 168;
	{ // callseq 165, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r444;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r446;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r447;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 165
	{ // callseq 166, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r448, [retval0+0];
	} // callseq 166
	mov.u32 	%r450, 170;
	{ // callseq 167, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r448;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r446;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r450;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 167
	add.u64 	%rd1031, %SP, 160;
	add.u64 	%rd1032, %SPL, 160;
	mov.u64 	%rd1033, 4;
	{ // callseq 168, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd1031;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd79;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd1033;
	call.uni 
	__device_calldataload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 168
	ld.local.u64 	%rd1034, [%rd1032];
	ld.local.u64 	%rd1035, [%rd1032+8];
	ld.local.u64 	%rd1036, [%rd1032+16];
	ld.local.u64 	%rd1037, [%rd1032+24];
	{ // callseq 169, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r451, [retval0+0];
	} // callseq 169
	mov.u32 	%r453, 0;
	mov.u32 	%r454, 178;
	{ // callseq 170, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r451;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r453;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r454;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 170
	add.u64 	%rd1038, %SP, 192;
	add.u64 	%rd1039, %SPL, 192;
	mov.u64 	%rd1040, 36;
	{ // callseq 171, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd1038;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd79;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd1040;
	call.uni 
	__device_calldataload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 171
	ld.local.u64 	%rd1041, [%rd1039];
	ld.local.u64 	%rd1042, [%rd1039+8];
	ld.local.u64 	%rd1043, [%rd1039+16];
	ld.local.u64 	%rd1044, [%rd1039+24];
	{ // callseq 172, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r455, [retval0+0];
	} // callseq 172
	mov.u32 	%r457, 188;
	{ // callseq 173, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r455;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r453;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r457;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 173
	mov.u64 	%rd1045, 0;
	st.u64 	[%rd1030+24], %rd1045;
	st.u64 	[%rd1030+16], %rd1045;
	st.u64 	[%rd1030+8], %rd1045;
	mov.u64 	%rd1046, 200;
	st.u64 	[%rd1030], %rd1046;
	add.s64 	%rd74, %rd74, 2;
	st.u64 	[%rd1030+56], %rd1037;
	st.u64 	[%rd1030+48], %rd1036;
	st.u64 	[%rd1030+40], %rd1035;
	st.u64 	[%rd1030+32], %rd1034;
	st.u64 	[%rd1030+88], %rd1044;
	st.u64 	[%rd1030+80], %rd1043;
	st.u64 	[%rd1030+72], %rd1042;
	st.u64 	[%rd1030+64], %rd1041;
	mov.u64 	%rd1083, 683;
	mov.u32 	%r12, 249;
	bra.uni 	$L__BB3_98;
$L__BB3_68:                             // %.608
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p130, %rd73, 104;
	@%p130 bra 	$L__BB3_147;
// %bb.69:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r184, %r12, 163;
	cvt.s64.s32 	%rd502, %r184;
	add.s64 	%rd504, %rd1074, %rd502;
	xor.b32  	%r185, %r13, %r184;
	cvt.s64.s32 	%rd505, %r185;
	add.s64 	%rd506, %rd80, %rd505;
	ld.global.u8 	%rs61, [%rd506];
	add.s16 	%rs62, %rs61, 1;
	st.global.u8 	[%rd506], %rs62;
	st.global.u8 	[%rd504], %rs3;
	add.s64 	%rd73, %rd73, -104;
	add.s64 	%rd38, %rd74, 1;
	shl.b64 	%rd507, %rd74, 5;
	add.s64 	%rd508, %rd87, %rd507;
	mov.u64 	%rd509, 0;
	st.u64 	[%rd508+56], %rd509;
	st.u64 	[%rd508+48], %rd509;
	st.u64 	[%rd508+40], %rd509;
	st.u64 	[%rd508+32], %rd78;
	mov.u64 	%rd1083, 620;
	mov.u32 	%r12, 81;
	mov.u64 	%rd74, %rd38;
	@%p238 bra 	$L__BB3_98;
	bra.uni 	$L__BB3_70;
$L__BB3_56:                             // %.502
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p145, %rd73, 344;
	@%p145 bra 	$L__BB3_147;
// %bb.57:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r216, %r12, 2918;
	cvt.s64.s32 	%rd568, %r216;
	add.s64 	%rd570, %rd1074, %rd568;
	xor.b32  	%r217, %r13, %r216;
	cvt.s64.s32 	%rd571, %r217;
	add.s64 	%rd572, %rd80, %rd571;
	ld.global.u8 	%rs73, [%rd572];
	add.s16 	%rs74, %rs73, 1;
	st.global.u8 	[%rd572], %rs74;
	st.global.u8 	[%rd570], %rs3;
	add.s64 	%rd73, %rd73, -344;
	shl.b64 	%rd573, %rd74, 5;
	add.s64 	%rd574, %rd87, %rd573;
	{ // callseq 76, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r218, [retval0+0];
	} // callseq 76
	mov.u32 	%r221, 511;
	{ // callseq 77, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r218;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r446;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r221;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 77
	{ // callseq 78, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r222, [retval0+0];
	} // callseq 78
	mov.u32 	%r224, 513;
	{ // callseq 79, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r222;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r446;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r224;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 79
	add.u64 	%rd575, %SP, 896;
	add.u64 	%rd576, %SPL, 896;
	mov.u64 	%rd577, 4;
	{ // callseq 80, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd575;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd79;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd577;
	call.uni 
	__device_calldataload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 80
	ld.local.u64 	%rd578, [%rd576];
	ld.local.u64 	%rd579, [%rd576+8];
	ld.local.u64 	%rd580, [%rd576+16];
	ld.local.u64 	%rd581, [%rd576+24];
	{ // callseq 81, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r225, [retval0+0];
	} // callseq 81
	mov.u32 	%r227, 0;
	mov.u32 	%r228, 521;
	{ // callseq 82, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r225;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r227;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r228;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 82
	add.u64 	%rd582, %SP, 928;
	add.u64 	%rd583, %SPL, 928;
	mov.u64 	%rd584, 36;
	{ // callseq 83, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd582;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd79;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd584;
	call.uni 
	__device_calldataload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 83
	ld.local.u64 	%rd585, [%rd583];
	ld.local.u64 	%rd586, [%rd583+8];
	ld.local.u64 	%rd587, [%rd583+16];
	ld.local.u64 	%rd588, [%rd583+24];
	{ // callseq 84, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r229, [retval0+0];
	} // callseq 84
	mov.u32 	%r231, 531;
	{ // callseq 85, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r229;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r227;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r231;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 85
	mov.u64 	%rd589, 0;
	st.u64 	[%rd574+24], %rd589;
	st.u64 	[%rd574+16], %rd589;
	st.u64 	[%rd574+8], %rd589;
	mov.u64 	%rd590, 543;
	st.u64 	[%rd574], %rd590;
	add.s64 	%rd74, %rd74, 2;
	st.u64 	[%rd574+56], %rd581;
	st.u64 	[%rd574+48], %rd580;
	st.u64 	[%rd574+40], %rd579;
	st.u64 	[%rd574+32], %rd578;
	st.u64 	[%rd574+88], %rd588;
	st.u64 	[%rd574+80], %rd587;
	st.u64 	[%rd574+72], %rd586;
	st.u64 	[%rd574+64], %rd585;
	mov.u64 	%rd1083, 777;
	mov.u32 	%r12, 1459;
	bra.uni 	$L__BB3_98;
$L__BB3_28:                             // %.297
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p229, %rd73, 104;
	@%p229 bra 	$L__BB3_147;
// %bb.29:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r438, %r12, 2132;
	cvt.s64.s32 	%rd1013, %r438;
	add.s64 	%rd1015, %rd1074, %rd1013;
	xor.b32  	%r439, %r13, %r438;
	cvt.s64.s32 	%rd1016, %r439;
	add.s64 	%rd1017, %rd80, %rd1016;
	ld.global.u8 	%rs133, [%rd1017];
	add.s16 	%rs134, %rs133, 1;
	st.global.u8 	[%rd1017], %rs134;
	st.global.u8 	[%rd1015], %rs3;
	add.s64 	%rd73, %rd73, -104;
	add.s64 	%rd20, %rd74, 1;
	shl.b64 	%rd1018, %rd74, 5;
	add.s64 	%rd1019, %rd87, %rd1018;
	mov.u64 	%rd1020, 0;
	st.u64 	[%rd1019+56], %rd1020;
	st.u64 	[%rd1019+48], %rd1020;
	st.u64 	[%rd1019+40], %rd1020;
	st.u64 	[%rd1019+32], %rd78;
	mov.u64 	%rd1083, 309;
	mov.u32 	%r12, 1066;
	mov.u64 	%rd74, %rd20;
	@%p238 bra 	$L__BB3_98;
	bra.uni 	$L__BB3_30;
$L__BB3_79:                             // %.705
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p210, %rd73, 320;
	@%p210 bra 	$L__BB3_147;
// %bb.80:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r365, %r12, 791;
	cvt.s64.s32 	%rd837, %r365;
	add.s64 	%rd839, %rd1074, %rd837;
	xor.b32  	%r366, %r13, %r365;
	cvt.s64.s32 	%rd840, %r366;
	add.s64 	%rd841, %rd80, %rd840;
	ld.global.u8 	%rs115, [%rd841];
	add.s16 	%rs116, %rs115, 1;
	st.global.u8 	[%rd841], %rs116;
	st.global.u8 	[%rd839], %rs3;
	add.s64 	%rd73, %rd73, -320;
	shl.b64 	%rd842, %rd74, 5;
	add.s64 	%rd843, %rd87, %rd842;
	ld.u64 	%rd844, [%rd843];
	ld.u64 	%rd845, [%rd843+8];
	ld.u64 	%rd846, [%rd843+16];
	ld.u64 	%rd847, [%rd843+24];
	ld.u64 	%rd848, [%rd843+-32];
	ld.u64 	%rd849, [%rd843+-24];
	ld.u64 	%rd850, [%rd843+-16];
	ld.u64 	%rd851, [%rd843+-8];
	add.s64 	%rd74, %rd74, -2;
	ld.u64 	%rd1083, [%rd843+-64];
	add.cc.s64 	%rd852, %rd848, %rd844;
	addc.cc.s64 	%rd853, %rd849, %rd845;
	addc.cc.s64 	%rd854, %rd850, %rd846;
	addc.cc.s64 	%rd855, %rd851, %rd847;
	setp.eq.s64 	%p211, %rd855, %rd851;
	setp.lt.u64 	%p212, %rd855, %rd851;
	selp.u32 	%r367, -1, 0, %p212;
	setp.lt.u64 	%p213, %rd854, %rd850;
	selp.u32 	%r368, -1, 0, %p213;
	selp.b32 	%r369, %r368, %r367, %p211;
	setp.eq.s64 	%p214, %rd853, %rd849;
	setp.lt.u64 	%p215, %rd853, %rd849;
	selp.u32 	%r370, -1, 0, %p215;
	setp.lt.u64 	%p216, %rd852, %rd848;
	selp.u32 	%r371, -1, 0, %p216;
	selp.b32 	%r372, %r371, %r370, %p214;
	xor.b64  	%rd856, %rd855, %rd851;
	xor.b64  	%rd857, %rd854, %rd850;
	or.b64  	%rd858, %rd857, %rd856;
	setp.eq.s64 	%p217, %rd858, 0;
	selp.b32 	%r373, %r372, %r369, %p217;
	and.b32  	%r374, %r373, 1;
	setp.eq.b32 	%p218, %r374, 1;
	{ // callseq 131, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r375, [retval0+0];
	} // callseq 131
	selp.b32 	%r377, 4, 0, %p218;
	mov.u32 	%r378, 710;
	{ // callseq 132, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r375;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r377;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r378;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 132
	add.u64 	%rd859, %SP, 1536;
	add.u64 	%rd860, %SPL, 1536;
	mov.u64 	%rd861, 0;
	st.local.u64 	[%rd860+24], %rd861;
	st.local.u64 	[%rd860+16], %rd861;
	st.local.u64 	[%rd860+8], %rd861;
	mov.u64 	%rd862, 1;
	st.local.u64 	[%rd860], %rd862;
	add.u64 	%rd863, %SP, 1568;
	add.u64 	%rd864, %SPL, 1568;
	st.local.u64 	[%rd864+16], %rd854;
	st.local.u64 	[%rd864+24], %rd855;
	st.local.u64 	[%rd864], %rd852;
	st.local.u64 	[%rd864+8], %rd853;
	{ // callseq 133, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd76;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd77;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd859;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd863;
	call.uni 
	__device_sstore, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 133
	add.u64 	%rd865, %SP, 1600;
	add.u64 	%rd866, %SPL, 1600;
	st.local.u64 	[%rd866+24], %rd861;
	st.local.u64 	[%rd866+16], %rd861;
	st.local.u64 	[%rd866+8], %rd861;
	st.local.u64 	[%rd866], %rd862;
	add.u64 	%rd867, %SP, 1632;
	add.u64 	%rd868, %SPL, 1632;
	ld.global.u8 	%r379, [%rd77];
	{ // callseq 134, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd76;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r379;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd865;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd867;
	call.uni 
	__device_sload, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 134
	{ // callseq 135, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd865;
	.param .b32 retval0;
	call.uni (retval0), 
	__hashword, 
	(
	param0
	);
	ld.param.b32 	%r380, [retval0+0];
	} // callseq 135
	{ // callseq 136, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd867;
	.param .b32 retval0;
	call.uni (retval0), 
	__hashword, 
	(
	param0
	);
	ld.param.b32 	%r382, [retval0+0];
	} // callseq 136
	xor.b32  	%r384, %r380, %r382;
	and.b32  	%r13, %r384, 4095;
	ld.local.u64 	%rd869, [%rd868+8];
	ld.local.u64 	%rd870, [%rd868];
	ld.local.u64 	%rd871, [%rd868+24];
	ld.local.u64 	%rd872, [%rd868+16];
	st.u64 	[%rd843+-48], %rd872;
	st.u64 	[%rd843+-40], %rd871;
	st.u64 	[%rd843+-64], %rd870;
	st.u64 	[%rd843+-56], %rd869;
	mov.u32 	%r12, 395;
	bra.uni 	$L__BB3_98;
$L__BB3_83:                             // %.749
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p161, %rd73, 320;
	@%p161 bra 	$L__BB3_147;
// %bb.84:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r256, %r12, 2793;
	cvt.s64.s32 	%rd638, %r256;
	add.s64 	%rd640, %rd1074, %rd638;
	xor.b32  	%r257, %r13, %r256;
	cvt.s64.s32 	%rd641, %r257;
	add.s64 	%rd642, %rd80, %rd641;
	ld.global.u8 	%rs85, [%rd642];
	add.s16 	%rs86, %rs85, 1;
	st.global.u8 	[%rd642], %rs86;
	st.global.u8 	[%rd640], %rs3;
	add.s64 	%rd73, %rd73, -320;
	shl.b64 	%rd643, %rd74, 5;
	add.s64 	%rd644, %rd87, %rd643;
	ld.u64 	%rd645, [%rd644];
	ld.u64 	%rd646, [%rd644+8];
	ld.u64 	%rd647, [%rd644+16];
	ld.u64 	%rd648, [%rd644+24];
	ld.u64 	%rd649, [%rd644+-32];
	ld.u64 	%rd650, [%rd644+-24];
	ld.u64 	%rd651, [%rd644+-16];
	ld.u64 	%rd652, [%rd644+-8];
	add.s64 	%rd74, %rd74, -2;
	ld.u64 	%rd1083, [%rd644+-64];
	add.cc.s64 	%rd653, %rd649, %rd645;
	addc.cc.s64 	%rd654, %rd650, %rd646;
	addc.cc.s64 	%rd655, %rd651, %rd647;
	addc.cc.s64 	%rd656, %rd652, %rd648;
	setp.eq.s64 	%p162, %rd656, %rd652;
	setp.lt.u64 	%p163, %rd656, %rd652;
	selp.u32 	%r258, -1, 0, %p163;
	setp.lt.u64 	%p164, %rd655, %rd651;
	selp.u32 	%r259, -1, 0, %p164;
	selp.b32 	%r260, %r259, %r258, %p162;
	setp.eq.s64 	%p165, %rd654, %rd650;
	setp.lt.u64 	%p166, %rd654, %rd650;
	selp.u32 	%r261, -1, 0, %p166;
	setp.lt.u64 	%p167, %rd653, %rd649;
	selp.u32 	%r262, -1, 0, %p167;
	selp.b32 	%r263, %r262, %r261, %p165;
	xor.b64  	%rd657, %rd656, %rd652;
	xor.b64  	%rd658, %rd655, %rd651;
	or.b64  	%rd659, %rd658, %rd657;
	setp.eq.s64 	%p168, %rd659, 0;
	selp.b32 	%r264, %r263, %r260, %p168;
	and.b32  	%r265, %r264, 1;
	setp.eq.b32 	%p169, %r265, 1;
	{ // callseq 93, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r266, [retval0+0];
	} // callseq 93
	selp.b32 	%r268, 4, 0, %p169;
	mov.u32 	%r269, 754;
	{ // callseq 94, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r266;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r268;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r269;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 94
	add.u64 	%rd660, %SP, 1792;
	add.u64 	%rd661, %SPL, 1792;
	mov.u64 	%rd662, 0;
	st.local.u64 	[%rd661+24], %rd662;
	st.local.u64 	[%rd661+16], %rd662;
	st.local.u64 	[%rd661+8], %rd662;
	st.local.u64 	[%rd661], %rd662;
	add.u64 	%rd663, %SP, 1824;
	add.u64 	%rd664, %SPL, 1824;
	st.local.u64 	[%rd664+16], %rd655;
	st.local.u64 	[%rd664+24], %rd656;
	st.local.u64 	[%rd664], %rd653;
	st.local.u64 	[%rd664+8], %rd654;
	{ // callseq 95, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd76;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd77;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd660;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd663;
	call.uni 
	__device_sstore, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 95
	add.u64 	%rd665, %SP, 1856;
	add.u64 	%rd666, %SPL, 1856;
	st.local.u64 	[%rd666+24], %rd662;
	st.local.u64 	[%rd666+16], %rd662;
	st.local.u64 	[%rd666+8], %rd662;
	st.local.u64 	[%rd666], %rd662;
	add.u64 	%rd667, %SP, 1888;
	add.u64 	%rd668, %SPL, 1888;
	ld.global.u8 	%r270, [%rd77];
	{ // callseq 96, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd76;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r270;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd665;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd667;
	call.uni 
	__device_sload, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 96
	{ // callseq 97, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd665;
	.param .b32 retval0;
	call.uni (retval0), 
	__hashword, 
	(
	param0
	);
	ld.param.b32 	%r271, [retval0+0];
	} // callseq 97
	{ // callseq 98, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd667;
	.param .b32 retval0;
	call.uni (retval0), 
	__hashword, 
	(
	param0
	);
	ld.param.b32 	%r273, [retval0+0];
	} // callseq 98
	xor.b32  	%r275, %r271, %r273;
	and.b32  	%r13, %r275, 4095;
	ld.local.u64 	%rd669, [%rd668+8];
	ld.local.u64 	%rd670, [%rd668];
	ld.local.u64 	%rd671, [%rd668+24];
	ld.local.u64 	%rd672, [%rd668+16];
	st.u64 	[%rd644+-48], %rd672;
	st.u64 	[%rd644+-40], %rd671;
	st.u64 	[%rd644+-64], %rd670;
	st.u64 	[%rd644+-56], %rd669;
	mov.u32 	%r12, 1396;
	bra.uni 	$L__BB3_98;
$L__BB3_85:                             // %.771
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p144, %rd73, 224;
	@%p144 bra 	$L__BB3_147;
// %bb.86:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r207, %r12, 1118;
	cvt.s64.s32 	%rd548, %r207;
	add.s64 	%rd550, %rd1074, %rd548;
	xor.b32  	%r208, %r13, %r207;
	cvt.s64.s32 	%rd551, %r208;
	add.s64 	%rd552, %rd80, %rd551;
	ld.global.u8 	%rs70, [%rd552];
	add.s16 	%rs71, %rs70, 1;
	st.global.u8 	[%rd552], %rs71;
	st.global.u8 	[%rd550], %rs3;
	add.s64 	%rd73, %rd73, -224;
	shl.b64 	%rd553, %rd74, 5;
	add.s64 	%rd554, %rd87, %rd553;
	ld.u64 	%rd555, [%rd554+8];
	ld.u64 	%rd1083, [%rd554];
	ld.u64 	%rd556, [%rd554+24];
	ld.u64 	%rd557, [%rd554+16];
	add.u64 	%rd558, %SP, 1920;
	add.u64 	%rd559, %SPL, 1920;
	mov.u64 	%rd560, 0;
	st.local.u64 	[%rd559+16], %rd560;
	st.local.u64 	[%rd559+24], %rd560;
	st.local.u64 	[%rd559], %rd560;
	st.local.u64 	[%rd559+8], %rd560;
	add.u64 	%rd561, %SP, 1952;
	add.u64 	%rd562, %SPL, 1952;
	ld.global.u8 	%r209, [%rd77];
	{ // callseq 73, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd76;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r209;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd558;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd561;
	call.uni 
	__device_sload, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 73
	{ // callseq 74, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd558;
	.param .b32 retval0;
	call.uni (retval0), 
	__hashword, 
	(
	param0
	);
	ld.param.b32 	%r210, [retval0+0];
	} // callseq 74
	{ // callseq 75, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd561;
	.param .b32 retval0;
	call.uni (retval0), 
	__hashword, 
	(
	param0
	);
	ld.param.b32 	%r212, [retval0+0];
	} // callseq 75
	xor.b32  	%r214, %r210, %r212;
	and.b32  	%r13, %r214, 4095;
	ld.local.u64 	%rd563, [%rd562+8];
	ld.local.u64 	%rd564, [%rd562];
	ld.local.u64 	%rd565, [%rd562+24];
	ld.local.u64 	%rd566, [%rd562+16];
	add.s64 	%rd74, %rd74, 1;
	st.u64 	[%rd554+16], %rd557;
	st.u64 	[%rd554+24], %rd556;
	st.u64 	[%rd554], %rd1083;
	st.u64 	[%rd554+8], %rd555;
	st.u64 	[%rd554+48], %rd566;
	st.u64 	[%rd554+56], %rd565;
	st.u64 	[%rd554+32], %rd564;
	st.u64 	[%rd554+40], %rd563;
	mov.u32 	%r12, 559;
	bra.uni 	$L__BB3_98;
$L__BB3_36:                             // %.372
                                        //   in Loop: Header=BB3_98 Depth=1
	setp.lt.u64 	%p221, %rd73, 104;
	@%p221 bra 	$L__BB3_147;
// %bb.37:                              //   in Loop: Header=BB3_98 Depth=1
	xor.b32  	%r403, %r12, 3559;
	cvt.s64.s32 	%rd898, %r403;
	add.s64 	%rd900, %rd1074, %rd898;
	xor.b32  	%r404, %r13, %r403;
	cvt.s64.s32 	%rd901, %r404;
	add.s64 	%rd902, %rd80, %rd901;
	ld.global.u8 	%rs121, [%rd902];
	add.s16 	%rs122, %rs121, 1;
	st.global.u8 	[%rd902], %rs122;
	st.global.u8 	[%rd900], %rs3;
	add.s64 	%rd73, %rd73, -104;
	add.s64 	%rd24, %rd74, 1;
	shl.b64 	%rd903, %rd74, 5;
	add.s64 	%rd904, %rd87, %rd903;
	mov.u64 	%rd905, 0;
	st.u64 	[%rd904+56], %rd905;
	st.u64 	[%rd904+48], %rd905;
	st.u64 	[%rd904+40], %rd905;
	st.u64 	[%rd904+32], %rd78;
	mov.u64 	%rd1083, 384;
	mov.u32 	%r12, 1779;
	mov.u64 	%rd74, %rd24;
	@%p238 bra 	$L__BB3_98;
// %bb.38:                              // %.380
	setp.lt.u64 	%p223, %rd73, 40;
	@%p223 bra 	$L__BB3_147;
// %bb.39:
	xor.b32  	%r405, %r13, 1406;
	cvt.s64.s32 	%rd906, %r405;
	add.s64 	%rd907, %rd80, %rd906;
	ld.global.u8 	%rs124, [%rd907];
	add.s16 	%rs125, %rs124, 1;
	st.global.u8 	[%rd907], %rs125;
	st.global.u8 	[__cov_bits+1406], %rs3;
	bra.uni 	$L__BB3_147;
$L__BB3_119:                            // %JumpTable
	setp.eq.s64 	%p43, %rd1083, 425;
	@%p43 bra 	$L__BB3_42;
	bra.uni 	$L__BB3_147;
$L__BB3_42:                             // %.425
	setp.lt.u64 	%p133, %rd73, 184;
	@%p133 bra 	$L__BB3_147;
// %bb.43:
	xor.b32  	%r187, %r12, 1370;
	cvt.s64.s32 	%rd512, %r187;
	add.s64 	%rd514, %rd1074, %rd512;
	xor.b32  	%r188, %r13, %r187;
	cvt.s64.s32 	%rd515, %r188;
	add.s64 	%rd516, %rd80, %rd515;
	ld.global.u8 	%rs67, [%rd516];
	add.s16 	%rs68, %rs67, 1;
	st.global.u8 	[%rd516], %rs68;
	st.global.u8 	[%rd514], %rs3;
	shl.b64 	%rd517, %rd74, 5;
	add.s64 	%rd518, %rd87, %rd517;
	ld.u64 	%rd519, [%rd518+8];
	ld.u64 	%rd520, [%rd518];
	ld.u64 	%rd521, [%rd518+24];
	ld.u64 	%rd522, [%rd518+16];
	add.u64 	%rd523, %SP, 704;
	add.u64 	%rd524, %SPL, 704;
	{ // callseq 66, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd91;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd523;
	call.uni 
	__device_mload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 66
	ld.local.u64 	%rd526, [%rd524+24];
	ld.local.u64 	%rd527, [%rd524+16];
	ld.local.u64 	%rd528, [%rd524+8];
	ld.local.u64 	%rd529, [%rd524];
	add.u64 	%rd530, %SP, 736;
	add.u64 	%rd531, %SPL, 736;
	st.local.u64 	[%rd531+16], %rd522;
	st.local.u64 	[%rd531+24], %rd521;
	st.local.u64 	[%rd531], %rd520;
	st.local.u64 	[%rd531+8], %rd519;
	{ // callseq 67, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd529;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd530;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd92;
	call.uni 
	__device_mstore, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 67
	add.cc.s64 	%rd533, %rd529, 32;
	addc.cc.s64 	%rd534, %rd528, 0;
	addc.cc.s64 	%rd535, %rd527, 0;
	addc.cc.s64 	%rd536, %rd526, 0;
	or.b64  	%rd537, %rd535, %rd536;
	or.b64  	%rd538, %rd537, %rd534;
	setp.lt.u64 	%p134, %rd533, 32;
	{ // callseq 68, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r189, [retval0+0];
	} // callseq 68
	setp.eq.s64 	%p135, %rd538, 0;
	selp.b32 	%r191, 4, 0, %p134;
	selp.b32 	%r192, %r191, 0, %p135;
	mov.u32 	%r193, 435;
	{ // callseq 69, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r189;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r192;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r193;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 69
	add.u64 	%rd539, %SP, 768;
	add.u64 	%rd540, %SPL, 768;
	{ // callseq 70, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd91;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd539;
	call.uni 
	__device_mload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 70
	ld.local.u64 	%rd541, [%rd540];
	ld.local.u64 	%rd542, [%rd540+8];
	ld.local.u64 	%rd543, [%rd540+16];
	ld.local.u64 	%rd544, [%rd540+24];
	setp.eq.s64 	%p136, %rd536, %rd544;
	setp.lt.u64 	%p137, %rd536, %rd544;
	selp.u32 	%r194, -1, 0, %p137;
	setp.lt.u64 	%p138, %rd535, %rd543;
	selp.u32 	%r195, -1, 0, %p138;
	selp.b32 	%r196, %r195, %r194, %p136;
	setp.eq.s64 	%p139, %rd534, %rd542;
	setp.lt.u64 	%p140, %rd534, %rd542;
	selp.u32 	%r197, -1, 0, %p140;
	setp.lt.u64 	%p141, %rd533, %rd541;
	selp.u32 	%r198, -1, 0, %p141;
	selp.b32 	%r199, %r198, %r197, %p139;
	xor.b64  	%rd545, %rd536, %rd544;
	xor.b64  	%rd546, %rd535, %rd543;
	or.b64  	%rd547, %rd546, %rd545;
	setp.eq.s64 	%p142, %rd547, 0;
	selp.b32 	%r200, %r199, %r196, %p142;
	and.b32  	%r201, %r200, 1;
	setp.eq.b32 	%p143, %r201, 1;
	{ // callseq 71, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r202, [retval0+0];
	} // callseq 71
	selp.b32 	%r204, 4, 0, %p143;
	mov.u32 	%r205, 444;
	{ // callseq 72, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r202;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r204;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r205;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 72
	bra.uni 	$L__BB3_76;
$L__BB3_106:                            // %JumpTable
	setp.eq.s64 	%p56, %rd1083, 200;
	@%p56 bra 	$L__BB3_18;
	bra.uni 	$L__BB3_147;
$L__BB3_18:                             // %.200
	setp.lt.u64 	%p199, %rd73, 184;
	@%p199 bra 	$L__BB3_147;
// %bb.19:
	xor.b32  	%r344, %r12, 3835;
	cvt.s64.s32 	%rd801, %r344;
	add.s64 	%rd803, %rd1074, %rd801;
	xor.b32  	%r345, %r13, %r344;
	cvt.s64.s32 	%rd804, %r345;
	add.s64 	%rd805, %rd80, %rd804;
	ld.global.u8 	%rs112, [%rd805];
	add.s16 	%rs113, %rs112, 1;
	st.global.u8 	[%rd805], %rs113;
	st.global.u8 	[%rd803], %rs3;
	shl.b64 	%rd806, %rd74, 5;
	add.s64 	%rd807, %rd87, %rd806;
	ld.u64 	%rd808, [%rd807+8];
	ld.u64 	%rd809, [%rd807];
	ld.u64 	%rd810, [%rd807+24];
	ld.u64 	%rd811, [%rd807+16];
	add.u64 	%rd812, %SP, 224;
	add.u64 	%rd813, %SPL, 224;
	{ // callseq 122, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd91;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd812;
	call.uni 
	__device_mload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 122
	ld.local.u64 	%rd815, [%rd813+24];
	ld.local.u64 	%rd816, [%rd813+16];
	ld.local.u64 	%rd817, [%rd813+8];
	ld.local.u64 	%rd818, [%rd813];
	add.u64 	%rd819, %SP, 256;
	add.u64 	%rd820, %SPL, 256;
	st.local.u64 	[%rd820+16], %rd811;
	st.local.u64 	[%rd820+24], %rd810;
	st.local.u64 	[%rd820], %rd809;
	st.local.u64 	[%rd820+8], %rd808;
	{ // callseq 123, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd818;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd819;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd92;
	call.uni 
	__device_mstore, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 123
	add.cc.s64 	%rd822, %rd818, 32;
	addc.cc.s64 	%rd823, %rd817, 0;
	addc.cc.s64 	%rd824, %rd816, 0;
	addc.cc.s64 	%rd825, %rd815, 0;
	or.b64  	%rd826, %rd824, %rd825;
	or.b64  	%rd827, %rd826, %rd823;
	setp.lt.u64 	%p200, %rd822, 32;
	{ // callseq 124, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r346, [retval0+0];
	} // callseq 124
	setp.eq.s64 	%p201, %rd827, 0;
	selp.b32 	%r348, 4, 0, %p200;
	selp.b32 	%r349, %r348, 0, %p201;
	mov.u32 	%r350, 210;
	{ // callseq 125, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r346;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r349;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r350;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 125
	add.u64 	%rd828, %SP, 288;
	add.u64 	%rd829, %SPL, 288;
	{ // callseq 126, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd91;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd828;
	call.uni 
	__device_mload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 126
	ld.local.u64 	%rd830, [%rd829];
	ld.local.u64 	%rd831, [%rd829+8];
	ld.local.u64 	%rd832, [%rd829+16];
	ld.local.u64 	%rd833, [%rd829+24];
	setp.eq.s64 	%p202, %rd825, %rd833;
	setp.lt.u64 	%p203, %rd825, %rd833;
	selp.u32 	%r351, -1, 0, %p203;
	setp.lt.u64 	%p204, %rd824, %rd832;
	selp.u32 	%r352, -1, 0, %p204;
	selp.b32 	%r353, %r352, %r351, %p202;
	setp.eq.s64 	%p205, %rd823, %rd831;
	setp.lt.u64 	%p206, %rd823, %rd831;
	selp.u32 	%r354, -1, 0, %p206;
	setp.lt.u64 	%p207, %rd822, %rd830;
	selp.u32 	%r355, -1, 0, %p207;
	selp.b32 	%r356, %r355, %r354, %p205;
	xor.b64  	%rd834, %rd825, %rd833;
	xor.b64  	%rd835, %rd824, %rd832;
	or.b64  	%rd836, %rd835, %rd834;
	setp.eq.s64 	%p208, %rd836, 0;
	selp.b32 	%r357, %r356, %r353, %p208;
	and.b32  	%r358, %r357, 1;
	setp.eq.b32 	%p209, %r358, 1;
	{ // callseq 127, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r359, [retval0+0];
	} // callseq 127
	selp.b32 	%r361, 4, 0, %p209;
	mov.u32 	%r362, 219;
	{ // callseq 128, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r359;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r361;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r362;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 128
	bra.uni 	$L__BB3_76;
$L__BB3_125:                            // %JumpTable
	setp.eq.s64 	%p37, %rd1083, 543;
	@%p37 bra 	$L__BB3_58;
	bra.uni 	$L__BB3_147;
$L__BB3_58:                             // %.543
	setp.lt.u64 	%p95, %rd73, 184;
	@%p95 bra 	$L__BB3_147;
// %bb.59:
	xor.b32  	%r95, %r12, 3378;
	cvt.s64.s32 	%rd340, %r95;
	add.s64 	%rd342, %rd1074, %rd340;
	xor.b32  	%r96, %r13, %r95;
	cvt.s64.s32 	%rd343, %r96;
	add.s64 	%rd344, %rd80, %rd343;
	ld.global.u8 	%rs43, [%rd344];
	add.s16 	%rs44, %rs43, 1;
	st.global.u8 	[%rd344], %rs44;
	st.global.u8 	[%rd342], %rs3;
	shl.b64 	%rd345, %rd74, 5;
	add.s64 	%rd346, %rd87, %rd345;
	ld.u64 	%rd347, [%rd346+8];
	ld.u64 	%rd348, [%rd346];
	ld.u64 	%rd349, [%rd346+24];
	ld.u64 	%rd350, [%rd346+16];
	add.u64 	%rd351, %SP, 960;
	add.u64 	%rd352, %SPL, 960;
	{ // callseq 33, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd91;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd351;
	call.uni 
	__device_mload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 33
	ld.local.u64 	%rd354, [%rd352+24];
	ld.local.u64 	%rd355, [%rd352+16];
	ld.local.u64 	%rd356, [%rd352+8];
	ld.local.u64 	%rd357, [%rd352];
	add.u64 	%rd358, %SP, 992;
	add.u64 	%rd359, %SPL, 992;
	st.local.u64 	[%rd359+16], %rd350;
	st.local.u64 	[%rd359+24], %rd349;
	st.local.u64 	[%rd359], %rd348;
	st.local.u64 	[%rd359+8], %rd347;
	{ // callseq 34, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd357;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd358;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd92;
	call.uni 
	__device_mstore, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 34
	add.cc.s64 	%rd361, %rd357, 32;
	addc.cc.s64 	%rd362, %rd356, 0;
	addc.cc.s64 	%rd363, %rd355, 0;
	addc.cc.s64 	%rd364, %rd354, 0;
	or.b64  	%rd365, %rd363, %rd364;
	or.b64  	%rd366, %rd365, %rd362;
	setp.lt.u64 	%p96, %rd361, 32;
	{ // callseq 35, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r97, [retval0+0];
	} // callseq 35
	setp.eq.s64 	%p97, %rd366, 0;
	selp.b32 	%r99, 4, 0, %p96;
	selp.b32 	%r100, %r99, 0, %p97;
	mov.u32 	%r101, 553;
	{ // callseq 36, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r97;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r100;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r101;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 36
	add.u64 	%rd367, %SP, 1024;
	add.u64 	%rd368, %SPL, 1024;
	{ // callseq 37, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd91;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd367;
	call.uni 
	__device_mload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 37
	ld.local.u64 	%rd369, [%rd368];
	ld.local.u64 	%rd370, [%rd368+8];
	ld.local.u64 	%rd371, [%rd368+16];
	ld.local.u64 	%rd372, [%rd368+24];
	setp.eq.s64 	%p98, %rd364, %rd372;
	setp.lt.u64 	%p99, %rd364, %rd372;
	selp.u32 	%r102, -1, 0, %p99;
	setp.lt.u64 	%p100, %rd363, %rd371;
	selp.u32 	%r103, -1, 0, %p100;
	selp.b32 	%r104, %r103, %r102, %p98;
	setp.eq.s64 	%p101, %rd362, %rd370;
	setp.lt.u64 	%p102, %rd362, %rd370;
	selp.u32 	%r105, -1, 0, %p102;
	setp.lt.u64 	%p103, %rd361, %rd369;
	selp.u32 	%r106, -1, 0, %p103;
	selp.b32 	%r107, %r106, %r105, %p101;
	xor.b64  	%rd373, %rd364, %rd372;
	xor.b64  	%rd374, %rd363, %rd371;
	or.b64  	%rd375, %rd374, %rd373;
	setp.eq.s64 	%p104, %rd375, 0;
	selp.b32 	%r108, %r107, %r104, %p104;
	and.b32  	%r109, %r108, 1;
	setp.eq.b32 	%p105, %r109, 1;
	{ // callseq 38, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r110, [retval0+0];
	} // callseq 38
	selp.b32 	%r112, 4, 0, %p105;
	mov.u32 	%r113, 562;
	{ // callseq 39, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r110;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r112;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r113;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 39
	bra.uni 	$L__BB3_76;
$L__BB3_112:                            // %JumpTable
	setp.eq.s64 	%p50, %rd1083, 350;
	@%p50 bra 	$L__BB3_34;
	bra.uni 	$L__BB3_147;
$L__BB3_34:                             // %.350
	setp.lt.u64 	%p150, %rd73, 184;
	@%p150 bra 	$L__BB3_147;
// %bb.35:
	xor.b32  	%r236, %r12, 2536;
	cvt.s64.s32 	%rd602, %r236;
	add.s64 	%rd604, %rd1074, %rd602;
	xor.b32  	%r237, %r13, %r236;
	cvt.s64.s32 	%rd605, %r237;
	add.s64 	%rd606, %rd80, %rd605;
	ld.global.u8 	%rs82, [%rd606];
	add.s16 	%rs83, %rs82, 1;
	st.global.u8 	[%rd606], %rs83;
	st.global.u8 	[%rd604], %rs3;
	shl.b64 	%rd607, %rd74, 5;
	add.s64 	%rd608, %rd87, %rd607;
	ld.u64 	%rd609, [%rd608+8];
	ld.u64 	%rd610, [%rd608];
	ld.u64 	%rd611, [%rd608+24];
	ld.u64 	%rd612, [%rd608+16];
	add.u64 	%rd613, %SP, 544;
	add.u64 	%rd614, %SPL, 544;
	{ // callseq 86, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd91;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd613;
	call.uni 
	__device_mload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 86
	ld.local.u64 	%rd616, [%rd614+24];
	ld.local.u64 	%rd617, [%rd614+16];
	ld.local.u64 	%rd618, [%rd614+8];
	ld.local.u64 	%rd619, [%rd614];
	add.u64 	%rd620, %SP, 576;
	add.u64 	%rd621, %SPL, 576;
	st.local.u64 	[%rd621+16], %rd612;
	st.local.u64 	[%rd621+24], %rd611;
	st.local.u64 	[%rd621], %rd610;
	st.local.u64 	[%rd621+8], %rd609;
	{ // callseq 87, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd619;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd620;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd92;
	call.uni 
	__device_mstore, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 87
	add.cc.s64 	%rd623, %rd619, 32;
	addc.cc.s64 	%rd624, %rd618, 0;
	addc.cc.s64 	%rd625, %rd617, 0;
	addc.cc.s64 	%rd626, %rd616, 0;
	or.b64  	%rd627, %rd625, %rd626;
	or.b64  	%rd628, %rd627, %rd624;
	setp.lt.u64 	%p151, %rd623, 32;
	{ // callseq 88, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r238, [retval0+0];
	} // callseq 88
	setp.eq.s64 	%p152, %rd628, 0;
	selp.b32 	%r240, 4, 0, %p151;
	selp.b32 	%r241, %r240, 0, %p152;
	mov.u32 	%r242, 360;
	{ // callseq 89, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r238;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r241;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r242;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 89
	add.u64 	%rd629, %SP, 608;
	add.u64 	%rd630, %SPL, 608;
	{ // callseq 90, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd91;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd629;
	call.uni 
	__device_mload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 90
	ld.local.u64 	%rd631, [%rd630];
	ld.local.u64 	%rd632, [%rd630+8];
	ld.local.u64 	%rd633, [%rd630+16];
	ld.local.u64 	%rd634, [%rd630+24];
	setp.eq.s64 	%p153, %rd626, %rd634;
	setp.lt.u64 	%p154, %rd626, %rd634;
	selp.u32 	%r243, -1, 0, %p154;
	setp.lt.u64 	%p155, %rd625, %rd633;
	selp.u32 	%r244, -1, 0, %p155;
	selp.b32 	%r245, %r244, %r243, %p153;
	setp.eq.s64 	%p156, %rd624, %rd632;
	setp.lt.u64 	%p157, %rd624, %rd632;
	selp.u32 	%r246, -1, 0, %p157;
	setp.lt.u64 	%p158, %rd623, %rd631;
	selp.u32 	%r247, -1, 0, %p158;
	selp.b32 	%r248, %r247, %r246, %p156;
	xor.b64  	%rd635, %rd626, %rd634;
	xor.b64  	%rd636, %rd625, %rd633;
	or.b64  	%rd637, %rd636, %rd635;
	setp.eq.s64 	%p159, %rd637, 0;
	selp.b32 	%r249, %r248, %r245, %p159;
	and.b32  	%r250, %r249, 1;
	setp.eq.b32 	%p160, %r250, 1;
	{ // callseq 91, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r251, [retval0+0];
	} // callseq 91
	selp.b32 	%r253, 4, 0, %p160;
	mov.u32 	%r254, 369;
	{ // callseq 92, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r251;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r253;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r254;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 92
	bra.uni 	$L__BB3_76;
$L__BB3_103:                            // %JumpTable
	setp.eq.s64 	%p58, %rd1083, 142;
	@%p58 bra 	$L__BB3_10;
	bra.uni 	$L__BB3_147;
$L__BB3_10:                             // %.142
	setp.lt.u64 	%p240, %rd73, 16;
	@%p240 bra 	$L__BB3_147;
// %bb.11:
	xor.b32  	%r466, %r12, 3277;
	cvt.s64.s32 	%rd1069, %r466;
	add.s64 	%rd1071, %rd1074, %rd1069;
	xor.b32  	%r467, %r13, %r466;
	cvt.s64.s32 	%rd1072, %r467;
	add.s64 	%rd1073, %rd80, %rd1072;
	ld.global.u8 	%rs154, [%rd1073];
	add.s16 	%rs155, %rs154, 1;
	st.global.u8 	[%rd1073], %rs155;
	st.global.u8 	[%rd1071], %rs3;
	bra.uni 	$L__BB3_147;
$L__BB3_130:                            // %JumpTable
	setp.eq.s64 	%p31, %rd1083, 586;
	@%p31 bra 	$L__BB3_66;
	bra.uni 	$L__BB3_147;
$L__BB3_66:                             // %.586
	setp.lt.u64 	%p71, %rd73, 184;
	@%p71 bra 	$L__BB3_147;
// %bb.67:
	xor.b32  	%r54, %r12, 1112;
	cvt.s64.s32 	%rd197, %r54;
	add.s64 	%rd199, %rd1074, %rd197;
	xor.b32  	%r55, %r13, %r54;
	cvt.s64.s32 	%rd200, %r55;
	add.s64 	%rd201, %rd80, %rd200;
	ld.global.u8 	%rs34, [%rd201];
	add.s16 	%rs35, %rs34, 1;
	st.global.u8 	[%rd201], %rs35;
	st.global.u8 	[%rd199], %rs3;
	shl.b64 	%rd202, %rd74, 5;
	add.s64 	%rd203, %rd87, %rd202;
	ld.u64 	%rd204, [%rd203+8];
	ld.u64 	%rd205, [%rd203];
	ld.u64 	%rd206, [%rd203+24];
	ld.u64 	%rd207, [%rd203+16];
	add.u64 	%rd208, %SP, 1056;
	add.u64 	%rd209, %SPL, 1056;
	{ // callseq 21, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd91;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd208;
	call.uni 
	__device_mload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 21
	ld.local.u64 	%rd211, [%rd209+24];
	ld.local.u64 	%rd212, [%rd209+16];
	ld.local.u64 	%rd213, [%rd209+8];
	ld.local.u64 	%rd214, [%rd209];
	add.u64 	%rd215, %SP, 1088;
	add.u64 	%rd216, %SPL, 1088;
	st.local.u64 	[%rd216+16], %rd207;
	st.local.u64 	[%rd216+24], %rd206;
	st.local.u64 	[%rd216], %rd205;
	st.local.u64 	[%rd216+8], %rd204;
	{ // callseq 22, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd214;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd215;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd92;
	call.uni 
	__device_mstore, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 22
	add.cc.s64 	%rd218, %rd214, 32;
	addc.cc.s64 	%rd219, %rd213, 0;
	addc.cc.s64 	%rd220, %rd212, 0;
	addc.cc.s64 	%rd221, %rd211, 0;
	or.b64  	%rd222, %rd220, %rd221;
	or.b64  	%rd223, %rd222, %rd219;
	setp.lt.u64 	%p72, %rd218, 32;
	{ // callseq 23, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r56, [retval0+0];
	} // callseq 23
	setp.eq.s64 	%p73, %rd223, 0;
	selp.b32 	%r58, 4, 0, %p72;
	selp.b32 	%r59, %r58, 0, %p73;
	mov.u32 	%r60, 596;
	{ // callseq 24, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r56;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r59;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r60;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 24
	add.u64 	%rd224, %SP, 1120;
	add.u64 	%rd225, %SPL, 1120;
	{ // callseq 25, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd91;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd224;
	call.uni 
	__device_mload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 25
	ld.local.u64 	%rd226, [%rd225];
	ld.local.u64 	%rd227, [%rd225+8];
	ld.local.u64 	%rd228, [%rd225+16];
	ld.local.u64 	%rd229, [%rd225+24];
	setp.eq.s64 	%p74, %rd221, %rd229;
	setp.lt.u64 	%p75, %rd221, %rd229;
	selp.u32 	%r61, -1, 0, %p75;
	setp.lt.u64 	%p76, %rd220, %rd228;
	selp.u32 	%r62, -1, 0, %p76;
	selp.b32 	%r63, %r62, %r61, %p74;
	setp.eq.s64 	%p77, %rd219, %rd227;
	setp.lt.u64 	%p78, %rd219, %rd227;
	selp.u32 	%r64, -1, 0, %p78;
	setp.lt.u64 	%p79, %rd218, %rd226;
	selp.u32 	%r65, -1, 0, %p79;
	selp.b32 	%r66, %r65, %r64, %p77;
	xor.b64  	%rd230, %rd221, %rd229;
	xor.b64  	%rd231, %rd220, %rd228;
	or.b64  	%rd232, %rd231, %rd230;
	setp.eq.s64 	%p80, %rd232, 0;
	selp.b32 	%r67, %r66, %r63, %p80;
	and.b32  	%r68, %r67, 1;
	setp.eq.b32 	%p81, %r68, 1;
	{ // callseq 26, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r69, [retval0+0];
	} // callseq 26
	selp.b32 	%r71, 4, 0, %p81;
	mov.u32 	%r72, 605;
	{ // callseq 27, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r69;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r71;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r72;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 27
	bra.uni 	$L__BB3_76;
$L__BB3_122:                            // %JumpTable
	setp.eq.s64 	%p39, %rd1083, 468;
	@%p39 bra 	$L__BB3_50;
	bra.uni 	$L__BB3_147;
$L__BB3_50:                             // %.468
	setp.lt.u64 	%p109, %rd73, 184;
	@%p109 bra 	$L__BB3_147;
// %bb.51:
	xor.b32  	%r140, %r12, 1951;
	cvt.s64.s32 	%rd420, %r140;
	add.s64 	%rd422, %rd1074, %rd420;
	xor.b32  	%r141, %r13, %r140;
	cvt.s64.s32 	%rd423, %r141;
	add.s64 	%rd424, %rd80, %rd423;
	ld.global.u8 	%rs52, [%rd424];
	add.s16 	%rs53, %rs52, 1;
	st.global.u8 	[%rd424], %rs53;
	st.global.u8 	[%rd422], %rs3;
	shl.b64 	%rd425, %rd74, 5;
	add.s64 	%rd426, %rd87, %rd425;
	ld.u64 	%rd427, [%rd426+8];
	ld.u64 	%rd428, [%rd426];
	ld.u64 	%rd429, [%rd426+24];
	ld.u64 	%rd430, [%rd426+16];
	add.u64 	%rd431, %SP, 800;
	add.u64 	%rd432, %SPL, 800;
	{ // callseq 53, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd91;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd431;
	call.uni 
	__device_mload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 53
	ld.local.u64 	%rd434, [%rd432+24];
	ld.local.u64 	%rd435, [%rd432+16];
	ld.local.u64 	%rd436, [%rd432+8];
	ld.local.u64 	%rd437, [%rd432];
	add.u64 	%rd438, %SP, 832;
	add.u64 	%rd439, %SPL, 832;
	st.local.u64 	[%rd439+16], %rd430;
	st.local.u64 	[%rd439+24], %rd429;
	st.local.u64 	[%rd439], %rd428;
	st.local.u64 	[%rd439+8], %rd427;
	{ // callseq 54, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd437;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd438;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd92;
	call.uni 
	__device_mstore, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 54
	add.cc.s64 	%rd441, %rd437, 32;
	addc.cc.s64 	%rd442, %rd436, 0;
	addc.cc.s64 	%rd443, %rd435, 0;
	addc.cc.s64 	%rd444, %rd434, 0;
	or.b64  	%rd445, %rd443, %rd444;
	or.b64  	%rd446, %rd445, %rd442;
	setp.lt.u64 	%p110, %rd441, 32;
	{ // callseq 55, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r142, [retval0+0];
	} // callseq 55
	setp.eq.s64 	%p111, %rd446, 0;
	selp.b32 	%r144, 4, 0, %p110;
	selp.b32 	%r145, %r144, 0, %p111;
	mov.u32 	%r146, 478;
	{ // callseq 56, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r142;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r145;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r146;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 56
	add.u64 	%rd447, %SP, 864;
	add.u64 	%rd448, %SPL, 864;
	{ // callseq 57, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd91;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd447;
	call.uni 
	__device_mload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 57
	ld.local.u64 	%rd449, [%rd448];
	ld.local.u64 	%rd450, [%rd448+8];
	ld.local.u64 	%rd451, [%rd448+16];
	ld.local.u64 	%rd452, [%rd448+24];
	setp.eq.s64 	%p112, %rd444, %rd452;
	setp.lt.u64 	%p113, %rd444, %rd452;
	selp.u32 	%r147, -1, 0, %p113;
	setp.lt.u64 	%p114, %rd443, %rd451;
	selp.u32 	%r148, -1, 0, %p114;
	selp.b32 	%r149, %r148, %r147, %p112;
	setp.eq.s64 	%p115, %rd442, %rd450;
	setp.lt.u64 	%p116, %rd442, %rd450;
	selp.u32 	%r150, -1, 0, %p116;
	setp.lt.u64 	%p117, %rd441, %rd449;
	selp.u32 	%r151, -1, 0, %p117;
	selp.b32 	%r152, %r151, %r150, %p115;
	xor.b64  	%rd453, %rd444, %rd452;
	xor.b64  	%rd454, %rd443, %rd451;
	or.b64  	%rd455, %rd454, %rd453;
	setp.eq.s64 	%p118, %rd455, 0;
	selp.b32 	%r153, %r152, %r149, %p118;
	and.b32  	%r154, %r153, 1;
	setp.eq.b32 	%p119, %r154, 1;
	{ // callseq 58, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r155, [retval0+0];
	} // callseq 58
	selp.b32 	%r157, 4, 0, %p119;
	mov.u32 	%r158, 487;
	{ // callseq 59, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r155;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r157;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r158;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 59
	bra.uni 	$L__BB3_76;
$L__BB3_109:                            // %JumpTable
	setp.eq.s64 	%p52, %rd1083, 275;
	@%p52 bra 	$L__BB3_26;
	bra.uni 	$L__BB3_147;
$L__BB3_26:                             // %.275
	setp.lt.u64 	%p174, %rd73, 184;
	@%p174 bra 	$L__BB3_147;
// %bb.27:
	xor.b32  	%r283, %r12, 706;
	cvt.s64.s32 	%rd694, %r283;
	add.s64 	%rd696, %rd1074, %rd694;
	xor.b32  	%r284, %r13, %r283;
	cvt.s64.s32 	%rd697, %r284;
	add.s64 	%rd698, %rd80, %rd697;
	ld.global.u8 	%rs97, [%rd698];
	add.s16 	%rs98, %rs97, 1;
	st.global.u8 	[%rd698], %rs98;
	st.global.u8 	[%rd696], %rs3;
	shl.b64 	%rd699, %rd74, 5;
	add.s64 	%rd700, %rd87, %rd699;
	ld.u64 	%rd701, [%rd700+8];
	ld.u64 	%rd702, [%rd700];
	ld.u64 	%rd703, [%rd700+24];
	ld.u64 	%rd704, [%rd700+16];
	add.u64 	%rd705, %SP, 384;
	add.u64 	%rd706, %SPL, 384;
	{ // callseq 99, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd91;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd705;
	call.uni 
	__device_mload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 99
	ld.local.u64 	%rd708, [%rd706+24];
	ld.local.u64 	%rd709, [%rd706+16];
	ld.local.u64 	%rd710, [%rd706+8];
	ld.local.u64 	%rd711, [%rd706];
	add.u64 	%rd712, %SP, 416;
	add.u64 	%rd713, %SPL, 416;
	st.local.u64 	[%rd713+16], %rd704;
	st.local.u64 	[%rd713+24], %rd703;
	st.local.u64 	[%rd713], %rd702;
	st.local.u64 	[%rd713+8], %rd701;
	{ // callseq 100, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd711;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd712;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd92;
	call.uni 
	__device_mstore, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 100
	add.cc.s64 	%rd715, %rd711, 32;
	addc.cc.s64 	%rd716, %rd710, 0;
	addc.cc.s64 	%rd717, %rd709, 0;
	addc.cc.s64 	%rd718, %rd708, 0;
	or.b64  	%rd719, %rd717, %rd718;
	or.b64  	%rd720, %rd719, %rd716;
	setp.lt.u64 	%p175, %rd715, 32;
	{ // callseq 101, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r285, [retval0+0];
	} // callseq 101
	setp.eq.s64 	%p176, %rd720, 0;
	selp.b32 	%r287, 4, 0, %p175;
	selp.b32 	%r288, %r287, 0, %p176;
	mov.u32 	%r289, 285;
	{ // callseq 102, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r285;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r288;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r289;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 102
	add.u64 	%rd721, %SP, 448;
	add.u64 	%rd722, %SPL, 448;
	{ // callseq 103, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd91;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd721;
	call.uni 
	__device_mload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 103
	ld.local.u64 	%rd723, [%rd722];
	ld.local.u64 	%rd724, [%rd722+8];
	ld.local.u64 	%rd725, [%rd722+16];
	ld.local.u64 	%rd726, [%rd722+24];
	setp.eq.s64 	%p177, %rd718, %rd726;
	setp.lt.u64 	%p178, %rd718, %rd726;
	selp.u32 	%r290, -1, 0, %p178;
	setp.lt.u64 	%p179, %rd717, %rd725;
	selp.u32 	%r291, -1, 0, %p179;
	selp.b32 	%r292, %r291, %r290, %p177;
	setp.eq.s64 	%p180, %rd716, %rd724;
	setp.lt.u64 	%p181, %rd716, %rd724;
	selp.u32 	%r293, -1, 0, %p181;
	setp.lt.u64 	%p182, %rd715, %rd723;
	selp.u32 	%r294, -1, 0, %p182;
	selp.b32 	%r295, %r294, %r293, %p180;
	xor.b64  	%rd727, %rd718, %rd726;
	xor.b64  	%rd728, %rd717, %rd725;
	or.b64  	%rd729, %rd728, %rd727;
	setp.eq.s64 	%p183, %rd729, 0;
	selp.b32 	%r296, %r295, %r292, %p183;
	and.b32  	%r297, %r296, 1;
	setp.eq.b32 	%p184, %r297, 1;
	{ // callseq 104, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r298, [retval0+0];
	} // callseq 104
	selp.b32 	%r300, 4, 0, %p184;
	mov.u32 	%r301, 294;
	{ // callseq 105, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r298;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r300;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r301;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 105
	bra.uni 	$L__BB3_76;
$L__BB3_135:                            // %JumpTable
	setp.eq.s64 	%p26, %rd1083, 661;
	@%p26 bra 	$L__BB3_74;
	bra.uni 	$L__BB3_147;
$L__BB3_74:                             // %.661
	setp.lt.u64 	%p60, %rd73, 184;
	@%p60 bra 	$L__BB3_147;
// %bb.75:
	xor.b32  	%r35, %r12, 2397;
	cvt.s64.s32 	%rd161, %r35;
	add.s64 	%rd163, %rd1074, %rd161;
	xor.b32  	%r36, %r13, %r35;
	cvt.s64.s32 	%rd164, %r36;
	add.s64 	%rd165, %rd80, %rd164;
	ld.global.u8 	%rs31, [%rd165];
	add.s16 	%rs32, %rs31, 1;
	st.global.u8 	[%rd165], %rs32;
	st.global.u8 	[%rd163], %rs3;
	shl.b64 	%rd166, %rd74, 5;
	add.s64 	%rd167, %rd87, %rd166;
	ld.u64 	%rd168, [%rd167+8];
	ld.u64 	%rd169, [%rd167];
	ld.u64 	%rd170, [%rd167+24];
	ld.u64 	%rd171, [%rd167+16];
	add.u64 	%rd172, %SP, 1216;
	add.u64 	%rd173, %SPL, 1216;
	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd91;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd172;
	call.uni 
	__device_mload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 14
	ld.local.u64 	%rd175, [%rd173+24];
	ld.local.u64 	%rd176, [%rd173+16];
	ld.local.u64 	%rd177, [%rd173+8];
	ld.local.u64 	%rd178, [%rd173];
	add.u64 	%rd179, %SP, 1248;
	add.u64 	%rd180, %SPL, 1248;
	st.local.u64 	[%rd180+16], %rd171;
	st.local.u64 	[%rd180+24], %rd170;
	st.local.u64 	[%rd180], %rd169;
	st.local.u64 	[%rd180+8], %rd168;
	{ // callseq 15, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd178;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd179;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd92;
	call.uni 
	__device_mstore, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 15
	add.cc.s64 	%rd182, %rd178, 32;
	addc.cc.s64 	%rd183, %rd177, 0;
	addc.cc.s64 	%rd184, %rd176, 0;
	addc.cc.s64 	%rd185, %rd175, 0;
	or.b64  	%rd186, %rd184, %rd185;
	or.b64  	%rd187, %rd186, %rd183;
	setp.lt.u64 	%p61, %rd182, 32;
	{ // callseq 16, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r37, [retval0+0];
	} // callseq 16
	setp.eq.s64 	%p62, %rd187, 0;
	selp.b32 	%r39, 4, 0, %p61;
	selp.b32 	%r40, %r39, 0, %p62;
	mov.u32 	%r41, 671;
	{ // callseq 17, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r37;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r40;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r41;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 17
	add.u64 	%rd188, %SP, 1280;
	add.u64 	%rd189, %SPL, 1280;
	{ // callseq 18, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd91;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd188;
	call.uni 
	__device_mload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 18
	ld.local.u64 	%rd190, [%rd189];
	ld.local.u64 	%rd191, [%rd189+8];
	ld.local.u64 	%rd192, [%rd189+16];
	ld.local.u64 	%rd193, [%rd189+24];
	setp.eq.s64 	%p63, %rd185, %rd193;
	setp.lt.u64 	%p64, %rd185, %rd193;
	selp.u32 	%r42, -1, 0, %p64;
	setp.lt.u64 	%p65, %rd184, %rd192;
	selp.u32 	%r43, -1, 0, %p65;
	selp.b32 	%r44, %r43, %r42, %p63;
	setp.eq.s64 	%p66, %rd183, %rd191;
	setp.lt.u64 	%p67, %rd183, %rd191;
	selp.u32 	%r45, -1, 0, %p67;
	setp.lt.u64 	%p68, %rd182, %rd190;
	selp.u32 	%r46, -1, 0, %p68;
	selp.b32 	%r47, %r46, %r45, %p66;
	xor.b64  	%rd194, %rd185, %rd193;
	xor.b64  	%rd195, %rd184, %rd192;
	or.b64  	%rd196, %rd195, %rd194;
	setp.eq.s64 	%p69, %rd196, 0;
	selp.b32 	%r48, %r47, %r44, %p69;
	and.b32  	%r49, %r48, 1;
	setp.eq.b32 	%p70, %r49, 1;
	{ // callseq 19, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	get_thread_id, 
	(
	);
	ld.param.b32 	%r50, [retval0+0];
	} // callseq 19
	selp.b32 	%r52, 4, 0, %p70;
	mov.u32 	%r53, 680;
	{ // callseq 20, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r50;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r52;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r53;
	call.uni 
	addBugSet, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 20
$L__BB3_76:                             // %Exit
	{ // callseq 129, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 129
	{ // callseq 130, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd87;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 130
	mov.u32 	%r363, 1;
	st.param.b32 	[func_retval0+0], %r363;
	ret;
$L__BB3_22:                             // %.230
	setp.lt.u64 	%p236, %rd73, 40;
	@%p236 bra 	$L__BB3_147;
// %bb.23:
	xor.b32  	%r461, %r13, 1463;
	cvt.s64.s32 	%rd1056, %r461;
	add.s64 	%rd1057, %rd80, %rd1056;
	ld.global.u8 	%rs145, [%rd1057];
	add.s16 	%rs146, %rs145, 1;
	st.global.u8 	[%rd1057], %rs146;
	st.global.u8 	[__cov_bits+1463], %rs3;
	bra.uni 	$L__BB3_147;
$L__BB3_62:                             // %.573
	setp.lt.u64 	%p149, %rd73, 40;
	@%p149 bra 	$L__BB3_147;
// %bb.63:
	xor.b32  	%r235, %r13, 1969;
	cvt.s64.s32 	%rd600, %r235;
	add.s64 	%rd601, %rd80, %rd600;
	ld.global.u8 	%rs79, [%rd601];
	add.s16 	%rs80, %rs79, 1;
	st.global.u8 	[%rd601], %rs80;
	st.global.u8 	[__cov_bits+1969], %rs3;
	bra.uni 	$L__BB3_147;
$L__BB3_14:                             // %.155
	setp.lt.u64 	%p239, %rd73, 40;
	@%p239 bra 	$L__BB3_147;
// %bb.15:
	xor.b32  	%r465, %r13, 1014;
	cvt.s64.s32 	%rd1067, %r465;
	add.s64 	%rd1068, %rd80, %rd1067;
	ld.global.u8 	%rs151, [%rd1068];
	add.s16 	%rs152, %rs151, 1;
	st.global.u8 	[%rd1068], %rs152;
	st.global.u8 	[__cov_bits+1014], %rs3;
	bra.uni 	$L__BB3_147;
$L__BB3_54:                             // %.498
	setp.lt.u64 	%p173, %rd73, 40;
	@%p173 bra 	$L__BB3_147;
// %bb.55:
	xor.b32  	%r282, %r13, 1534;
	cvt.s64.s32 	%rd692, %r282;
	add.s64 	%rd693, %rd80, %rd692;
	ld.global.u8 	%rs94, [%rd693];
	add.s16 	%rs95, %rs94, 1;
	st.global.u8 	[%rd693], %rs95;
	st.global.u8 	[__cov_bits+1534], %rs3;
	bra.uni 	$L__BB3_147;
$L__BB3_46:                             // %.455
	setp.lt.u64 	%p198, %rd73, 40;
	@%p198 bra 	$L__BB3_147;
// %bb.47:
	xor.b32  	%r343, %r13, 1780;
	cvt.s64.s32 	%rd799, %r343;
	add.s64 	%rd800, %rd80, %rd799;
	ld.global.u8 	%rs109, [%rd800];
	add.s16 	%rs110, %rs109, 1;
	st.global.u8 	[%rd800], %rs110;
	st.global.u8 	[__cov_bits+1780], %rs3;
	bra.uni 	$L__BB3_147;
$L__BB3_70:                             // %.616
	setp.lt.u64 	%p132, %rd73, 40;
	@%p132 bra 	$L__BB3_147;
// %bb.71:
	xor.b32  	%r186, %r13, 2315;
	cvt.s64.s32 	%rd510, %r186;
	add.s64 	%rd511, %rd80, %rd510;
	ld.global.u8 	%rs64, [%rd511];
	add.s16 	%rs65, %rs64, 1;
	st.global.u8 	[%rd511], %rs65;
	st.global.u8 	[__cov_bits+2315], %rs3;
	bra.uni 	$L__BB3_147;
$L__BB3_30:                             // %.305
	setp.lt.u64 	%p231, %rd73, 40;
	@%p231 bra 	$L__BB3_147;
// %bb.31:
	xor.b32  	%r440, %r13, 978;
	cvt.s64.s32 	%rd1021, %r440;
	add.s64 	%rd1022, %rd80, %rd1021;
	ld.global.u8 	%rs136, [%rd1022];
	add.s16 	%rs137, %rs136, 1;
	st.global.u8 	[%rd1022], %rs137;
	st.global.u8 	[__cov_bits+978], %rs3;
$L__BB3_147:                            // %Abort
	{ // callseq 174, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 174
	{ // callseq 175, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd87;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 175
	mov.u32 	%r468, 0;
	st.param.b32 	[func_retval0+0], %r468;
	ret;
                                        // -- End function
}
.func evm_$_udiv_$_i256(
	.param .b64 evm_$_udiv_$_i256_param_0,
	.param .b64 evm_$_udiv_$_i256_param_1,
	.param .b64 evm_$_udiv_$_i256_param_2
)                                       // -- Begin function evm_$_udiv_$_i256
                                        // @"evm_$_udiv_$_i256"
{
	.local .align 8 .b8 	__local_depot4[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .b64 	%rd<5>;

// %bb.0:
	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd1, [evm_$_udiv_$_i256_param_0];
	ld.param.u64 	%rd2, [evm_$_udiv_$_i256_param_1];
	ld.param.u64 	%rd3, [evm_$_udiv_$_i256_param_2];
	add.u64 	%rd4, %SP, 0;
	{ // callseq 176, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd2;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd3;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd4;
	call.uni 
	evm_$_udivrem_$_i256, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 176
	ret;
                                        // -- End function
}
.func evm_$_udivrem_$_i256(
	.param .b64 evm_$_udivrem_$_i256_param_0,
	.param .b64 evm_$_udivrem_$_i256_param_1,
	.param .b64 evm_$_udivrem_$_i256_param_2,
	.param .b64 evm_$_udivrem_$_i256_param_3
)                                       // -- Begin function evm_$_udivrem_$_i256
                                        // @"evm_$_udivrem_$_i256"
{
	.reg .pred 	%p<25>;
	.reg .b32 	%r<25>;
	.reg .b64 	%rd<175>;

// %bb.0:                               // %Entry
	ld.param.u64 	%rd74, [evm_$_udivrem_$_i256_param_3];
	ld.param.u64 	%rd73, [evm_$_udivrem_$_i256_param_2];
	ld.param.u64 	%rd79, [evm_$_udivrem_$_i256_param_0];
	ld.u64 	%rd155, [%rd79];
	ld.u64 	%rd156, [%rd79+8];
	ld.u64 	%rd157, [%rd79+16];
	ld.u64 	%rd158, [%rd79+24];
	ld.param.u64 	%rd80, [evm_$_udivrem_$_i256_param_1];
	ld.u64 	%rd147, [%rd80];
	ld.u64 	%rd148, [%rd80+8];
	ld.u64 	%rd149, [%rd80+16];
	ld.u64 	%rd150, [%rd80+24];
	setp.eq.s64 	%p1, %rd150, %rd158;
	setp.gt.u64 	%p2, %rd150, %rd158;
	selp.u32 	%r1, -1, 0, %p2;
	setp.gt.u64 	%p3, %rd149, %rd157;
	selp.u32 	%r2, -1, 0, %p3;
	selp.b32 	%r3, %r2, %r1, %p1;
	setp.eq.s64 	%p4, %rd148, %rd156;
	setp.gt.u64 	%p5, %rd148, %rd156;
	selp.u32 	%r4, -1, 0, %p5;
	setp.gt.u64 	%p6, %rd147, %rd155;
	selp.u32 	%r5, -1, 0, %p6;
	selp.b32 	%r6, %r5, %r4, %p4;
	xor.b64  	%rd81, %rd150, %rd158;
	xor.b64  	%rd82, %rd149, %rd157;
	or.b64  	%rd83, %rd82, %rd81;
	setp.eq.s64 	%p7, %rd83, 0;
	selp.b32 	%r7, %r6, %r3, %p7;
	and.b32  	%r8, %r7, 1;
	setp.eq.b32 	%p8, %r8, 1;
	mov.u64 	%rd167, 0;
	mov.u64 	%rd168, %rd167;
	mov.u64 	%rd169, %rd167;
	mov.u64 	%rd170, %rd167;
	@%p8 bra 	$L__BB5_6;
// %bb.1:                               // %Main
	setp.ne.s64 	%p9, %rd150, 0;
	clz.b64 	%r9, %rd149;
	cvt.u64.u32 	%rd84, %r9;
	add.s64 	%rd85, %rd84, 64;
	clz.b64 	%r10, %rd150;
	cvt.u64.u32 	%rd86, %r10;
	selp.b64 	%rd87, %rd86, %rd85, %p9;
	setp.ne.s64 	%p10, %rd148, 0;
	clz.b64 	%r11, %rd147;
	cvt.u64.u32 	%rd88, %r11;
	add.s64 	%rd89, %rd88, 64;
	clz.b64 	%r12, %rd148;
	cvt.u64.u32 	%rd90, %r12;
	selp.b64 	%rd91, %rd90, %rd89, %p10;
	add.s64 	%rd92, %rd91, 128;
	or.b64  	%rd93, %rd149, %rd150;
	setp.ne.s64 	%p11, %rd93, 0;
	selp.b64 	%rd94, %rd87, %rd92, %p11;
	setp.ne.s64 	%p12, %rd158, 0;
	clz.b64 	%r13, %rd157;
	cvt.u64.u32 	%rd95, %r13;
	add.s64 	%rd96, %rd95, 64;
	clz.b64 	%r14, %rd158;
	cvt.u64.u32 	%rd97, %r14;
	selp.b64 	%rd98, %rd97, %rd96, %p12;
	setp.ne.s64 	%p13, %rd156, 0;
	clz.b64 	%r15, %rd155;
	cvt.u64.u32 	%rd99, %r15;
	add.s64 	%rd100, %rd99, 64;
	clz.b64 	%r16, %rd156;
	cvt.u64.u32 	%rd101, %r16;
	selp.b64 	%rd102, %rd101, %rd100, %p13;
	add.s64 	%rd103, %rd102, 128;
	or.b64  	%rd104, %rd157, %rd158;
	setp.ne.s64 	%p14, %rd104, 0;
	selp.b64 	%rd105, %rd98, %rd103, %p14;
	mov.u64 	%rd163, 0;
	sub.cc.s64 	%rd159, %rd94, %rd105;
	subc.cc.s64 	%rd160, %rd163, 0;
	subc.cc.s64 	%rd161, %rd163, 0;
	subc.cc.s64 	%rd162, %rd163, 0;
	mov.u64 	%rd143, %rd159;
	mov.u64 	%rd144, %rd160;
	mov.u64 	%rd145, %rd161;
	mov.u64 	%rd146, %rd162;
$L__BB5_2:                              // %beforeloopY
                                        // =>This Inner Loop Header: Depth=1
	or.b64  	%rd107, %rd143, %rd145;
	or.b64  	%rd108, %rd144, %rd146;
	or.b64  	%rd109, %rd107, %rd108;
	setp.ne.s64 	%p15, %rd109, 0;
	@%p15 bra 	$L__BB5_7;
	bra.uni 	$L__BB5_3;
$L__BB5_7:                              // %LoopY
                                        //   in Loop: Header=BB5_2 Depth=1
	shr.u64 	%rd137, %rd147, 63;
	shl.b64 	%rd138, %rd148, 1;
	or.b64  	%rd22, %rd138, %rd137;
	shr.u64 	%rd139, %rd148, 63;
	shl.b64 	%rd140, %rd149, 1;
	or.b64  	%rd23, %rd140, %rd139;
	shr.u64 	%rd141, %rd149, 63;
	shl.b64 	%rd142, %rd150, 1;
	or.b64  	%rd150, %rd142, %rd141;
	shl.b64 	%rd147, %rd147, 1;
	add.cc.s64 	%rd143, %rd143, -1;
	addc.cc.s64 	%rd144, %rd144, -1;
	addc.cc.s64 	%rd145, %rd145, -1;
	addc.cc.s64 	%rd146, %rd146, -1;
	mov.u64 	%rd148, %rd22;
	mov.u64 	%rd149, %rd23;
	bra.uni 	$L__BB5_2;
$L__BB5_3:                              // %Loop.preheader
	mov.u64 	%rd168, %rd163;
	mov.u64 	%rd169, %rd163;
	mov.u64 	%rd170, %rd163;
$L__BB5_4:                              // %Loop
                                        // =>This Inner Loop Header: Depth=1
	sub.cc.s64 	%rd114, %rd155, %rd147;
	subc.cc.s64 	%rd115, %rd156, %rd148;
	subc.cc.s64 	%rd116, %rd157, %rd149;
	subc.cc.s64 	%rd117, %rd158, %rd150;
	or.b64  	%rd118, %rd163, 1;
	setp.eq.s64 	%p16, %rd156, %rd148;
	setp.ge.u64 	%p17, %rd155, %rd147;
	selp.u32 	%r17, -1, 0, %p17;
	setp.ge.u64 	%p18, %rd156, %rd148;
	selp.u32 	%r18, -1, 0, %p18;
	selp.b32 	%r19, %r17, %r18, %p16;
	setp.eq.s64 	%p19, %rd158, %rd150;
	setp.ge.u64 	%p20, %rd157, %rd149;
	selp.u32 	%r20, -1, 0, %p20;
	setp.ge.u64 	%p21, %rd158, %rd150;
	selp.u32 	%r21, -1, 0, %p21;
	selp.b32 	%r22, %r20, %r21, %p19;
	xor.b64  	%rd119, %rd157, %rd149;
	xor.b64  	%rd120, %rd158, %rd150;
	or.b64  	%rd121, %rd119, %rd120;
	setp.eq.s64 	%p22, %rd121, 0;
	selp.b32 	%r23, %r19, %r22, %p22;
	and.b32  	%r24, %r23, 1;
	setp.eq.b32 	%p23, %r24, 1;
	selp.b64 	%rd158, %rd117, %rd158, %p23;
	selp.b64 	%rd157, %rd116, %rd157, %p23;
	selp.b64 	%rd156, %rd115, %rd156, %p23;
	selp.b64 	%rd155, %rd114, %rd155, %p23;
	selp.b64 	%rd167, %rd118, %rd163, %p23;
	or.b64  	%rd122, %rd159, %rd161;
	or.b64  	%rd123, %rd160, %rd162;
	or.b64  	%rd124, %rd122, %rd123;
	setp.eq.s64 	%p24, %rd124, 0;
	@%p24 bra 	$L__BB5_6;
// %bb.5:                               // %Continue
                                        //   in Loop: Header=BB5_4 Depth=1
	add.cc.s64 	%rd159, %rd159, -1;
	addc.cc.s64 	%rd160, %rd160, -1;
	addc.cc.s64 	%rd161, %rd161, -1;
	addc.cc.s64 	%rd162, %rd162, -1;
	shr.u64 	%rd125, %rd167, 63;
	shl.b64 	%rd126, %rd168, 1;
	or.b64  	%rd58, %rd126, %rd125;
	shr.u64 	%rd127, %rd168, 63;
	shl.b64 	%rd128, %rd169, 1;
	or.b64  	%rd59, %rd128, %rd127;
	shr.u64 	%rd129, %rd169, 63;
	shl.b64 	%rd130, %rd170, 1;
	or.b64  	%rd170, %rd130, %rd129;
	shl.b64 	%rd163, %rd167, 1;
	shr.u64 	%rd131, %rd147, 1;
	shl.b64 	%rd132, %rd148, 63;
	or.b64  	%rd147, %rd131, %rd132;
	shr.u64 	%rd133, %rd148, 1;
	shl.b64 	%rd134, %rd149, 63;
	or.b64  	%rd148, %rd133, %rd134;
	shr.u64 	%rd135, %rd149, 1;
	shl.b64 	%rd136, %rd150, 63;
	or.b64  	%rd149, %rd135, %rd136;
	shr.u64 	%rd150, %rd150, 1;
	mov.u64 	%rd168, %rd58;
	mov.u64 	%rd169, %rd59;
	bra.uni 	$L__BB5_4;
$L__BB5_6:                              // %Return
	st.u64 	[%rd73], %rd167;
	st.u64 	[%rd73+8], %rd168;
	st.u64 	[%rd73+16], %rd169;
	st.u64 	[%rd73+24], %rd170;
	st.u64 	[%rd74+16], %rd157;
	st.u64 	[%rd74+24], %rd158;
	st.u64 	[%rd74], %rd155;
	st.u64 	[%rd74+8], %rd156;
	ret;
                                        // -- End function
}
	// .globl	main_deployer           // -- Begin function main_deployer
.visible .entry main_deployer(
	.param .u64 main_deployer_param_0,
	.param .u64 main_deployer_param_1
)                                       // @main_deployer
{
	.local .align 1 .b8 	__local_depot6[640];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<18>;

// %bb.0:                               // %entry
	mov.u64 	%SPL, __local_depot6;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd5, [main_deployer_param_0];
	ld.global.u64 	%rd1, [__bitmaps];
	ld.global.u64 	%rd2, [%rd5];
	ld.global.u32 	%r1, [%rd5+8];
	add.u64 	%rd6, %SP, 0;
	add.u64 	%rd3, %SPL, 0;
	add.s64 	%rd4, %rd5, 12;
	mov.u32 	%r11, 0;
$L__BB6_1:                              // %load-store-loop
                                        // =>This Inner Loop Header: Depth=1
	cvt.s64.s32 	%rd7, %r11;
	add.s64 	%rd8, %rd4, %rd7;
	ld.global.u8 	%rs1, [%rd8];
	add.s64 	%rd9, %rd3, %rd7;
	st.local.u8 	[%rd9], %rs1;
	add.s32 	%r11, %r11, 1;
	setp.lt.u32 	%p1, %r11, 640;
	@%p1 bra 	$L__BB6_1;
// %bb.2:                               // %memcpy-split
	mov.u16 	%rs2, 0;
	st.global.u8 	[__l2snap_lens], %rs2;
	mov.u64 	%rd10, __l2snap_lens;
	st.global.u8 	[__l3snap_len], %rs2;
	mov.u64 	%rd11, __l2snaps;
	mov.u32 	%r12, 0;
	{ // callseq 177, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd10;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd2;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r1;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd6;
	.param .b64 param5;
	st.param.b64 	[param5+0], %rd1;
	.param .b64 param6;
	st.param.b64 	[param6+0], %rd1;
	.param .b32 param7;
	st.param.b32 	[param7+0], %r12;
	.param .b32 retval0;
	call.uni (retval0), 
	deployer, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32 	%r9, [retval0+0];
	} // callseq 177
	ld.global.u8 	%rs3, [__l2snap_lens];
	st.global.u8 	[__l3snap_len], %rs3;
	st.global.u8 	[__l2snap_lens], %rs2;
	mul.wide.u16 	%r4, %rs3, 64;
	setp.eq.s32 	%p2, %r4, 0;
	@%p2 bra 	$L__BB6_4;
$L__BB6_3:                              // %loop-memcpy-expansion
                                        // =>This Inner Loop Header: Depth=1
	cvt.s64.s32 	%rd13, %r12;
	add.s64 	%rd15, %rd11, %rd13;
	ld.global.u8 	%rs4, [%rd15];
	mov.u64 	%rd16, __l3snap;
	add.s64 	%rd17, %rd16, %rd13;
	st.global.u8 	[%rd17], %rs4;
	add.s32 	%r12, %r12, 1;
	setp.lt.u32 	%p3, %r12, %r4;
	@%p3 bra 	$L__BB6_3;
$L__BB6_4:                              // %post-loop-memcpy-expansion
	ret;
                                        // -- End function
}
.func  (.param .b32 func_retval0) deployer(
	.param .b64 deployer_param_0,
	.param .b64 deployer_param_1,
	.param .b64 deployer_param_2,
	.param .b32 deployer_param_3,
	.param .b64 deployer_param_4,
	.param .b64 deployer_param_5,
	.param .b64 deployer_param_6,
	.param .b32 deployer_param_7
)                                       // -- Begin function deployer
                                        // @deployer
{
	.local .align 8 .b8 	__local_depot7[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<20>;

// %bb.0:                               // %Entry
	mov.u64 	%SPL, __local_depot7;
	cvta.local.u64 	%SP, %SPL;
	mov.u64 	%rd4, 728;
	{ // callseq 178, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd4;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64 	%rd5, [retval0+0];
	} // callseq 178
	mov.u64 	%rd6, 8192;
	{ // callseq 179, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd6;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64 	%rd7, [retval0+0];
	} // callseq 179
	ld.param.u64 	%rd8, [deployer_param_2];
	mov.u16 	%rs1, 1;
	st.global.u8 	[__cov_bits+1691], %rs1;
	add.u64 	%rd9, %SP, 0;
	add.u64 	%rd10, %SPL, 0;
	mov.u64 	%rd11, 0;
	st.local.u64 	[%rd10+24], %rd11;
	st.local.u64 	[%rd10+16], %rd11;
	st.local.u64 	[%rd10+8], %rd11;
	mov.u64 	%rd12, 128;
	st.local.u64 	[%rd10], %rd12;
	mov.u64 	%rd13, 64;
	mov.u64 	%rd14, 32;
	{ // callseq 180, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd13;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd9;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd14;
	call.uni 
	__device_mstore, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 180
	setp.eq.s64 	%p1, %rd8, 0;
	st.u64 	[%rd7+56], %rd11;
	st.u64 	[%rd7+48], %rd11;
	st.u64 	[%rd7+40], %rd11;
	st.u64 	[%rd7+32], %rd8;
	@%p1 bra 	$L__BB7_2;
// %bb.1:                               // %.12
	st.global.u8 	[__cov_bits+3577], %rs1;
	{ // callseq 181, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd5;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 181
	{ // callseq 182, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd7;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 182
	mov.u32 	%r4, 0;
	st.param.b32 	[func_retval0+0], %r4;
	ret;
$L__BB7_2:                              // %JumpTable
	st.global.u8 	[__cov_bits+1817], %rs1;
	ld.const.u32 	%r6, [__evmCodeSize];
	mov.u32 	%r7, 32;
	rem.u32 	%r8, %r7, %r6;
	mov.u32 	%r9, 909;
	rem.u32 	%r10, %r9, %r6;
	add.s32 	%r11, %r8, %r10;
	setp.gt.u32 	%p2, %r11, %r6;
	selp.b32 	%r12, 0, %r10, %p2;
	setp.gt.u32 	%p3, %r12, 728;
	selp.b32 	%r1, 0, %r12, %p3;
	cvt.u64.u32 	%rd15, %r8;
	mov.u64 	%rd16, __evmCode;
	add.s64 	%rd3, %rd16, %rd15;
	setp.eq.s32 	%p4, %r1, 0;
	mov.u32 	%r14, 0;
	@%p4 bra 	$L__BB7_4;
$L__BB7_3:                              // %loop-memcpy-expansion
                                        // =>This Inner Loop Header: Depth=1
	cvt.s64.s32 	%rd17, %r14;
	add.s64 	%rd18, %rd3, %rd17;
	ld.const.u8 	%rs4, [%rd18];
	add.s64 	%rd19, %rd5, %rd17;
	st.u8 	[%rd19], %rs4;
	add.s32 	%r14, %r14, 1;
	setp.lt.u32 	%p5, %r14, %r1;
	@%p5 bra 	$L__BB7_3;
$L__BB7_4:                              // %post-loop-memcpy-expansion
	{ // callseq 183, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd5;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 183
	{ // callseq 184, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd7;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 184
	mov.u32 	%r13, 1;
	st.param.b32 	[func_retval0+0], %r13;
	ret;
                                        // -- End function
}
	// .globl	__memcpy_p0i8_p1i8_i32  // -- Begin function __memcpy_p0i8_p1i8_i32
.visible .func __memcpy_p0i8_p1i8_i32(
	.param .b64 __memcpy_p0i8_p1i8_i32_param_0,
	.param .b64 __memcpy_p0i8_p1i8_i32_param_1,
	.param .b32 __memcpy_p0i8_p1i8_i32_param_2
)                                       // @__memcpy_p0i8_p1i8_i32
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<10>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<22>;

// %bb.0:
	ld.param.u32 	%r6, [__memcpy_p0i8_p1i8_i32_param_2];
	setp.lt.s32 	%p1, %r6, 1;
	@%p1 bra 	$L__BB8_7;
// %bb.1:
	ld.param.u64 	%rd13, [__memcpy_p0i8_p1i8_i32_param_1];
	ld.param.u64 	%rd12, [__memcpy_p0i8_p1i8_i32_param_0];
	add.s32 	%r8, %r6, -1;
	and.b32  	%r11, %r6, 7;
	setp.lt.u32 	%p2, %r8, 7;
	mov.u32 	%r10, 0;
	@%p2 bra 	$L__BB8_4;
// %bb.2:
	cvt.u64.u32 	%rd15, %r6;
	and.b64  	%rd1, %rd15, 4294967288;
	add.s64 	%rd2, %rd12, 7;
	add.s64 	%rd3, %rd13, 3;
	mov.u64 	%rd19, 0;
	cvt.u32.u64 	%r9, %rd1;
$L__BB8_3:                              // =>This Inner Loop Header: Depth=1
	add.s64 	%rd16, %rd2, %rd19;
	ld.u8 	%rs1, [%rd16+-7];
	add.s64 	%rd17, %rd3, %rd19;
	st.global.u8 	[%rd17+-3], %rs1;
	ld.u8 	%rs2, [%rd16+-6];
	st.global.u8 	[%rd17+-2], %rs2;
	ld.u8 	%rs3, [%rd16+-5];
	st.global.u8 	[%rd17+-1], %rs3;
	ld.u8 	%rs4, [%rd16+-4];
	st.global.u8 	[%rd17], %rs4;
	ld.u8 	%rs5, [%rd16+-3];
	st.global.u8 	[%rd17+1], %rs5;
	ld.u8 	%rs6, [%rd16+-2];
	st.global.u8 	[%rd17+2], %rs6;
	ld.u8 	%rs7, [%rd16+-1];
	st.global.u8 	[%rd17+3], %rs7;
	ld.u8 	%rs8, [%rd16];
	st.global.u8 	[%rd17+4], %rs8;
	add.s64 	%rd19, %rd19, 8;
	cvt.u32.u64 	%r10, %rd19;
	setp.ne.s32 	%p3, %r9, %r10;
	@%p3 bra 	$L__BB8_3;
$L__BB8_4:
	setp.eq.s32 	%p4, %r11, 0;
	@%p4 bra 	$L__BB8_7;
// %bb.5:                               // %.preheader
	cvt.u64.u32 	%rd18, %r10;
	add.s64 	%rd21, %rd13, %rd18;
	add.s64 	%rd20, %rd12, %rd18;
$L__BB8_6:                              // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	ld.u8 	%rs9, [%rd20];
	st.global.u8 	[%rd21], %rs9;
	add.s32 	%r11, %r11, -1;
	add.s64 	%rd21, %rd21, 1;
	add.s64 	%rd20, %rd20, 1;
	setp.ne.s32 	%p5, %r11, 0;
	@%p5 bra 	$L__BB8_6;
$L__BB8_7:
	ret;
                                        // -- End function
}
	// .globl	__clear_bitmap          // -- Begin function __clear_bitmap
.visible .func __clear_bitmap(
	.param .b64 __clear_bitmap_param_0
)                                       // @__clear_bitmap
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<8>;

// %bb.0:
	mov.u64 	%rd4, 0;
	ld.param.u64 	%rd3, [__clear_bitmap_param_0];
	mov.u64 	%rd7, %rd4;
$L__BB9_1:                              // =>This Inner Loop Header: Depth=1
	add.s64 	%rd5, %rd3, %rd7;
	st.global.u64 	[%rd5], %rd4;
	st.global.u64 	[%rd5+8], %rd4;
	st.global.u64 	[%rd5+16], %rd4;
	st.global.u64 	[%rd5+24], %rd4;
	st.global.u64 	[%rd5+32], %rd4;
	st.global.u64 	[%rd5+40], %rd4;
	st.global.u64 	[%rd5+48], %rd4;
	st.global.u64 	[%rd5+56], %rd4;
	st.global.u64 	[%rd5+64], %rd4;
	st.global.u64 	[%rd5+72], %rd4;
	st.global.u64 	[%rd5+80], %rd4;
	st.global.u64 	[%rd5+88], %rd4;
	st.global.u64 	[%rd5+96], %rd4;
	st.global.u64 	[%rd5+104], %rd4;
	st.global.u64 	[%rd5+112], %rd4;
	st.global.u64 	[%rd5+120], %rd4;
	add.s64 	%rd7, %rd7, 128;
	cvt.u32.u64 	%r1, %rd7;
	setp.ne.s32 	%p1, %r1, 4096;
	@%p1 bra 	$L__BB9_1;
// %bb.2:
	ret;
                                        // -- End function
}
	// .globl	__device_sha3           // -- Begin function __device_sha3
.visible .func __device_sha3(
	.param .b64 __device_sha3_param_0,
	.param .b32 __device_sha3_param_1,
	.param .b64 __device_sha3_param_2
)                                       // @__device_sha3
{
	.reg .b64 	%rd<4>;

// %bb.0:
	ld.param.u64 	%rd1, [__device_sha3_param_0];
	ld.param.u32 	%rd2, [__device_sha3_param_1];
	ld.param.u64 	%rd3, [__device_sha3_param_2];
	{ // callseq 185, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd2;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd3;
	call.uni 
	keccak256, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 185
	ret;
                                        // -- End function
}
	// .globl	keccak256               // -- Begin function keccak256
.visible .func keccak256(
	.param .b64 keccak256_param_0,
	.param .b64 keccak256_param_1,
	.param .b64 keccak256_param_2
)                                       // @keccak256
{
	.local .align 16 .b8 	__local_depot11[208];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<22>;
	.reg .b16 	%rs<773>;
	.reg .b64 	%rd<95>;

// %bb.0:
	mov.u64 	%SPL, __local_depot11;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd80, [keccak256_param_1];
	add.u64 	%rd52, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	mov.u64 	%rd76, 0;
	mov.pred 	%p1, 0;
	@%p1 bra 	$L__BB11_2;
$L__BB11_1:                             // %loadstoreloop
                                        // =>This Inner Loop Header: Depth=1
	add.s64 	%rd53, %rd1, %rd76;
	mov.u16 	%rs1, 0;
	st.local.u8 	[%rd53], %rs1;
	add.s64 	%rd76, %rd76, 1;
	setp.lt.u64 	%p2, %rd76, 200;
	@%p2 bra 	$L__BB11_1;
$L__BB11_2:                             // %split
	ld.param.u64 	%rd79, [keccak256_param_0];
	setp.lt.u64 	%p3, %rd80, 136;
	@%p3 bra 	$L__BB11_4;
$L__BB11_3:                             // =>This Inner Loop Header: Depth=1
	ld.u8 	%rs2, [%rd79+12];
	ld.u8 	%rs3, [%rd79+13];
	ld.u8 	%rs4, [%rd79+14];
	ld.u8 	%rs5, [%rd79+15];
	ld.u8 	%rs6, [%rd79+8];
	ld.u8 	%rs7, [%rd79+9];
	ld.u8 	%rs8, [%rd79+10];
	ld.u8 	%rs9, [%rd79+11];
	ld.u8 	%rs10, [%rd79+4];
	ld.u8 	%rs11, [%rd79+5];
	ld.u8 	%rs12, [%rd79+6];
	ld.u8 	%rs13, [%rd79+7];
	ld.u8 	%rs14, [%rd79];
	ld.u8 	%rs15, [%rd79+1];
	ld.u8 	%rs16, [%rd79+2];
	ld.u8 	%rs17, [%rd79+3];
	ld.u8 	%rs18, [%rd79+28];
	ld.u8 	%rs19, [%rd79+29];
	ld.u8 	%rs20, [%rd79+30];
	ld.u8 	%rs21, [%rd79+31];
	ld.u8 	%rs22, [%rd79+24];
	ld.u8 	%rs23, [%rd79+25];
	ld.u8 	%rs24, [%rd79+26];
	ld.u8 	%rs25, [%rd79+27];
	ld.u8 	%rs26, [%rd79+20];
	ld.u8 	%rs27, [%rd79+21];
	ld.u8 	%rs28, [%rd79+22];
	ld.u8 	%rs29, [%rd79+23];
	ld.u8 	%rs30, [%rd79+16];
	ld.u8 	%rs31, [%rd79+17];
	ld.u8 	%rs32, [%rd79+18];
	ld.u8 	%rs33, [%rd79+19];
	ld.local.v4.u8 	{%rs34, %rs35, %rs36, %rs37}, [%rd1+12];
	ld.local.v4.u8 	{%rs38, %rs39, %rs40, %rs41}, [%rd1+8];
	ld.local.v4.u8 	{%rs42, %rs43, %rs44, %rs45}, [%rd1+4];
	ld.local.v4.u8 	{%rs46, %rs47, %rs48, %rs49}, [%rd1];
	ld.local.v4.u8 	{%rs50, %rs51, %rs52, %rs53}, [%rd1+28];
	ld.local.v4.u8 	{%rs54, %rs55, %rs56, %rs57}, [%rd1+24];
	ld.local.v4.u8 	{%rs58, %rs59, %rs60, %rs61}, [%rd1+20];
	ld.local.v4.u8 	{%rs62, %rs63, %rs64, %rs65}, [%rd1+16];
	xor.b16  	%rs66, %rs49, %rs17;
	xor.b16  	%rs67, %rs48, %rs16;
	xor.b16  	%rs68, %rs47, %rs15;
	xor.b16  	%rs69, %rs46, %rs14;
	xor.b16  	%rs70, %rs45, %rs13;
	xor.b16  	%rs71, %rs44, %rs12;
	xor.b16  	%rs72, %rs43, %rs11;
	xor.b16  	%rs73, %rs42, %rs10;
	xor.b16  	%rs74, %rs41, %rs9;
	xor.b16  	%rs75, %rs40, %rs8;
	xor.b16  	%rs76, %rs39, %rs7;
	xor.b16  	%rs77, %rs38, %rs6;
	xor.b16  	%rs78, %rs37, %rs5;
	xor.b16  	%rs79, %rs36, %rs4;
	xor.b16  	%rs80, %rs35, %rs3;
	xor.b16  	%rs81, %rs34, %rs2;
	xor.b16  	%rs82, %rs65, %rs33;
	xor.b16  	%rs83, %rs64, %rs32;
	xor.b16  	%rs84, %rs63, %rs31;
	xor.b16  	%rs85, %rs62, %rs30;
	xor.b16  	%rs86, %rs61, %rs29;
	xor.b16  	%rs87, %rs60, %rs28;
	xor.b16  	%rs88, %rs59, %rs27;
	xor.b16  	%rs89, %rs58, %rs26;
	xor.b16  	%rs90, %rs57, %rs25;
	xor.b16  	%rs91, %rs56, %rs24;
	xor.b16  	%rs92, %rs55, %rs23;
	xor.b16  	%rs93, %rs54, %rs22;
	xor.b16  	%rs94, %rs53, %rs21;
	xor.b16  	%rs95, %rs52, %rs20;
	xor.b16  	%rs96, %rs51, %rs19;
	xor.b16  	%rs97, %rs50, %rs18;
	st.local.v4.u8 	[%rd1+12], {%rs81, %rs80, %rs79, %rs78};
	st.local.v4.u8 	[%rd1+8], {%rs77, %rs76, %rs75, %rs74};
	st.local.v4.u8 	[%rd1+4], {%rs73, %rs72, %rs71, %rs70};
	st.local.v4.u8 	[%rd1], {%rs69, %rs68, %rs67, %rs66};
	st.local.v4.u8 	[%rd1+28], {%rs97, %rs96, %rs95, %rs94};
	st.local.v4.u8 	[%rd1+24], {%rs93, %rs92, %rs91, %rs90};
	st.local.v4.u8 	[%rd1+20], {%rs89, %rs88, %rs87, %rs86};
	st.local.v4.u8 	[%rd1+16], {%rs85, %rs84, %rs83, %rs82};
	ld.u8 	%rs98, [%rd79+44];
	ld.u8 	%rs99, [%rd79+45];
	ld.u8 	%rs100, [%rd79+46];
	ld.u8 	%rs101, [%rd79+47];
	ld.u8 	%rs102, [%rd79+40];
	ld.u8 	%rs103, [%rd79+41];
	ld.u8 	%rs104, [%rd79+42];
	ld.u8 	%rs105, [%rd79+43];
	ld.u8 	%rs106, [%rd79+36];
	ld.u8 	%rs107, [%rd79+37];
	ld.u8 	%rs108, [%rd79+38];
	ld.u8 	%rs109, [%rd79+39];
	ld.u8 	%rs110, [%rd79+32];
	ld.u8 	%rs111, [%rd79+33];
	ld.u8 	%rs112, [%rd79+34];
	ld.u8 	%rs113, [%rd79+35];
	ld.u8 	%rs114, [%rd79+60];
	ld.u8 	%rs115, [%rd79+61];
	ld.u8 	%rs116, [%rd79+62];
	ld.u8 	%rs117, [%rd79+63];
	ld.u8 	%rs118, [%rd79+56];
	ld.u8 	%rs119, [%rd79+57];
	ld.u8 	%rs120, [%rd79+58];
	ld.u8 	%rs121, [%rd79+59];
	ld.u8 	%rs122, [%rd79+52];
	ld.u8 	%rs123, [%rd79+53];
	ld.u8 	%rs124, [%rd79+54];
	ld.u8 	%rs125, [%rd79+55];
	ld.u8 	%rs126, [%rd79+48];
	ld.u8 	%rs127, [%rd79+49];
	ld.u8 	%rs128, [%rd79+50];
	ld.u8 	%rs129, [%rd79+51];
	ld.local.v4.u8 	{%rs130, %rs131, %rs132, %rs133}, [%rd1+44];
	ld.local.v4.u8 	{%rs134, %rs135, %rs136, %rs137}, [%rd1+40];
	ld.local.v4.u8 	{%rs138, %rs139, %rs140, %rs141}, [%rd1+36];
	ld.local.v4.u8 	{%rs142, %rs143, %rs144, %rs145}, [%rd1+32];
	ld.local.v4.u8 	{%rs146, %rs147, %rs148, %rs149}, [%rd1+60];
	ld.local.v4.u8 	{%rs150, %rs151, %rs152, %rs153}, [%rd1+56];
	ld.local.v4.u8 	{%rs154, %rs155, %rs156, %rs157}, [%rd1+52];
	ld.local.v4.u8 	{%rs158, %rs159, %rs160, %rs161}, [%rd1+48];
	xor.b16  	%rs162, %rs145, %rs113;
	xor.b16  	%rs163, %rs144, %rs112;
	xor.b16  	%rs164, %rs143, %rs111;
	xor.b16  	%rs165, %rs142, %rs110;
	xor.b16  	%rs166, %rs141, %rs109;
	xor.b16  	%rs167, %rs140, %rs108;
	xor.b16  	%rs168, %rs139, %rs107;
	xor.b16  	%rs169, %rs138, %rs106;
	xor.b16  	%rs170, %rs137, %rs105;
	xor.b16  	%rs171, %rs136, %rs104;
	xor.b16  	%rs172, %rs135, %rs103;
	xor.b16  	%rs173, %rs134, %rs102;
	xor.b16  	%rs174, %rs133, %rs101;
	xor.b16  	%rs175, %rs132, %rs100;
	xor.b16  	%rs176, %rs131, %rs99;
	xor.b16  	%rs177, %rs130, %rs98;
	xor.b16  	%rs178, %rs161, %rs129;
	xor.b16  	%rs179, %rs160, %rs128;
	xor.b16  	%rs180, %rs159, %rs127;
	xor.b16  	%rs181, %rs158, %rs126;
	xor.b16  	%rs182, %rs157, %rs125;
	xor.b16  	%rs183, %rs156, %rs124;
	xor.b16  	%rs184, %rs155, %rs123;
	xor.b16  	%rs185, %rs154, %rs122;
	xor.b16  	%rs186, %rs153, %rs121;
	xor.b16  	%rs187, %rs152, %rs120;
	xor.b16  	%rs188, %rs151, %rs119;
	xor.b16  	%rs189, %rs150, %rs118;
	xor.b16  	%rs190, %rs149, %rs117;
	xor.b16  	%rs191, %rs148, %rs116;
	xor.b16  	%rs192, %rs147, %rs115;
	xor.b16  	%rs193, %rs146, %rs114;
	st.local.v4.u8 	[%rd1+44], {%rs177, %rs176, %rs175, %rs174};
	st.local.v4.u8 	[%rd1+40], {%rs173, %rs172, %rs171, %rs170};
	st.local.v4.u8 	[%rd1+36], {%rs169, %rs168, %rs167, %rs166};
	st.local.v4.u8 	[%rd1+32], {%rs165, %rs164, %rs163, %rs162};
	st.local.v4.u8 	[%rd1+60], {%rs193, %rs192, %rs191, %rs190};
	st.local.v4.u8 	[%rd1+56], {%rs189, %rs188, %rs187, %rs186};
	st.local.v4.u8 	[%rd1+52], {%rs185, %rs184, %rs183, %rs182};
	st.local.v4.u8 	[%rd1+48], {%rs181, %rs180, %rs179, %rs178};
	ld.u8 	%rs194, [%rd79+76];
	ld.u8 	%rs195, [%rd79+77];
	ld.u8 	%rs196, [%rd79+78];
	ld.u8 	%rs197, [%rd79+79];
	ld.u8 	%rs198, [%rd79+72];
	ld.u8 	%rs199, [%rd79+73];
	ld.u8 	%rs200, [%rd79+74];
	ld.u8 	%rs201, [%rd79+75];
	ld.u8 	%rs202, [%rd79+68];
	ld.u8 	%rs203, [%rd79+69];
	ld.u8 	%rs204, [%rd79+70];
	ld.u8 	%rs205, [%rd79+71];
	ld.u8 	%rs206, [%rd79+64];
	ld.u8 	%rs207, [%rd79+65];
	ld.u8 	%rs208, [%rd79+66];
	ld.u8 	%rs209, [%rd79+67];
	ld.u8 	%rs210, [%rd79+92];
	ld.u8 	%rs211, [%rd79+93];
	ld.u8 	%rs212, [%rd79+94];
	ld.u8 	%rs213, [%rd79+95];
	ld.u8 	%rs214, [%rd79+88];
	ld.u8 	%rs215, [%rd79+89];
	ld.u8 	%rs216, [%rd79+90];
	ld.u8 	%rs217, [%rd79+91];
	ld.u8 	%rs218, [%rd79+84];
	ld.u8 	%rs219, [%rd79+85];
	ld.u8 	%rs220, [%rd79+86];
	ld.u8 	%rs221, [%rd79+87];
	ld.u8 	%rs222, [%rd79+80];
	ld.u8 	%rs223, [%rd79+81];
	ld.u8 	%rs224, [%rd79+82];
	ld.u8 	%rs225, [%rd79+83];
	ld.local.v4.u8 	{%rs226, %rs227, %rs228, %rs229}, [%rd1+76];
	ld.local.v4.u8 	{%rs230, %rs231, %rs232, %rs233}, [%rd1+72];
	ld.local.v4.u8 	{%rs234, %rs235, %rs236, %rs237}, [%rd1+68];
	ld.local.v4.u8 	{%rs238, %rs239, %rs240, %rs241}, [%rd1+64];
	ld.local.v4.u8 	{%rs242, %rs243, %rs244, %rs245}, [%rd1+92];
	ld.local.v4.u8 	{%rs246, %rs247, %rs248, %rs249}, [%rd1+88];
	ld.local.v4.u8 	{%rs250, %rs251, %rs252, %rs253}, [%rd1+84];
	ld.local.v4.u8 	{%rs254, %rs255, %rs256, %rs257}, [%rd1+80];
	xor.b16  	%rs258, %rs241, %rs209;
	xor.b16  	%rs259, %rs240, %rs208;
	xor.b16  	%rs260, %rs239, %rs207;
	xor.b16  	%rs261, %rs238, %rs206;
	xor.b16  	%rs262, %rs237, %rs205;
	xor.b16  	%rs263, %rs236, %rs204;
	xor.b16  	%rs264, %rs235, %rs203;
	xor.b16  	%rs265, %rs234, %rs202;
	xor.b16  	%rs266, %rs233, %rs201;
	xor.b16  	%rs267, %rs232, %rs200;
	xor.b16  	%rs268, %rs231, %rs199;
	xor.b16  	%rs269, %rs230, %rs198;
	xor.b16  	%rs270, %rs229, %rs197;
	xor.b16  	%rs271, %rs228, %rs196;
	xor.b16  	%rs272, %rs227, %rs195;
	xor.b16  	%rs273, %rs226, %rs194;
	xor.b16  	%rs274, %rs257, %rs225;
	xor.b16  	%rs275, %rs256, %rs224;
	xor.b16  	%rs276, %rs255, %rs223;
	xor.b16  	%rs277, %rs254, %rs222;
	xor.b16  	%rs278, %rs253, %rs221;
	xor.b16  	%rs279, %rs252, %rs220;
	xor.b16  	%rs280, %rs251, %rs219;
	xor.b16  	%rs281, %rs250, %rs218;
	xor.b16  	%rs282, %rs249, %rs217;
	xor.b16  	%rs283, %rs248, %rs216;
	xor.b16  	%rs284, %rs247, %rs215;
	xor.b16  	%rs285, %rs246, %rs214;
	xor.b16  	%rs286, %rs245, %rs213;
	xor.b16  	%rs287, %rs244, %rs212;
	xor.b16  	%rs288, %rs243, %rs211;
	xor.b16  	%rs289, %rs242, %rs210;
	st.local.v4.u8 	[%rd1+76], {%rs273, %rs272, %rs271, %rs270};
	st.local.v4.u8 	[%rd1+72], {%rs269, %rs268, %rs267, %rs266};
	st.local.v4.u8 	[%rd1+68], {%rs265, %rs264, %rs263, %rs262};
	st.local.v4.u8 	[%rd1+64], {%rs261, %rs260, %rs259, %rs258};
	st.local.v4.u8 	[%rd1+92], {%rs289, %rs288, %rs287, %rs286};
	st.local.v4.u8 	[%rd1+88], {%rs285, %rs284, %rs283, %rs282};
	st.local.v4.u8 	[%rd1+84], {%rs281, %rs280, %rs279, %rs278};
	st.local.v4.u8 	[%rd1+80], {%rs277, %rs276, %rs275, %rs274};
	ld.u8 	%rs290, [%rd79+108];
	ld.u8 	%rs291, [%rd79+109];
	ld.u8 	%rs292, [%rd79+110];
	ld.u8 	%rs293, [%rd79+111];
	ld.u8 	%rs294, [%rd79+104];
	ld.u8 	%rs295, [%rd79+105];
	ld.u8 	%rs296, [%rd79+106];
	ld.u8 	%rs297, [%rd79+107];
	ld.u8 	%rs298, [%rd79+100];
	ld.u8 	%rs299, [%rd79+101];
	ld.u8 	%rs300, [%rd79+102];
	ld.u8 	%rs301, [%rd79+103];
	ld.u8 	%rs302, [%rd79+96];
	ld.u8 	%rs303, [%rd79+97];
	ld.u8 	%rs304, [%rd79+98];
	ld.u8 	%rs305, [%rd79+99];
	ld.u8 	%rs306, [%rd79+124];
	ld.u8 	%rs307, [%rd79+125];
	ld.u8 	%rs308, [%rd79+126];
	ld.u8 	%rs309, [%rd79+127];
	ld.u8 	%rs310, [%rd79+120];
	ld.u8 	%rs311, [%rd79+121];
	ld.u8 	%rs312, [%rd79+122];
	ld.u8 	%rs313, [%rd79+123];
	ld.u8 	%rs314, [%rd79+116];
	ld.u8 	%rs315, [%rd79+117];
	ld.u8 	%rs316, [%rd79+118];
	ld.u8 	%rs317, [%rd79+119];
	ld.u8 	%rs318, [%rd79+112];
	ld.u8 	%rs319, [%rd79+113];
	ld.u8 	%rs320, [%rd79+114];
	ld.u8 	%rs321, [%rd79+115];
	ld.local.v4.u8 	{%rs322, %rs323, %rs324, %rs325}, [%rd1+108];
	ld.local.v4.u8 	{%rs326, %rs327, %rs328, %rs329}, [%rd1+104];
	ld.local.v4.u8 	{%rs330, %rs331, %rs332, %rs333}, [%rd1+100];
	ld.local.v4.u8 	{%rs334, %rs335, %rs336, %rs337}, [%rd1+96];
	ld.local.v4.u8 	{%rs338, %rs339, %rs340, %rs341}, [%rd1+124];
	ld.local.v4.u8 	{%rs342, %rs343, %rs344, %rs345}, [%rd1+120];
	ld.local.v4.u8 	{%rs346, %rs347, %rs348, %rs349}, [%rd1+116];
	ld.local.v4.u8 	{%rs350, %rs351, %rs352, %rs353}, [%rd1+112];
	xor.b16  	%rs354, %rs337, %rs305;
	xor.b16  	%rs355, %rs336, %rs304;
	xor.b16  	%rs356, %rs335, %rs303;
	xor.b16  	%rs357, %rs334, %rs302;
	xor.b16  	%rs358, %rs333, %rs301;
	xor.b16  	%rs359, %rs332, %rs300;
	xor.b16  	%rs360, %rs331, %rs299;
	xor.b16  	%rs361, %rs330, %rs298;
	xor.b16  	%rs362, %rs329, %rs297;
	xor.b16  	%rs363, %rs328, %rs296;
	xor.b16  	%rs364, %rs327, %rs295;
	xor.b16  	%rs365, %rs326, %rs294;
	xor.b16  	%rs366, %rs325, %rs293;
	xor.b16  	%rs367, %rs324, %rs292;
	xor.b16  	%rs368, %rs323, %rs291;
	xor.b16  	%rs369, %rs322, %rs290;
	xor.b16  	%rs370, %rs353, %rs321;
	xor.b16  	%rs371, %rs352, %rs320;
	xor.b16  	%rs372, %rs351, %rs319;
	xor.b16  	%rs373, %rs350, %rs318;
	xor.b16  	%rs374, %rs349, %rs317;
	xor.b16  	%rs375, %rs348, %rs316;
	xor.b16  	%rs376, %rs347, %rs315;
	xor.b16  	%rs377, %rs346, %rs314;
	xor.b16  	%rs378, %rs345, %rs313;
	xor.b16  	%rs379, %rs344, %rs312;
	xor.b16  	%rs380, %rs343, %rs311;
	xor.b16  	%rs381, %rs342, %rs310;
	xor.b16  	%rs382, %rs341, %rs309;
	xor.b16  	%rs383, %rs340, %rs308;
	xor.b16  	%rs384, %rs339, %rs307;
	xor.b16  	%rs385, %rs338, %rs306;
	st.local.v4.u8 	[%rd1+108], {%rs369, %rs368, %rs367, %rs366};
	st.local.v4.u8 	[%rd1+104], {%rs365, %rs364, %rs363, %rs362};
	st.local.v4.u8 	[%rd1+100], {%rs361, %rs360, %rs359, %rs358};
	st.local.v4.u8 	[%rd1+96], {%rs357, %rs356, %rs355, %rs354};
	st.local.v4.u8 	[%rd1+124], {%rs385, %rs384, %rs383, %rs382};
	st.local.v4.u8 	[%rd1+120], {%rs381, %rs380, %rs379, %rs378};
	st.local.v4.u8 	[%rd1+116], {%rs377, %rs376, %rs375, %rs374};
	st.local.v4.u8 	[%rd1+112], {%rs373, %rs372, %rs371, %rs370};
	ld.u8 	%rs386, [%rd79+132];
	ld.u8 	%rs387, [%rd79+133];
	ld.u8 	%rs388, [%rd79+134];
	ld.u8 	%rs389, [%rd79+135];
	ld.u8 	%rs390, [%rd79+128];
	ld.u8 	%rs391, [%rd79+129];
	ld.u8 	%rs392, [%rd79+130];
	ld.u8 	%rs393, [%rd79+131];
	ld.local.v4.u8 	{%rs394, %rs395, %rs396, %rs397}, [%rd1+132];
	ld.local.v4.u8 	{%rs398, %rs399, %rs400, %rs401}, [%rd1+128];
	xor.b16  	%rs402, %rs401, %rs393;
	xor.b16  	%rs403, %rs400, %rs392;
	xor.b16  	%rs404, %rs399, %rs391;
	xor.b16  	%rs405, %rs398, %rs390;
	xor.b16  	%rs406, %rs397, %rs389;
	xor.b16  	%rs407, %rs396, %rs388;
	xor.b16  	%rs408, %rs395, %rs387;
	xor.b16  	%rs409, %rs394, %rs386;
	st.local.v4.u8 	[%rd1+132], {%rs409, %rs408, %rs407, %rs406};
	st.local.v4.u8 	[%rd1+128], {%rs405, %rs404, %rs403, %rs402};
	{ // callseq 186, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd52;
	call.uni 
	keccakf, 
	(
	param0
	);
	} // callseq 186
	add.s64 	%rd79, %rd79, 136;
	add.s64 	%rd80, %rd80, -136;
	setp.gt.u64 	%p4, %rd80, 135;
	@%p4 bra 	$L__BB11_3;
$L__BB11_4:
	ld.param.u64 	%rd50, [keccak256_param_2];
	add.s64 	%rd10, %rd1, %rd80;
	ld.local.u8 	%rs410, [%rd10];
	xor.b16  	%rs411, %rs410, 1;
	st.local.u8 	[%rd10], %rs411;
	ld.local.u8 	%rs412, [%rd1+135];
	xor.b16  	%rs413, %rs412, 128;
	st.local.u8 	[%rd1+135], %rs413;
	setp.eq.s64 	%p5, %rd80, 0;
	@%p5 bra 	$L__BB11_23;
// %bb.5:
	setp.lt.u64 	%p6, %rd80, 8;
	mov.u64 	%rd91, 0;
	@%p6 bra 	$L__BB11_18;
// %bb.6:
	cvta.local.u64 	%rd57, %rd10;
	add.s64 	%rd58, %rd79, %rd80;
	setp.lt.u64 	%p7, %rd52, %rd58;
	setp.lt.u64 	%p8, %rd79, %rd57;
	and.pred  	%p9, %p7, %p8;
	@%p9 bra 	$L__BB11_18;
// %bb.7:
	setp.lt.u64 	%p10, %rd80, 32;
	mov.u64 	%rd91, 0;
	@%p10 bra 	$L__BB11_15;
// %bb.8:
	and.b64  	%rd91, %rd80, -32;
	add.s64 	%rd62, %rd91, -32;
	shr.u64 	%rd63, %rd62, 5;
	add.s64 	%rd12, %rd63, 1;
	and.b64  	%rd13, %rd12, 1;
	setp.eq.s64 	%p11, %rd62, 0;
	mov.u64 	%rd83, 0;
	@%p11 bra 	$L__BB11_11;
// %bb.9:
	and.b64  	%rd65, %rd12, 1152921504606846974;
	neg.s64 	%rd81, %rd65;
	mov.u64 	%rd83, 0;
$L__BB11_10:                            // =>This Inner Loop Header: Depth=1
	add.s64 	%rd66, %rd79, %rd83;
	ld.u8 	%rs414, [%rd66+12];
	ld.u8 	%rs415, [%rd66+13];
	ld.u8 	%rs416, [%rd66+14];
	ld.u8 	%rs417, [%rd66+15];
	ld.u8 	%rs418, [%rd66+8];
	ld.u8 	%rs419, [%rd66+9];
	ld.u8 	%rs420, [%rd66+10];
	ld.u8 	%rs421, [%rd66+11];
	ld.u8 	%rs422, [%rd66+4];
	ld.u8 	%rs423, [%rd66+5];
	ld.u8 	%rs424, [%rd66+6];
	ld.u8 	%rs425, [%rd66+7];
	ld.u8 	%rs426, [%rd66];
	ld.u8 	%rs427, [%rd66+1];
	ld.u8 	%rs428, [%rd66+2];
	ld.u8 	%rs429, [%rd66+3];
	ld.u8 	%rs430, [%rd66+28];
	ld.u8 	%rs431, [%rd66+29];
	ld.u8 	%rs432, [%rd66+30];
	ld.u8 	%rs433, [%rd66+31];
	ld.u8 	%rs434, [%rd66+24];
	ld.u8 	%rs435, [%rd66+25];
	ld.u8 	%rs436, [%rd66+26];
	ld.u8 	%rs437, [%rd66+27];
	ld.u8 	%rs438, [%rd66+20];
	ld.u8 	%rs439, [%rd66+21];
	ld.u8 	%rs440, [%rd66+22];
	ld.u8 	%rs441, [%rd66+23];
	ld.u8 	%rs442, [%rd66+16];
	ld.u8 	%rs443, [%rd66+17];
	ld.u8 	%rs444, [%rd66+18];
	ld.u8 	%rs445, [%rd66+19];
	add.s64 	%rd67, %rd1, %rd83;
	ld.local.v4.u8 	{%rs446, %rs447, %rs448, %rs449}, [%rd67+12];
	ld.local.v4.u8 	{%rs450, %rs451, %rs452, %rs453}, [%rd67+8];
	ld.local.v4.u8 	{%rs454, %rs455, %rs456, %rs457}, [%rd67+4];
	ld.local.v4.u8 	{%rs458, %rs459, %rs460, %rs461}, [%rd67];
	ld.local.v4.u8 	{%rs462, %rs463, %rs464, %rs465}, [%rd67+28];
	ld.local.v4.u8 	{%rs466, %rs467, %rs468, %rs469}, [%rd67+24];
	ld.local.v4.u8 	{%rs470, %rs471, %rs472, %rs473}, [%rd67+20];
	ld.local.v4.u8 	{%rs474, %rs475, %rs476, %rs477}, [%rd67+16];
	xor.b16  	%rs478, %rs461, %rs429;
	xor.b16  	%rs479, %rs460, %rs428;
	xor.b16  	%rs480, %rs459, %rs427;
	xor.b16  	%rs481, %rs458, %rs426;
	xor.b16  	%rs482, %rs457, %rs425;
	xor.b16  	%rs483, %rs456, %rs424;
	xor.b16  	%rs484, %rs455, %rs423;
	xor.b16  	%rs485, %rs454, %rs422;
	xor.b16  	%rs486, %rs453, %rs421;
	xor.b16  	%rs487, %rs452, %rs420;
	xor.b16  	%rs488, %rs451, %rs419;
	xor.b16  	%rs489, %rs450, %rs418;
	xor.b16  	%rs490, %rs449, %rs417;
	xor.b16  	%rs491, %rs448, %rs416;
	xor.b16  	%rs492, %rs447, %rs415;
	xor.b16  	%rs493, %rs446, %rs414;
	xor.b16  	%rs494, %rs477, %rs445;
	xor.b16  	%rs495, %rs476, %rs444;
	xor.b16  	%rs496, %rs475, %rs443;
	xor.b16  	%rs497, %rs474, %rs442;
	xor.b16  	%rs498, %rs473, %rs441;
	xor.b16  	%rs499, %rs472, %rs440;
	xor.b16  	%rs500, %rs471, %rs439;
	xor.b16  	%rs501, %rs470, %rs438;
	xor.b16  	%rs502, %rs469, %rs437;
	xor.b16  	%rs503, %rs468, %rs436;
	xor.b16  	%rs504, %rs467, %rs435;
	xor.b16  	%rs505, %rs466, %rs434;
	xor.b16  	%rs506, %rs465, %rs433;
	xor.b16  	%rs507, %rs464, %rs432;
	xor.b16  	%rs508, %rs463, %rs431;
	xor.b16  	%rs509, %rs462, %rs430;
	st.local.v4.u8 	[%rd67+12], {%rs493, %rs492, %rs491, %rs490};
	st.local.v4.u8 	[%rd67+8], {%rs489, %rs488, %rs487, %rs486};
	st.local.v4.u8 	[%rd67+4], {%rs485, %rs484, %rs483, %rs482};
	st.local.v4.u8 	[%rd67], {%rs481, %rs480, %rs479, %rs478};
	st.local.v4.u8 	[%rd67+28], {%rs509, %rs508, %rs507, %rs506};
	st.local.v4.u8 	[%rd67+24], {%rs505, %rs504, %rs503, %rs502};
	st.local.v4.u8 	[%rd67+20], {%rs501, %rs500, %rs499, %rs498};
	st.local.v4.u8 	[%rd67+16], {%rs497, %rs496, %rs495, %rs494};
	ld.u8 	%rs510, [%rd66+44];
	ld.u8 	%rs511, [%rd66+45];
	ld.u8 	%rs512, [%rd66+46];
	ld.u8 	%rs513, [%rd66+47];
	ld.u8 	%rs514, [%rd66+40];
	ld.u8 	%rs515, [%rd66+41];
	ld.u8 	%rs516, [%rd66+42];
	ld.u8 	%rs517, [%rd66+43];
	ld.u8 	%rs518, [%rd66+36];
	ld.u8 	%rs519, [%rd66+37];
	ld.u8 	%rs520, [%rd66+38];
	ld.u8 	%rs521, [%rd66+39];
	ld.u8 	%rs522, [%rd66+32];
	ld.u8 	%rs523, [%rd66+33];
	ld.u8 	%rs524, [%rd66+34];
	ld.u8 	%rs525, [%rd66+35];
	ld.u8 	%rs526, [%rd66+60];
	ld.u8 	%rs527, [%rd66+61];
	ld.u8 	%rs528, [%rd66+62];
	ld.u8 	%rs529, [%rd66+63];
	ld.u8 	%rs530, [%rd66+56];
	ld.u8 	%rs531, [%rd66+57];
	ld.u8 	%rs532, [%rd66+58];
	ld.u8 	%rs533, [%rd66+59];
	ld.u8 	%rs534, [%rd66+52];
	ld.u8 	%rs535, [%rd66+53];
	ld.u8 	%rs536, [%rd66+54];
	ld.u8 	%rs537, [%rd66+55];
	ld.u8 	%rs538, [%rd66+48];
	ld.u8 	%rs539, [%rd66+49];
	ld.u8 	%rs540, [%rd66+50];
	ld.u8 	%rs541, [%rd66+51];
	ld.local.v4.u8 	{%rs542, %rs543, %rs544, %rs545}, [%rd67+44];
	ld.local.v4.u8 	{%rs546, %rs547, %rs548, %rs549}, [%rd67+40];
	ld.local.v4.u8 	{%rs550, %rs551, %rs552, %rs553}, [%rd67+36];
	ld.local.v4.u8 	{%rs554, %rs555, %rs556, %rs557}, [%rd67+32];
	ld.local.v4.u8 	{%rs558, %rs559, %rs560, %rs561}, [%rd67+60];
	ld.local.v4.u8 	{%rs562, %rs563, %rs564, %rs565}, [%rd67+56];
	ld.local.v4.u8 	{%rs566, %rs567, %rs568, %rs569}, [%rd67+52];
	ld.local.v4.u8 	{%rs570, %rs571, %rs572, %rs573}, [%rd67+48];
	xor.b16  	%rs574, %rs557, %rs525;
	xor.b16  	%rs575, %rs556, %rs524;
	xor.b16  	%rs576, %rs555, %rs523;
	xor.b16  	%rs577, %rs554, %rs522;
	xor.b16  	%rs578, %rs553, %rs521;
	xor.b16  	%rs579, %rs552, %rs520;
	xor.b16  	%rs580, %rs551, %rs519;
	xor.b16  	%rs581, %rs550, %rs518;
	xor.b16  	%rs582, %rs549, %rs517;
	xor.b16  	%rs583, %rs548, %rs516;
	xor.b16  	%rs584, %rs547, %rs515;
	xor.b16  	%rs585, %rs546, %rs514;
	xor.b16  	%rs586, %rs545, %rs513;
	xor.b16  	%rs587, %rs544, %rs512;
	xor.b16  	%rs588, %rs543, %rs511;
	xor.b16  	%rs589, %rs542, %rs510;
	xor.b16  	%rs590, %rs573, %rs541;
	xor.b16  	%rs591, %rs572, %rs540;
	xor.b16  	%rs592, %rs571, %rs539;
	xor.b16  	%rs593, %rs570, %rs538;
	xor.b16  	%rs594, %rs569, %rs537;
	xor.b16  	%rs595, %rs568, %rs536;
	xor.b16  	%rs596, %rs567, %rs535;
	xor.b16  	%rs597, %rs566, %rs534;
	xor.b16  	%rs598, %rs565, %rs533;
	xor.b16  	%rs599, %rs564, %rs532;
	xor.b16  	%rs600, %rs563, %rs531;
	xor.b16  	%rs601, %rs562, %rs530;
	xor.b16  	%rs602, %rs561, %rs529;
	xor.b16  	%rs603, %rs560, %rs528;
	xor.b16  	%rs604, %rs559, %rs527;
	xor.b16  	%rs605, %rs558, %rs526;
	st.local.v4.u8 	[%rd67+44], {%rs589, %rs588, %rs587, %rs586};
	st.local.v4.u8 	[%rd67+40], {%rs585, %rs584, %rs583, %rs582};
	st.local.v4.u8 	[%rd67+36], {%rs581, %rs580, %rs579, %rs578};
	st.local.v4.u8 	[%rd67+32], {%rs577, %rs576, %rs575, %rs574};
	st.local.v4.u8 	[%rd67+60], {%rs605, %rs604, %rs603, %rs602};
	st.local.v4.u8 	[%rd67+56], {%rs601, %rs600, %rs599, %rs598};
	st.local.v4.u8 	[%rd67+52], {%rs597, %rs596, %rs595, %rs594};
	st.local.v4.u8 	[%rd67+48], {%rs593, %rs592, %rs591, %rs590};
	add.s64 	%rd83, %rd83, 64;
	add.s64 	%rd81, %rd81, 2;
	setp.ne.s64 	%p12, %rd81, 0;
	@%p12 bra 	$L__BB11_10;
$L__BB11_11:
	setp.eq.s64 	%p13, %rd13, 0;
	@%p13 bra 	$L__BB11_13;
// %bb.12:
	add.s64 	%rd68, %rd79, %rd83;
	ld.u8 	%rs606, [%rd68+12];
	ld.u8 	%rs607, [%rd68+13];
	ld.u8 	%rs608, [%rd68+14];
	ld.u8 	%rs609, [%rd68+15];
	ld.u8 	%rs610, [%rd68+8];
	ld.u8 	%rs611, [%rd68+9];
	ld.u8 	%rs612, [%rd68+10];
	ld.u8 	%rs613, [%rd68+11];
	ld.u8 	%rs614, [%rd68+4];
	ld.u8 	%rs615, [%rd68+5];
	ld.u8 	%rs616, [%rd68+6];
	ld.u8 	%rs617, [%rd68+7];
	ld.u8 	%rs618, [%rd68];
	ld.u8 	%rs619, [%rd68+1];
	ld.u8 	%rs620, [%rd68+2];
	ld.u8 	%rs621, [%rd68+3];
	ld.u8 	%rs622, [%rd68+28];
	ld.u8 	%rs623, [%rd68+29];
	ld.u8 	%rs624, [%rd68+30];
	ld.u8 	%rs625, [%rd68+31];
	ld.u8 	%rs626, [%rd68+24];
	ld.u8 	%rs627, [%rd68+25];
	ld.u8 	%rs628, [%rd68+26];
	ld.u8 	%rs629, [%rd68+27];
	ld.u8 	%rs630, [%rd68+20];
	ld.u8 	%rs631, [%rd68+21];
	ld.u8 	%rs632, [%rd68+22];
	ld.u8 	%rs633, [%rd68+23];
	ld.u8 	%rs634, [%rd68+16];
	ld.u8 	%rs635, [%rd68+17];
	ld.u8 	%rs636, [%rd68+18];
	ld.u8 	%rs637, [%rd68+19];
	add.s64 	%rd69, %rd1, %rd83;
	ld.local.v4.u8 	{%rs638, %rs639, %rs640, %rs641}, [%rd69+12];
	ld.local.v4.u8 	{%rs642, %rs643, %rs644, %rs645}, [%rd69+8];
	ld.local.v4.u8 	{%rs646, %rs647, %rs648, %rs649}, [%rd69+4];
	ld.local.v4.u8 	{%rs650, %rs651, %rs652, %rs653}, [%rd69];
	ld.local.v4.u8 	{%rs654, %rs655, %rs656, %rs657}, [%rd69+28];
	ld.local.v4.u8 	{%rs658, %rs659, %rs660, %rs661}, [%rd69+24];
	ld.local.v4.u8 	{%rs662, %rs663, %rs664, %rs665}, [%rd69+20];
	ld.local.v4.u8 	{%rs666, %rs667, %rs668, %rs669}, [%rd69+16];
	xor.b16  	%rs670, %rs653, %rs621;
	xor.b16  	%rs671, %rs652, %rs620;
	xor.b16  	%rs672, %rs651, %rs619;
	xor.b16  	%rs673, %rs650, %rs618;
	xor.b16  	%rs674, %rs649, %rs617;
	xor.b16  	%rs675, %rs648, %rs616;
	xor.b16  	%rs676, %rs647, %rs615;
	xor.b16  	%rs677, %rs646, %rs614;
	xor.b16  	%rs678, %rs645, %rs613;
	xor.b16  	%rs679, %rs644, %rs612;
	xor.b16  	%rs680, %rs643, %rs611;
	xor.b16  	%rs681, %rs642, %rs610;
	xor.b16  	%rs682, %rs641, %rs609;
	xor.b16  	%rs683, %rs640, %rs608;
	xor.b16  	%rs684, %rs639, %rs607;
	xor.b16  	%rs685, %rs638, %rs606;
	xor.b16  	%rs686, %rs669, %rs637;
	xor.b16  	%rs687, %rs668, %rs636;
	xor.b16  	%rs688, %rs667, %rs635;
	xor.b16  	%rs689, %rs666, %rs634;
	xor.b16  	%rs690, %rs665, %rs633;
	xor.b16  	%rs691, %rs664, %rs632;
	xor.b16  	%rs692, %rs663, %rs631;
	xor.b16  	%rs693, %rs662, %rs630;
	xor.b16  	%rs694, %rs661, %rs629;
	xor.b16  	%rs695, %rs660, %rs628;
	xor.b16  	%rs696, %rs659, %rs627;
	xor.b16  	%rs697, %rs658, %rs626;
	xor.b16  	%rs698, %rs657, %rs625;
	xor.b16  	%rs699, %rs656, %rs624;
	xor.b16  	%rs700, %rs655, %rs623;
	xor.b16  	%rs701, %rs654, %rs622;
	st.local.v4.u8 	[%rd69+12], {%rs685, %rs684, %rs683, %rs682};
	st.local.v4.u8 	[%rd69+8], {%rs681, %rs680, %rs679, %rs678};
	st.local.v4.u8 	[%rd69+4], {%rs677, %rs676, %rs675, %rs674};
	st.local.v4.u8 	[%rd69], {%rs673, %rs672, %rs671, %rs670};
	st.local.v4.u8 	[%rd69+28], {%rs701, %rs700, %rs699, %rs698};
	st.local.v4.u8 	[%rd69+24], {%rs697, %rs696, %rs695, %rs694};
	st.local.v4.u8 	[%rd69+20], {%rs693, %rs692, %rs691, %rs690};
	st.local.v4.u8 	[%rd69+16], {%rs689, %rs688, %rs687, %rs686};
$L__BB11_13:
	setp.eq.s64 	%p14, %rd80, %rd91;
	@%p14 bra 	$L__BB11_23;
// %bb.14:
	and.b64  	%rd70, %rd80, 24;
	setp.eq.s64 	%p15, %rd70, 0;
	@%p15 bra 	$L__BB11_18;
$L__BB11_15:
	and.b64  	%rd21, %rd80, -8;
	add.s64 	%rd87, %rd1, %rd91;
	sub.s64 	%rd86, %rd91, %rd21;
	add.s64 	%rd85, %rd79, %rd91;
$L__BB11_16:                            // =>This Inner Loop Header: Depth=1
	ld.u8 	%rs702, [%rd85+4];
	ld.u8 	%rs703, [%rd85+5];
	ld.u8 	%rs704, [%rd85+6];
	ld.u8 	%rs705, [%rd85+7];
	ld.u8 	%rs706, [%rd85];
	ld.u8 	%rs707, [%rd85+1];
	ld.u8 	%rs708, [%rd85+2];
	ld.u8 	%rs709, [%rd85+3];
	ld.local.v4.u8 	{%rs710, %rs711, %rs712, %rs713}, [%rd87+4];
	ld.local.v4.u8 	{%rs714, %rs715, %rs716, %rs717}, [%rd87];
	xor.b16  	%rs718, %rs717, %rs709;
	xor.b16  	%rs719, %rs716, %rs708;
	xor.b16  	%rs720, %rs715, %rs707;
	xor.b16  	%rs721, %rs714, %rs706;
	xor.b16  	%rs722, %rs713, %rs705;
	xor.b16  	%rs723, %rs712, %rs704;
	xor.b16  	%rs724, %rs711, %rs703;
	xor.b16  	%rs725, %rs710, %rs702;
	st.local.v4.u8 	[%rd87+4], {%rs725, %rs724, %rs723, %rs722};
	st.local.v4.u8 	[%rd87], {%rs721, %rs720, %rs719, %rs718};
	add.s64 	%rd87, %rd87, 8;
	add.s64 	%rd86, %rd86, 8;
	add.s64 	%rd85, %rd85, 8;
	setp.ne.s64 	%p16, %rd86, 0;
	@%p16 bra 	$L__BB11_16;
// %bb.17:
	setp.eq.s64 	%p17, %rd80, %rd21;
	mov.u64 	%rd91, %rd21;
	@%p17 bra 	$L__BB11_23;
$L__BB11_18:
	not.b64 	%rd71, %rd91;
	add.s64 	%rd32, %rd80, %rd71;
	and.b64  	%rd90, %rd80, 3;
	setp.eq.s64 	%p18, %rd90, 0;
	@%p18 bra 	$L__BB11_20;
$L__BB11_19:                            // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	add.s64 	%rd72, %rd79, %rd91;
	ld.u8 	%rs726, [%rd72];
	add.s64 	%rd73, %rd1, %rd91;
	ld.local.u8 	%rs727, [%rd73];
	xor.b16  	%rs728, %rs727, %rs726;
	st.local.u8 	[%rd73], %rs728;
	add.s64 	%rd91, %rd91, 1;
	add.s64 	%rd90, %rd90, -1;
	setp.ne.s64 	%p19, %rd90, 0;
	@%p19 bra 	$L__BB11_19;
$L__BB11_20:
	setp.lt.u64 	%p20, %rd32, 3;
	@%p20 bra 	$L__BB11_23;
// %bb.21:                              // %.preheader
	add.s64 	%rd74, %rd91, 3;
	add.s64 	%rd94, %rd79, %rd74;
	sub.s64 	%rd93, %rd80, %rd91;
	add.s64 	%rd92, %rd1, %rd74;
$L__BB11_22:                            // =>This Inner Loop Header: Depth=1
	ld.u8 	%rs729, [%rd94+-3];
	ld.local.u8 	%rs730, [%rd92+-3];
	xor.b16  	%rs731, %rs730, %rs729;
	st.local.u8 	[%rd92+-3], %rs731;
	ld.u8 	%rs732, [%rd94+-2];
	ld.local.u8 	%rs733, [%rd92+-2];
	xor.b16  	%rs734, %rs733, %rs732;
	st.local.u8 	[%rd92+-2], %rs734;
	ld.u8 	%rs735, [%rd94+-1];
	ld.local.u8 	%rs736, [%rd92+-1];
	xor.b16  	%rs737, %rs736, %rs735;
	st.local.u8 	[%rd92+-1], %rs737;
	ld.u8 	%rs738, [%rd94];
	ld.local.u8 	%rs739, [%rd92];
	xor.b16  	%rs740, %rs739, %rs738;
	st.local.u8 	[%rd92], %rs740;
	add.s64 	%rd94, %rd94, 4;
	add.s64 	%rd93, %rd93, -4;
	add.s64 	%rd92, %rd92, 4;
	setp.ne.s64 	%p21, %rd93, 0;
	@%p21 bra 	$L__BB11_22;
$L__BB11_23:
	{ // callseq 187, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd52;
	call.uni 
	keccakf, 
	(
	param0
	);
	} // callseq 187
	ld.local.v4.u8 	{%rs741, %rs742, %rs743, %rs744}, [%rd1+28];
	ld.local.v4.u8 	{%rs745, %rs746, %rs747, %rs748}, [%rd1+24];
	ld.local.v4.u8 	{%rs749, %rs750, %rs751, %rs752}, [%rd1+20];
	ld.local.v4.u8 	{%rs753, %rs754, %rs755, %rs756}, [%rd1+16];
	st.u8 	[%rd50+15], %rs753;
	st.u8 	[%rd50+14], %rs754;
	st.u8 	[%rd50+13], %rs755;
	st.u8 	[%rd50+12], %rs756;
	st.u8 	[%rd50+11], %rs749;
	st.u8 	[%rd50+10], %rs750;
	st.u8 	[%rd50+9], %rs751;
	st.u8 	[%rd50+8], %rs752;
	st.u8 	[%rd50+7], %rs745;
	st.u8 	[%rd50+6], %rs746;
	st.u8 	[%rd50+5], %rs747;
	st.u8 	[%rd50+4], %rs748;
	st.u8 	[%rd50+3], %rs741;
	st.u8 	[%rd50+2], %rs742;
	st.u8 	[%rd50+1], %rs743;
	st.u8 	[%rd50], %rs744;
	ld.local.v4.u8 	{%rs757, %rs758, %rs759, %rs760}, [%rd1+12];
	ld.local.v4.u8 	{%rs761, %rs762, %rs763, %rs764}, [%rd1+8];
	ld.local.v4.u8 	{%rs765, %rs766, %rs767, %rs768}, [%rd1+4];
	ld.local.v4.u8 	{%rs769, %rs770, %rs771, %rs772}, [%rd1];
	st.u8 	[%rd50+31], %rs769;
	st.u8 	[%rd50+30], %rs770;
	st.u8 	[%rd50+29], %rs771;
	st.u8 	[%rd50+28], %rs772;
	st.u8 	[%rd50+27], %rs765;
	st.u8 	[%rd50+26], %rs766;
	st.u8 	[%rd50+25], %rs767;
	st.u8 	[%rd50+24], %rs768;
	st.u8 	[%rd50+23], %rs761;
	st.u8 	[%rd50+22], %rs762;
	st.u8 	[%rd50+21], %rs763;
	st.u8 	[%rd50+20], %rs764;
	st.u8 	[%rd50+19], %rs757;
	st.u8 	[%rd50+18], %rs758;
	st.u8 	[%rd50+17], %rs759;
	st.u8 	[%rd50+16], %rs760;
	ret;
                                        // -- End function
}
.func keccakf(
	.param .b64 keccakf_param_0
)                                       // -- Begin function keccakf
                                        // @keccakf
{
	.reg .pred 	%p<2>;
	.reg .b64 	%rd<239>;

// %bb.0:
	ld.param.u64 	%rd78, [keccakf_param_0];
	ld.u64 	%rd214, [%rd78];
	ld.u64 	%rd215, [%rd78+40];
	ld.u64 	%rd216, [%rd78+80];
	ld.u64 	%rd217, [%rd78+120];
	ld.u64 	%rd218, [%rd78+160];
	ld.u64 	%rd219, [%rd78+8];
	ld.u64 	%rd220, [%rd78+48];
	ld.u64 	%rd221, [%rd78+88];
	ld.u64 	%rd222, [%rd78+128];
	ld.u64 	%rd223, [%rd78+168];
	ld.u64 	%rd224, [%rd78+16];
	ld.u64 	%rd225, [%rd78+56];
	ld.u64 	%rd226, [%rd78+96];
	ld.u64 	%rd227, [%rd78+136];
	ld.u64 	%rd228, [%rd78+176];
	ld.u64 	%rd229, [%rd78+24];
	ld.u64 	%rd230, [%rd78+64];
	ld.u64 	%rd231, [%rd78+104];
	ld.u64 	%rd232, [%rd78+144];
	ld.u64 	%rd233, [%rd78+184];
	ld.u64 	%rd234, [%rd78+32];
	ld.u64 	%rd235, [%rd78+72];
	ld.u64 	%rd236, [%rd78+112];
	ld.u64 	%rd237, [%rd78+152];
	ld.u64 	%rd238, [%rd78+192];
	mov.u64 	%rd213, 0;
$L__BB12_1:                             // =>This Inner Loop Header: Depth=1
	xor.b64  	%rd80, %rd215, %rd214;
	xor.b64  	%rd81, %rd80, %rd216;
	xor.b64  	%rd82, %rd81, %rd217;
	xor.b64  	%rd83, %rd82, %rd218;
	xor.b64  	%rd84, %rd220, %rd219;
	xor.b64  	%rd85, %rd84, %rd221;
	xor.b64  	%rd86, %rd85, %rd222;
	xor.b64  	%rd87, %rd86, %rd223;
	xor.b64  	%rd88, %rd225, %rd224;
	xor.b64  	%rd89, %rd88, %rd226;
	xor.b64  	%rd90, %rd89, %rd227;
	xor.b64  	%rd91, %rd90, %rd228;
	xor.b64  	%rd92, %rd230, %rd229;
	xor.b64  	%rd93, %rd92, %rd231;
	xor.b64  	%rd94, %rd93, %rd232;
	xor.b64  	%rd95, %rd94, %rd233;
	xor.b64  	%rd96, %rd235, %rd234;
	xor.b64  	%rd97, %rd96, %rd236;
	xor.b64  	%rd98, %rd97, %rd237;
	xor.b64  	%rd99, %rd98, %rd238;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd87, 1;
	shr.b64 	%rhs, %rd87, 63;
	add.u64 	%rd100, %lhs, %rhs;
	}
	xor.b64  	%rd101, %rd99, %rd100;
	xor.b64  	%rd102, %rd101, %rd214;
	xor.b64  	%rd103, %rd101, %rd215;
	xor.b64  	%rd104, %rd101, %rd216;
	xor.b64  	%rd105, %rd101, %rd217;
	xor.b64  	%rd106, %rd101, %rd218;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd91, 1;
	shr.b64 	%rhs, %rd91, 63;
	add.u64 	%rd107, %lhs, %rhs;
	}
	xor.b64  	%rd108, %rd107, %rd83;
	xor.b64  	%rd109, %rd108, %rd219;
	xor.b64  	%rd110, %rd108, %rd220;
	xor.b64  	%rd111, %rd108, %rd221;
	xor.b64  	%rd112, %rd108, %rd222;
	xor.b64  	%rd113, %rd108, %rd223;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd95, 1;
	shr.b64 	%rhs, %rd95, 63;
	add.u64 	%rd114, %lhs, %rhs;
	}
	xor.b64  	%rd115, %rd114, %rd87;
	xor.b64  	%rd116, %rd115, %rd224;
	xor.b64  	%rd117, %rd115, %rd225;
	xor.b64  	%rd118, %rd115, %rd226;
	xor.b64  	%rd119, %rd115, %rd227;
	xor.b64  	%rd120, %rd115, %rd228;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd99, 1;
	shr.b64 	%rhs, %rd99, 63;
	add.u64 	%rd121, %lhs, %rhs;
	}
	xor.b64  	%rd122, %rd121, %rd91;
	xor.b64  	%rd123, %rd122, %rd229;
	xor.b64  	%rd124, %rd122, %rd230;
	xor.b64  	%rd125, %rd122, %rd231;
	xor.b64  	%rd126, %rd122, %rd232;
	xor.b64  	%rd127, %rd122, %rd233;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd83, 1;
	shr.b64 	%rhs, %rd83, 63;
	add.u64 	%rd128, %lhs, %rhs;
	}
	xor.b64  	%rd129, %rd95, %rd128;
	xor.b64  	%rd130, %rd129, %rd234;
	xor.b64  	%rd131, %rd235, %rd129;
	xor.b64  	%rd132, %rd236, %rd129;
	xor.b64  	%rd133, %rd237, %rd129;
	xor.b64  	%rd134, %rd238, %rd129;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd109, 1;
	shr.b64 	%rhs, %rd109, 63;
	add.u64 	%rd135, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd104, 3;
	shr.b64 	%rhs, %rd104, 61;
	add.u64 	%rd136, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd117, 6;
	shr.b64 	%rhs, %rd117, 58;
	add.u64 	%rd137, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd111, 10;
	shr.b64 	%rhs, %rd111, 54;
	add.u64 	%rd138, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd119, 15;
	shr.b64 	%rhs, %rd119, 49;
	add.u64 	%rd139, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd126, 21;
	shr.b64 	%rhs, %rd126, 43;
	add.u64 	%rd140, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd123, 28;
	shr.b64 	%rhs, %rd123, 36;
	add.u64 	%rd141, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd103, 36;
	shr.b64 	%rhs, %rd103, 28;
	add.u64 	%rd142, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd112, 45;
	shr.b64 	%rhs, %rd112, 19;
	add.u64 	%rd143, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd124, 55;
	shr.b64 	%rhs, %rd124, 9;
	add.u64 	%rd144, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd113, 2;
	shr.b64 	%rhs, %rd113, 62;
	add.u64 	%rd145, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd134, 14;
	shr.b64 	%rhs, %rd134, 50;
	add.u64 	%rd146, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd130, 27;
	shr.b64 	%rhs, %rd130, 37;
	add.u64 	%rd147, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd105, 41;
	shr.b64 	%rhs, %rd105, 23;
	add.u64 	%rd148, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd127, 56;
	shr.b64 	%rhs, %rd127, 8;
	add.u64 	%rd149, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd133, 8;
	shr.b64 	%rhs, %rd133, 56;
	add.u64 	%rd150, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd125, 25;
	shr.b64 	%rhs, %rd125, 39;
	add.u64 	%rd151, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd118, 43;
	shr.b64 	%rhs, %rd118, 21;
	add.u64 	%rd152, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd116, 62;
	shr.b64 	%rhs, %rd116, 2;
	add.u64 	%rd153, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd106, 18;
	shr.b64 	%rhs, %rd106, 46;
	add.u64 	%rd154, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd132, 39;
	shr.b64 	%rhs, %rd132, 25;
	add.u64 	%rd155, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd120, 61;
	shr.b64 	%rhs, %rd120, 3;
	add.u64 	%rd156, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd131, 20;
	shr.b64 	%rhs, %rd131, 44;
	add.u64 	%rd157, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd110, 44;
	shr.b64 	%rhs, %rd110, 20;
	add.u64 	%rd158, %lhs, %rhs;
	}
	not.b64 	%rd159, %rd158;
	and.b64  	%rd160, %rd152, %rd159;
	xor.b64  	%rd161, %rd102, %rd160;
	not.b64 	%rd162, %rd152;
	and.b64  	%rd163, %rd140, %rd162;
	xor.b64  	%rd219, %rd163, %rd158;
	not.b64 	%rd164, %rd140;
	and.b64  	%rd165, %rd146, %rd164;
	xor.b64  	%rd224, %rd165, %rd152;
	not.b64 	%rd166, %rd146;
	and.b64  	%rd167, %rd102, %rd166;
	xor.b64  	%rd229, %rd140, %rd167;
	not.b64 	%rd168, %rd102;
	and.b64  	%rd169, %rd158, %rd168;
	xor.b64  	%rd234, %rd169, %rd146;
	not.b64 	%rd170, %rd157;
	and.b64  	%rd171, %rd136, %rd170;
	xor.b64  	%rd215, %rd141, %rd171;
	not.b64 	%rd172, %rd136;
	and.b64  	%rd173, %rd143, %rd172;
	xor.b64  	%rd220, %rd173, %rd157;
	not.b64 	%rd174, %rd143;
	and.b64  	%rd175, %rd156, %rd174;
	xor.b64  	%rd225, %rd136, %rd175;
	not.b64 	%rd176, %rd156;
	and.b64  	%rd177, %rd141, %rd176;
	xor.b64  	%rd230, %rd177, %rd143;
	not.b64 	%rd178, %rd141;
	and.b64  	%rd179, %rd157, %rd178;
	xor.b64  	%rd235, %rd179, %rd156;
	not.b64 	%rd180, %rd137;
	and.b64  	%rd181, %rd151, %rd180;
	xor.b64  	%rd216, %rd181, %rd135;
	not.b64 	%rd182, %rd151;
	and.b64  	%rd183, %rd150, %rd182;
	xor.b64  	%rd221, %rd183, %rd137;
	not.b64 	%rd184, %rd150;
	and.b64  	%rd185, %rd154, %rd184;
	xor.b64  	%rd226, %rd151, %rd185;
	not.b64 	%rd186, %rd154;
	and.b64  	%rd187, %rd135, %rd186;
	xor.b64  	%rd231, %rd187, %rd150;
	not.b64 	%rd188, %rd135;
	and.b64  	%rd189, %rd137, %rd188;
	xor.b64  	%rd236, %rd154, %rd189;
	not.b64 	%rd190, %rd142;
	and.b64  	%rd191, %rd138, %rd190;
	xor.b64  	%rd217, %rd191, %rd147;
	not.b64 	%rd192, %rd138;
	and.b64  	%rd193, %rd139, %rd192;
	xor.b64  	%rd222, %rd142, %rd193;
	not.b64 	%rd194, %rd139;
	and.b64  	%rd195, %rd149, %rd194;
	xor.b64  	%rd227, %rd195, %rd138;
	not.b64 	%rd196, %rd149;
	and.b64  	%rd197, %rd147, %rd196;
	xor.b64  	%rd232, %rd197, %rd139;
	not.b64 	%rd198, %rd147;
	and.b64  	%rd199, %rd142, %rd198;
	xor.b64  	%rd237, %rd149, %rd199;
	not.b64 	%rd200, %rd144;
	and.b64  	%rd201, %rd155, %rd200;
	xor.b64  	%rd218, %rd201, %rd153;
	not.b64 	%rd202, %rd155;
	and.b64  	%rd203, %rd148, %rd202;
	xor.b64  	%rd223, %rd144, %rd203;
	not.b64 	%rd204, %rd148;
	and.b64  	%rd205, %rd145, %rd204;
	xor.b64  	%rd228, %rd205, %rd155;
	not.b64 	%rd206, %rd145;
	and.b64  	%rd207, %rd153, %rd206;
	xor.b64  	%rd233, %rd148, %rd207;
	not.b64 	%rd208, %rd153;
	and.b64  	%rd209, %rd144, %rd208;
	xor.b64  	%rd238, %rd209, %rd145;
	mov.u64 	%rd210, RC;
	add.s64 	%rd211, %rd210, %rd213;
	ld.global.nc.u64 	%rd212, [%rd211];
	xor.b64  	%rd214, %rd212, %rd161;
	add.s64 	%rd213, %rd213, 8;
	setp.eq.s64 	%p1, %rd213, 192;
	@%p1 bra 	$L__BB12_2;
	bra.uni 	$L__BB12_1;
$L__BB12_2:
	st.u64 	[%rd78], %rd214;
	st.u64 	[%rd78+40], %rd215;
	st.u64 	[%rd78+80], %rd216;
	st.u64 	[%rd78+120], %rd217;
	st.u64 	[%rd78+160], %rd218;
	st.u64 	[%rd78+8], %rd219;
	st.u64 	[%rd78+48], %rd220;
	st.u64 	[%rd78+88], %rd221;
	st.u64 	[%rd78+128], %rd222;
	st.u64 	[%rd78+168], %rd223;
	st.u64 	[%rd78+16], %rd224;
	st.u64 	[%rd78+56], %rd225;
	st.u64 	[%rd78+96], %rd226;
	st.u64 	[%rd78+136], %rd227;
	st.u64 	[%rd78+176], %rd228;
	st.u64 	[%rd78+24], %rd229;
	st.u64 	[%rd78+64], %rd230;
	st.u64 	[%rd78+104], %rd231;
	st.u64 	[%rd78+144], %rd232;
	st.u64 	[%rd78+184], %rd233;
	st.u64 	[%rd78+32], %rd234;
	st.u64 	[%rd78+72], %rd235;
	st.u64 	[%rd78+112], %rd236;
	st.u64 	[%rd78+152], %rd237;
	st.u64 	[%rd78+192], %rd238;
	ret;
                                        // -- End function
}
	// .globl	__power_word            // -- Begin function __power_word
.visible .func __power_word(
	.param .b64 __power_word_param_0,
	.param .b64 __power_word_param_1,
	.param .b64 __power_word_param_2
)                                       // @__power_word
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<130>;

// %bb.0:
	ld.param.u64 	%rd38, [__power_word_param_2];
	ld.param.u64 	%rd43, [__power_word_param_1];
	ld.u64 	%rd116, [%rd43+16];
	ld.u64 	%rd114, [%rd43];
	ld.u64 	%rd117, [%rd43+24];
	ld.u64 	%rd115, [%rd43+8];
	or.b64  	%rd44, %rd115, %rd117;
	or.b64  	%rd45, %rd114, %rd116;
	or.b64  	%rd46, %rd45, %rd44;
	setp.eq.s64 	%p1, %rd46, 0;
	mov.u64 	%rd127, 0;
	mov.u64 	%rd126, 1;
	mov.u64 	%rd128, %rd127;
	mov.u64 	%rd129, %rd127;
	@%p1 bra 	$L__BB13_3;
// %bb.1:
	ld.param.u64 	%rd37, [__power_word_param_0];
	ld.u64 	%rd121, [%rd37+24];
	ld.u64 	%rd120, [%rd37+16];
	ld.u64 	%rd119, [%rd37+8];
	ld.u64 	%rd118, [%rd37];
	mov.u64 	%rd49, 0;
	mov.u64 	%rd126, 1;
	mov.u64 	%rd123, %rd49;
	mov.u64 	%rd128, %rd49;
	mov.u64 	%rd129, %rd49;
$L__BB13_2:                             // =>This Inner Loop Header: Depth=1
	and.b64  	%rd51, %rd114, 1;
	setp.eq.b64 	%p2, %rd51, 1;
	selp.b64 	%rd52, %rd121, 0, %p2;
	selp.b64 	%rd53, %rd120, 0, %p2;
	selp.b64 	%rd54, %rd119, 0, %p2;
	selp.b64 	%rd55, %rd118, 1, %p2;
	mul.hi.u64 	%rd56, %rd55, %rd126;
	mul.lo.s64 	%rd57, %rd54, %rd126;
	mul.hi.u64 	%rd58, %rd54, %rd126;
	add.cc.s64 	%rd59, %rd57, %rd56;
	addc.cc.s64 	%rd60, %rd58, 0;
	mul.lo.s64 	%rd61, %rd55, %rd123;
	mul.hi.u64 	%rd62, %rd55, %rd123;
	add.cc.s64 	%rd127, %rd61, %rd59;
	addc.cc.s64 	%rd63, %rd62, 0;
	add.cc.s64 	%rd65, %rd60, %rd63;
	addc.cc.s64 	%rd66, %rd49, 0;
	mul.lo.s64 	%rd67, %rd54, %rd123;
	mul.hi.u64 	%rd68, %rd54, %rd123;
	add.cc.s64 	%rd69, %rd67, %rd65;
	addc.cc.s64 	%rd70, %rd68, %rd66;
	mul.lo.s64 	%rd71, %rd128, %rd54;
	mul.hi.u64 	%rd72, %rd128, %rd55;
	add.s64 	%rd73, %rd72, %rd71;
	mul.lo.s64 	%rd74, %rd129, %rd55;
	add.s64 	%rd75, %rd73, %rd74;
	mul.hi.u64 	%rd76, %rd126, %rd53;
	mul.lo.s64 	%rd77, %rd126, %rd52;
	add.s64 	%rd78, %rd76, %rd77;
	mul.lo.s64 	%rd79, %rd123, %rd53;
	add.s64 	%rd80, %rd78, %rd79;
	mul.lo.s64 	%rd81, %rd126, %rd53;
	mul.lo.s64 	%rd82, %rd128, %rd55;
	add.cc.s64 	%rd83, %rd82, %rd81;
	addc.cc.s64 	%rd84, %rd75, %rd80;
	add.cc.s64 	%rd128, %rd69, %rd83;
	addc.cc.s64 	%rd129, %rd70, %rd84;
	mul.lo.s64 	%rd126, %rd55, %rd126;
	mul.lo.s64 	%rd85, %rd119, %rd118;
	mul.hi.u64 	%rd86, %rd119, %rd118;
	mul.hi.u64 	%rd87, %rd118, %rd118;
	add.cc.s64 	%rd88, %rd85, %rd87;
	addc.cc.s64 	%rd89, %rd86, 0;
	add.cc.s64 	%rd26, %rd85, %rd88;
	addc.cc.s64 	%rd90, %rd86, 0;
	add.cc.s64 	%rd91, %rd89, %rd90;
	addc.cc.s64 	%rd92, %rd49, 0;
	mul.lo.s64 	%rd93, %rd119, %rd119;
	mul.hi.u64 	%rd94, %rd119, %rd119;
	add.cc.s64 	%rd95, %rd93, %rd91;
	addc.cc.s64 	%rd96, %rd94, %rd92;
	mul.lo.s64 	%rd97, %rd119, %rd120;
	mul.hi.u64 	%rd98, %rd118, %rd120;
	add.s64 	%rd99, %rd98, %rd97;
	mul.lo.s64 	%rd100, %rd118, %rd121;
	add.s64 	%rd101, %rd99, %rd100;
	add.s64 	%rd102, %rd98, %rd100;
	add.s64 	%rd103, %rd102, %rd97;
	mul.lo.s64 	%rd104, %rd118, %rd120;
	add.cc.s64 	%rd105, %rd104, %rd104;
	addc.cc.s64 	%rd106, %rd101, %rd103;
	add.cc.s64 	%rd120, %rd95, %rd105;
	addc.cc.s64 	%rd121, %rd96, %rd106;
	mul.lo.s64 	%rd118, %rd118, %rd118;
	shr.u64 	%rd107, %rd114, 1;
	shl.b64 	%rd108, %rd115, 63;
	or.b64  	%rd29, %rd107, %rd108;
	shr.u64 	%rd109, %rd115, 1;
	shl.b64 	%rd110, %rd116, 63;
	or.b64  	%rd30, %rd109, %rd110;
	shr.u64 	%rd111, %rd116, 1;
	shl.b64 	%rd112, %rd117, 63;
	or.b64  	%rd31, %rd111, %rd112;
	shr.u64 	%rd32, %rd117, 1;
	setp.eq.s64 	%p3, %rd115, 0;
	setp.gt.u64 	%p4, %rd114, 1;
	selp.u32 	%r1, -1, 0, %p4;
	setp.ne.s64 	%p5, %rd115, 0;
	selp.u32 	%r2, -1, 0, %p5;
	selp.b32 	%r3, %r1, %r2, %p3;
	setp.eq.s64 	%p6, %rd117, 0;
	setp.ne.s64 	%p7, %rd116, 0;
	selp.u32 	%r4, -1, 0, %p7;
	setp.ne.s64 	%p8, %rd117, 0;
	selp.u32 	%r5, -1, 0, %p8;
	selp.b32 	%r6, %r4, %r5, %p6;
	or.b64  	%rd113, %rd116, %rd117;
	setp.eq.s64 	%p9, %rd113, 0;
	selp.b32 	%r7, %r3, %r6, %p9;
	and.b32  	%r8, %r7, 1;
	setp.eq.b32 	%p10, %r8, 1;
	mov.u64 	%rd114, %rd29;
	mov.u64 	%rd115, %rd30;
	mov.u64 	%rd116, %rd31;
	mov.u64 	%rd117, %rd32;
	mov.u64 	%rd119, %rd26;
	mov.u64 	%rd123, %rd127;
	@%p10 bra 	$L__BB13_2;
$L__BB13_3:
	st.u64 	[%rd38], %rd126;
	st.u64 	[%rd38+8], %rd127;
	st.u64 	[%rd38+16], %rd128;
	st.u64 	[%rd38+24], %rd129;
	ret;
                                        // -- End function
}
	// .globl	__device_calldatacpy    // -- Begin function __device_calldatacpy
.visible .func __device_calldatacpy(
	.param .b64 __device_calldatacpy_param_0,
	.param .b64 __device_calldatacpy_param_1,
	.param .b64 __device_calldatacpy_param_2,
	.param .b64 __device_calldatacpy_param_3,
	.param .b64 __device_calldatacpy_param_4
)                                       // @__device_calldatacpy
{
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<6>;
	.reg .b64 	%rd<41>;

// %bb.0:
	ld.param.u64 	%rd24, [__device_calldatacpy_param_4];
	setp.eq.s64 	%p1, %rd24, 0;
	@%p1 bra 	$L__BB14_10;
// %bb.1:
	ld.param.u64 	%rd21, [__device_calldatacpy_param_1];
	add.s64 	%rd25, %rd24, %rd21;
	setp.lt.u64 	%p2, %rd25, %rd24;
	setp.gt.u64 	%p3, %rd25, 727;
	or.pred  	%p4, %p2, %p3;
	@%p4 bra 	$L__BB14_10;
// %bb.2:
	ld.param.u64 	%rd23, [__device_calldatacpy_param_3];
	add.s64 	%rd26, %rd24, %rd23;
	setp.lt.u64 	%p5, %rd26, %rd24;
	setp.gt.u64 	%p6, %rd26, 627;
	or.pred  	%p7, %p5, %p6;
	@%p7 bra 	$L__BB14_10;
// %bb.3:
	min.u64 	%rd1, %rd23, 628;
	add.s64 	%rd27, %rd1, %rd24;
	min.u64 	%rd2, %rd27, 628;
	setp.eq.s64 	%p8, %rd2, %rd1;
	@%p8 bra 	$L__BB14_10;
// %bb.4:
	ld.param.u64 	%rd22, [__device_calldatacpy_param_2];
	ld.param.u64 	%rd20, [__device_calldatacpy_param_0];
	sub.s64 	%rd3, %rd2, %rd1;
	not.b64 	%rd29, %rd1;
	add.s64 	%rd30, %rd2, %rd29;
	and.b64  	%rd4, %rd3, 3;
	setp.lt.u64 	%p9, %rd30, 3;
	mov.u64 	%rd37, 0;
	@%p9 bra 	$L__BB14_7;
// %bb.5:
	and.b64  	%rd5, %rd3, -4;
	add.s64 	%rd6, %rd22, %rd1;
	add.s64 	%rd7, %rd20, %rd21;
	mov.u64 	%rd37, 0;
$L__BB14_6:                             // =>This Inner Loop Header: Depth=1
	add.s64 	%rd32, %rd6, %rd37;
	ld.u8 	%rs1, [%rd32];
	add.s64 	%rd33, %rd7, %rd37;
	st.u8 	[%rd33], %rs1;
	ld.u8 	%rs2, [%rd32+1];
	st.u8 	[%rd33+1], %rs2;
	ld.u8 	%rs3, [%rd32+2];
	st.u8 	[%rd33+2], %rs3;
	ld.u8 	%rs4, [%rd32+3];
	st.u8 	[%rd33+3], %rs4;
	add.s64 	%rd37, %rd37, 4;
	setp.ne.s64 	%p10, %rd5, %rd37;
	@%p10 bra 	$L__BB14_6;
$L__BB14_7:
	setp.eq.s64 	%p11, %rd4, 0;
	@%p11 bra 	$L__BB14_10;
// %bb.8:                               // %.preheader
	add.s64 	%rd34, %rd37, %rd21;
	add.s64 	%rd40, %rd20, %rd34;
	add.s64 	%rd35, %rd37, %rd1;
	add.s64 	%rd39, %rd22, %rd35;
	neg.s64 	%rd38, %rd4;
$L__BB14_9:                             // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	ld.u8 	%rs5, [%rd39];
	st.u8 	[%rd40], %rs5;
	add.s64 	%rd40, %rd40, 1;
	add.s64 	%rd39, %rd39, 1;
	add.s64 	%rd38, %rd38, 1;
	setp.ne.s64 	%p12, %rd38, 0;
	@%p12 bra 	$L__BB14_9;
$L__BB14_10:
	ret;
                                        // -- End function
}
	// .globl	__device_calldataload   // -- Begin function __device_calldataload
.visible .func __device_calldataload(
	.param .b64 __device_calldataload_param_0,
	.param .b64 __device_calldataload_param_1,
	.param .b64 __device_calldataload_param_2
)                                       // @__device_calldataload
{
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<33>;
	.reg .b64 	%rd<7>;

// %bb.0:
	ld.param.u64 	%rd3, [__device_calldataload_param_2];
	ld.param.u64 	%rd1, [__device_calldataload_param_0];
	setp.gt.u64 	%p1, %rd3, -33;
	add.s64 	%rd4, %rd3, 32;
	setp.gt.u64 	%p2, %rd4, 627;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB15_2;
	bra.uni 	$L__BB15_1;
$L__BB15_2:
	mov.u64 	%rd6, 0;
	st.u64 	[%rd1+24], %rd6;
	st.u64 	[%rd1+16], %rd6;
	st.u64 	[%rd1+8], %rd6;
	st.u64 	[%rd1], %rd6;
	bra.uni 	$L__BB15_3;
$L__BB15_1:
	ld.param.u64 	%rd2, [__device_calldataload_param_1];
	add.s64 	%rd5, %rd2, %rd3;
	ld.u8 	%rs1, [%rd5+31];
	st.u8 	[%rd1], %rs1;
	ld.u8 	%rs2, [%rd5+30];
	st.u8 	[%rd1+1], %rs2;
	ld.u8 	%rs3, [%rd5+29];
	st.u8 	[%rd1+2], %rs3;
	ld.u8 	%rs4, [%rd5+28];
	st.u8 	[%rd1+3], %rs4;
	ld.u8 	%rs5, [%rd5+27];
	st.u8 	[%rd1+4], %rs5;
	ld.u8 	%rs6, [%rd5+26];
	st.u8 	[%rd1+5], %rs6;
	ld.u8 	%rs7, [%rd5+25];
	st.u8 	[%rd1+6], %rs7;
	ld.u8 	%rs8, [%rd5+24];
	st.u8 	[%rd1+7], %rs8;
	ld.u8 	%rs9, [%rd5+23];
	st.u8 	[%rd1+8], %rs9;
	ld.u8 	%rs10, [%rd5+22];
	st.u8 	[%rd1+9], %rs10;
	ld.u8 	%rs11, [%rd5+21];
	st.u8 	[%rd1+10], %rs11;
	ld.u8 	%rs12, [%rd5+20];
	st.u8 	[%rd1+11], %rs12;
	ld.u8 	%rs13, [%rd5+19];
	st.u8 	[%rd1+12], %rs13;
	ld.u8 	%rs14, [%rd5+18];
	st.u8 	[%rd1+13], %rs14;
	ld.u8 	%rs15, [%rd5+17];
	st.u8 	[%rd1+14], %rs15;
	ld.u8 	%rs16, [%rd5+16];
	st.u8 	[%rd1+15], %rs16;
	ld.u8 	%rs17, [%rd5+15];
	st.u8 	[%rd1+16], %rs17;
	ld.u8 	%rs18, [%rd5+14];
	st.u8 	[%rd1+17], %rs18;
	ld.u8 	%rs19, [%rd5+13];
	st.u8 	[%rd1+18], %rs19;
	ld.u8 	%rs20, [%rd5+12];
	st.u8 	[%rd1+19], %rs20;
	ld.u8 	%rs21, [%rd5+11];
	st.u8 	[%rd1+20], %rs21;
	ld.u8 	%rs22, [%rd5+10];
	st.u8 	[%rd1+21], %rs22;
	ld.u8 	%rs23, [%rd5+9];
	st.u8 	[%rd1+22], %rs23;
	ld.u8 	%rs24, [%rd5+8];
	st.u8 	[%rd1+23], %rs24;
	ld.u8 	%rs25, [%rd5+7];
	st.u8 	[%rd1+24], %rs25;
	ld.u8 	%rs26, [%rd5+6];
	st.u8 	[%rd1+25], %rs26;
	ld.u8 	%rs27, [%rd5+5];
	st.u8 	[%rd1+26], %rs27;
	ld.u8 	%rs28, [%rd5+4];
	st.u8 	[%rd1+27], %rs28;
	ld.u8 	%rs29, [%rd5+3];
	st.u8 	[%rd1+28], %rs29;
	ld.u8 	%rs30, [%rd5+2];
	st.u8 	[%rd1+29], %rs30;
	ld.u8 	%rs31, [%rd5+1];
	st.u8 	[%rd1+30], %rs31;
	ld.u8 	%rs32, [%rd5];
	st.u8 	[%rd1+31], %rs32;
$L__BB15_3:
	ret;
                                        // -- End function
}
	// .globl	__device_sstore         // -- Begin function __device_sstore
.visible .func __device_sstore(
	.param .b64 __device_sstore_param_0,
	.param .b64 __device_sstore_param_1,
	.param .b64 __device_sstore_param_2,
	.param .b64 __device_sstore_param_3
)                                       // @__device_sstore
{
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<10>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<40>;

// %bb.0:
	ld.param.u64 	%rd10, [__device_sstore_param_3];
	ld.param.u64 	%rd9, [__device_sstore_param_1];
	ld.param.u64 	%rd8, [__device_sstore_param_0];
	ld.global.u8 	%rs1, [%rd9];
	ld.param.u64 	%rd12, [__device_sstore_param_2];
	setp.eq.s16 	%p1, %rs1, 0;
	ld.u64 	%rd5, [%rd12+24];
	ld.u64 	%rd4, [%rd12+16];
	ld.u64 	%rd3, [%rd12+8];
	ld.u64 	%rd2, [%rd12];
	mov.u64 	%rd39, 0;
	@%p1 bra 	$L__BB16_5;
// %bb.1:                               // %.preheader
	cvt.u64.u16 	%rd39, %rs1;
	mov.u16 	%rs9, 0;
$L__BB16_2:                             // =>This Inner Loop Header: Depth=1
	cvt.u32.u16 	%r1, %rs9;
	and.b32  	%r2, %r1, 255;
	mul.wide.u32 	%rd14, %r2, 64;
	add.s64 	%rd15, %rd8, %rd14;
	ld.global.u64 	%rd16, [%rd15];
	ld.global.u64 	%rd17, [%rd15+16];
	ld.global.u64 	%rd18, [%rd15+8];
	ld.global.u64 	%rd19, [%rd15+24];
	xor.b64  	%rd20, %rd19, %rd5;
	xor.b64  	%rd21, %rd18, %rd3;
	or.b64  	%rd22, %rd21, %rd20;
	xor.b64  	%rd23, %rd17, %rd4;
	xor.b64  	%rd24, %rd16, %rd2;
	or.b64  	%rd25, %rd24, %rd23;
	or.b64  	%rd26, %rd25, %rd22;
	setp.ne.s64 	%p2, %rd26, 0;
	@%p2 bra 	$L__BB16_4;
	bra.uni 	$L__BB16_3;
$L__BB16_4:                             //   in Loop: Header=BB16_2 Depth=1
	add.s16 	%rs9, %rs9, 1;
	and.b16  	%rs5, %rs9, 255;
	setp.lt.u16 	%p3, %rs5, %rs1;
	@%p3 bra 	$L__BB16_2;
$L__BB16_5:
	shl.b64 	%rd33, %rd39, 6;
	add.s64 	%rd34, %rd8, %rd33;
	st.global.u64 	[%rd34+16], %rd4;
	st.global.u64 	[%rd34+8], %rd3;
	st.global.u64 	[%rd34], %rd2;
	st.global.u64 	[%rd34+24], %rd5;
	ld.u64 	%rd35, [%rd10+16];
	ld.u64 	%rd36, [%rd10+8];
	ld.u64 	%rd37, [%rd10];
	ld.u64 	%rd38, [%rd10+24];
	st.global.u64 	[%rd34+56], %rd38;
	st.global.u64 	[%rd34+32], %rd37;
	st.global.u64 	[%rd34+40], %rd36;
	st.global.u64 	[%rd34+48], %rd35;
	ld.global.u8 	%rs6, [%rd9];
	add.s16 	%rs7, %rs6, 1;
	and.b16  	%rs8, %rs7, 31;
	st.global.u8 	[%rd9], %rs8;
	bra.uni 	$L__BB16_6;
$L__BB16_3:
	cvt.u64.u16 	%rd13, %rs9;
	and.b64  	%rd6, %rd13, 255;
	ld.u64 	%rd27, [%rd10+8];
	ld.u64 	%rd28, [%rd10];
	ld.u64 	%rd29, [%rd10+24];
	ld.u64 	%rd30, [%rd10+16];
	shl.b64 	%rd31, %rd6, 6;
	add.s64 	%rd32, %rd8, %rd31;
	st.global.u64 	[%rd32+48], %rd30;
	st.global.u64 	[%rd32+56], %rd29;
	st.global.u64 	[%rd32+32], %rd28;
	st.global.u64 	[%rd32+40], %rd27;
$L__BB16_6:
	ret;
                                        // -- End function
}
	// .globl	__device_sload          // -- Begin function __device_sload
.visible .func __device_sload(
	.param .b64 __device_sload_param_0,
	.param .b32 __device_sload_param_1,
	.param .b64 __device_sload_param_2,
	.param .b64 __device_sload_param_3
)                                       // @__device_sload
{
	.reg .pred 	%p<7>;
	.reg .b16 	%rs<14>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<68>;

// %bb.0:
	ld.param.u64 	%rd19, [__device_sload_param_3];
	ld.param.u8 	%rs6, [__device_sload_param_1];
	ld.param.u64 	%rd20, [__device_sload_param_2];
	ld.u64 	%rd4, [%rd20+24];
	ld.u64 	%rd3, [%rd20+16];
	ld.u64 	%rd2, [%rd20+8];
	ld.u64 	%rd1, [%rd20];
	setp.eq.s16 	%p1, %rs6, 0;
	@%p1 bra 	$L__BB17_4;
// %bb.1:                               // %.preheader1
	ld.param.u64 	%rd18, [__device_sload_param_0];
	mov.u16 	%rs12, 0;
$L__BB17_2:                             // =>This Inner Loop Header: Depth=1
	cvt.u32.u16 	%r1, %rs12;
	and.b32  	%r2, %r1, 255;
	mul.wide.u32 	%rd22, %r2, 64;
	add.s64 	%rd23, %rd18, %rd22;
	ld.global.u64 	%rd24, [%rd23];
	ld.global.u64 	%rd25, [%rd23+16];
	ld.global.u64 	%rd26, [%rd23+8];
	ld.global.u64 	%rd27, [%rd23+24];
	xor.b64  	%rd28, %rd27, %rd4;
	xor.b64  	%rd29, %rd26, %rd2;
	or.b64  	%rd30, %rd29, %rd28;
	xor.b64  	%rd31, %rd25, %rd3;
	xor.b64  	%rd32, %rd24, %rd1;
	or.b64  	%rd33, %rd32, %rd31;
	or.b64  	%rd34, %rd33, %rd30;
	setp.ne.s64 	%p2, %rd34, 0;
	@%p2 bra 	$L__BB17_3;
	bra.uni 	$L__BB17_6;
$L__BB17_3:                             //   in Loop: Header=BB17_2 Depth=1
	add.s16 	%rs12, %rs12, 1;
	and.b16  	%rs8, %rs12, 255;
	setp.lt.u16 	%p3, %rs8, %rs6;
	@%p3 bra 	$L__BB17_2;
$L__BB17_4:
	ld.global.u8 	%rs1, [__l3snap_len];
	setp.eq.s16 	%p4, %rs1, 0;
	mov.u64 	%rd64, 0;
	mov.u64 	%rd65, %rd64;
	mov.u64 	%rd66, %rd64;
	mov.u64 	%rd67, %rd64;
	@%p4 bra 	$L__BB17_11;
// %bb.5:                               // %.preheader
	mov.u16 	%rs13, 0;
	mov.u64 	%rd43, __l3snap;
$L__BB17_8:                             // =>This Inner Loop Header: Depth=1
	cvt.u32.u16 	%r3, %rs13;
	and.b32  	%r4, %r3, 255;
	mul.wide.u32 	%rd42, %r4, 64;
	add.s64 	%rd44, %rd43, %rd42;
	ld.global.u64 	%rd45, [%rd44];
	ld.global.u64 	%rd46, [%rd44+16];
	ld.global.u64 	%rd47, [%rd44+8];
	ld.global.u64 	%rd48, [%rd44+24];
	xor.b64  	%rd49, %rd48, %rd4;
	xor.b64  	%rd50, %rd47, %rd2;
	or.b64  	%rd51, %rd50, %rd49;
	xor.b64  	%rd52, %rd46, %rd3;
	xor.b64  	%rd53, %rd45, %rd1;
	or.b64  	%rd54, %rd53, %rd52;
	or.b64  	%rd55, %rd54, %rd51;
	setp.ne.s64 	%p5, %rd55, 0;
	@%p5 bra 	$L__BB17_7;
	bra.uni 	$L__BB17_9;
$L__BB17_7:                             //   in Loop: Header=BB17_8 Depth=1
	add.s16 	%rs13, %rs13, 1;
	and.b16  	%rs10, %rs13, 255;
	setp.ge.u16 	%p6, %rs10, %rs1;
	mov.u64 	%rd64, 0;
	mov.u64 	%rd65, %rd64;
	mov.u64 	%rd66, %rd64;
	mov.u64 	%rd67, %rd64;
	@%p6 bra 	$L__BB17_11;
	bra.uni 	$L__BB17_8;
$L__BB17_6:
	cvt.u64.u16 	%rd21, %rs12;
	and.b64  	%rd5, %rd21, 255;
	shl.b64 	%rd35, %rd5, 6;
	add.s64 	%rd36, %rd18, %rd35;
	add.s64 	%rd63, %rd36, 32;
	bra.uni 	$L__BB17_10;
$L__BB17_9:
	cvt.u64.u16 	%rd41, %rs13;
	and.b64  	%rd7, %rd41, 255;
	shl.b64 	%rd60, %rd7, 6;
	add.s64 	%rd62, %rd43, %rd60;
	add.s64 	%rd63, %rd62, 32;
$L__BB17_10:
	ld.global.u64 	%rd67, [%rd63+24];
	ld.global.u64 	%rd66, [%rd63+16];
	ld.global.u64 	%rd65, [%rd63+8];
	ld.global.u64 	%rd64, [%rd63];
$L__BB17_11:
	st.u64 	[%rd19], %rd64;
	st.u64 	[%rd19+8], %rd65;
	st.u64 	[%rd19+16], %rd66;
	st.u64 	[%rd19+24], %rd67;
	ret;
                                        // -- End function
}
	// .globl	__device_mstore         // -- Begin function __device_mstore
.visible .func __device_mstore(
	.param .b64 __device_mstore_param_0,
	.param .b64 __device_mstore_param_1,
	.param .b64 __device_mstore_param_2,
	.param .b64 __device_mstore_param_3
)                                       // @__device_mstore
{
	.reg .pred 	%p<10>;
	.reg .b16 	%rs<6>;
	.reg .b64 	%rd<40>;

// %bb.0:
	ld.param.u64 	%rd23, [__device_mstore_param_3];
	ld.param.u64 	%rd21, [__device_mstore_param_1];
	setp.ne.s64 	%p1, %rd23, 0;
	not.b64 	%rd24, %rd21;
	setp.ge.u64 	%p2, %rd24, %rd23;
	and.pred  	%p3, %p1, %p2;
	mov.u64 	%rd25, 728;
	sub.s64 	%rd26, %rd25, %rd23;
	setp.gt.u64 	%p4, %rd26, %rd21;
	and.pred  	%p5, %p3, %p4;
	@!%p5 bra 	$L__BB18_8;
	bra.uni 	$L__BB18_1;
$L__BB18_1:
	ld.param.u64 	%rd22, [__device_mstore_param_2];
	ld.param.u64 	%rd20, [__device_mstore_param_0];
	add.s64 	%rd1, %rd23, -1;
	and.b64  	%rd39, %rd23, 3;
	setp.lt.u64 	%p6, %rd1, 3;
	mov.u64 	%rd36, 0;
	@%p6 bra 	$L__BB18_5;
// %bb.2:
	and.b64  	%rd29, %rd23, -4;
	neg.s64 	%rd3, %rd29;
	add.s64 	%rd34, %rd20, %rd21;
	add.s64 	%rd30, %rd23, %rd22;
	add.s64 	%rd5, %rd30, -2;
	mov.u64 	%rd35, 0;
$L__BB18_3:                             // =>This Inner Loop Header: Depth=1
	add.s64 	%rd31, %rd5, %rd35;
	ld.u8 	%rs1, [%rd31+1];
	st.u8 	[%rd34], %rs1;
	ld.u8 	%rs2, [%rd31];
	st.u8 	[%rd34+1], %rs2;
	ld.u8 	%rs3, [%rd31+-1];
	st.u8 	[%rd34+2], %rs3;
	ld.u8 	%rs4, [%rd31+-2];
	st.u8 	[%rd34+3], %rs4;
	add.s64 	%rd35, %rd35, -4;
	add.s64 	%rd34, %rd34, 4;
	setp.ne.s64 	%p7, %rd3, %rd35;
	@%p7 bra 	$L__BB18_3;
// %bb.4:                               // %.loopexit1
	neg.s64 	%rd36, %rd35;
$L__BB18_5:
	setp.eq.s64 	%p8, %rd39, 0;
	@%p8 bra 	$L__BB18_8;
// %bb.6:                               // %.preheader
	add.s64 	%rd32, %rd36, %rd21;
	add.s64 	%rd38, %rd20, %rd32;
	sub.s64 	%rd33, %rd1, %rd36;
	add.s64 	%rd37, %rd22, %rd33;
$L__BB18_7:                             // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	ld.u8 	%rs5, [%rd37];
	st.u8 	[%rd38], %rs5;
	add.s64 	%rd39, %rd39, -1;
	add.s64 	%rd38, %rd38, 1;
	add.s64 	%rd37, %rd37, -1;
	setp.ne.s64 	%p9, %rd39, 0;
	@%p9 bra 	$L__BB18_7;
$L__BB18_8:
	ret;
                                        // -- End function
}
	// .globl	__device_mload          // -- Begin function __device_mload
.visible .func __device_mload(
	.param .b64 __device_mload_param_0,
	.param .b64 __device_mload_param_1,
	.param .b64 __device_mload_param_2
)                                       // @__device_mload
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<33>;
	.reg .b64 	%rd<6>;

// %bb.0:
	ld.param.u64 	%rd3, [__device_mload_param_2];
	ld.param.u64 	%rd2, [__device_mload_param_1];
	setp.lt.u64 	%p1, %rd2, 696;
	@%p1 bra 	$L__BB19_2;
// %bb.1:
	mov.u64 	%rd5, 0;
	st.u64 	[%rd3+24], %rd5;
	st.u64 	[%rd3+16], %rd5;
	st.u64 	[%rd3+8], %rd5;
	st.u64 	[%rd3], %rd5;
	bra.uni 	$L__BB19_3;
$L__BB19_2:
	ld.param.u64 	%rd1, [__device_mload_param_0];
	add.s64 	%rd4, %rd1, %rd2;
	ld.u8 	%rs1, [%rd4+31];
	st.u8 	[%rd3], %rs1;
	ld.u8 	%rs2, [%rd4+30];
	st.u8 	[%rd3+1], %rs2;
	ld.u8 	%rs3, [%rd4+29];
	st.u8 	[%rd3+2], %rs3;
	ld.u8 	%rs4, [%rd4+28];
	st.u8 	[%rd3+3], %rs4;
	ld.u8 	%rs5, [%rd4+27];
	st.u8 	[%rd3+4], %rs5;
	ld.u8 	%rs6, [%rd4+26];
	st.u8 	[%rd3+5], %rs6;
	ld.u8 	%rs7, [%rd4+25];
	st.u8 	[%rd3+6], %rs7;
	ld.u8 	%rs8, [%rd4+24];
	st.u8 	[%rd3+7], %rs8;
	ld.u8 	%rs9, [%rd4+23];
	st.u8 	[%rd3+8], %rs9;
	ld.u8 	%rs10, [%rd4+22];
	st.u8 	[%rd3+9], %rs10;
	ld.u8 	%rs11, [%rd4+21];
	st.u8 	[%rd3+10], %rs11;
	ld.u8 	%rs12, [%rd4+20];
	st.u8 	[%rd3+11], %rs12;
	ld.u8 	%rs13, [%rd4+19];
	st.u8 	[%rd3+12], %rs13;
	ld.u8 	%rs14, [%rd4+18];
	st.u8 	[%rd3+13], %rs14;
	ld.u8 	%rs15, [%rd4+17];
	st.u8 	[%rd3+14], %rs15;
	ld.u8 	%rs16, [%rd4+16];
	st.u8 	[%rd3+15], %rs16;
	ld.u8 	%rs17, [%rd4+15];
	st.u8 	[%rd3+16], %rs17;
	ld.u8 	%rs18, [%rd4+14];
	st.u8 	[%rd3+17], %rs18;
	ld.u8 	%rs19, [%rd4+13];
	st.u8 	[%rd3+18], %rs19;
	ld.u8 	%rs20, [%rd4+12];
	st.u8 	[%rd3+19], %rs20;
	ld.u8 	%rs21, [%rd4+11];
	st.u8 	[%rd3+20], %rs21;
	ld.u8 	%rs22, [%rd4+10];
	st.u8 	[%rd3+21], %rs22;
	ld.u8 	%rs23, [%rd4+9];
	st.u8 	[%rd3+22], %rs23;
	ld.u8 	%rs24, [%rd4+8];
	st.u8 	[%rd3+23], %rs24;
	ld.u8 	%rs25, [%rd4+7];
	st.u8 	[%rd3+24], %rs25;
	ld.u8 	%rs26, [%rd4+6];
	st.u8 	[%rd3+25], %rs26;
	ld.u8 	%rs27, [%rd4+5];
	st.u8 	[%rd3+26], %rs27;
	ld.u8 	%rs28, [%rd4+4];
	st.u8 	[%rd3+27], %rs28;
	ld.u8 	%rs29, [%rd4+3];
	st.u8 	[%rd3+28], %rs29;
	ld.u8 	%rs30, [%rd4+2];
	st.u8 	[%rd3+29], %rs30;
	ld.u8 	%rs31, [%rd4+1];
	st.u8 	[%rd3+30], %rs31;
	ld.u8 	%rs32, [%rd4];
	st.u8 	[%rd3+31], %rs32;
$L__BB19_3:
	ret;
                                        // -- End function
}
	// .globl	__simple_hash           // -- Begin function __simple_hash
.visible .func  (.param .b64 func_retval0) __simple_hash(
	.param .b64 __simple_hash_param_0
)                                       // @__simple_hash
{
	.reg .b64 	%rd<10>;

// %bb.0:
	ld.param.u64 	%rd1, [__simple_hash_param_0];
	shr.u64 	%rd2, %rd1, 30;
	xor.b64  	%rd3, %rd2, %rd1;
	mul.lo.s64 	%rd4, %rd3, -4658895280553007687;
	shr.u64 	%rd5, %rd4, 27;
	xor.b64  	%rd6, %rd5, %rd4;
	mul.lo.s64 	%rd7, %rd6, -7723592293110705685;
	shr.u64 	%rd8, %rd7, 31;
	xor.b64  	%rd9, %rd8, %rd7;
	st.param.b64 	[func_retval0+0], %rd9;
	ret;
                                        // -- End function
}
	// .globl	__hashint               // -- Begin function __hashint
.visible .func  (.param .b32 func_retval0) __hashint(
	.param .b32 __hashint_param_0,
	.param .b32 __hashint_param_1
)                                       // @__hashint
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<13>;

// %bb.0:
	ld.param.u32 	%rd1, [__hashint_param_1];
	ld.param.u32 	%rd2, [__hashint_param_0];
	shl.b64 	%rd3, %rd2, 32;
	or.b64  	%rd4, %rd3, %rd1;
	shr.u64 	%rd5, %rd4, 30;
	xor.b64  	%rd6, %rd5, %rd4;
	mul.lo.s64 	%rd7, %rd6, -4658895280553007687;
	shr.u64 	%rd8, %rd7, 27;
	xor.b64  	%rd9, %rd8, %rd7;
	mul.lo.s64 	%rd10, %rd9, -7723592293110705685;
	shr.u64 	%rd11, %rd10, 31;
	xor.b64  	%rd12, %rd11, %rd10;
	cvt.u32.u64 	%r1, %rd12;
	st.param.b32 	[func_retval0+0], %r1;
	ret;
                                        // -- End function
}
	// .globl	__hashword              // -- Begin function __hashword
.visible .func  (.param .b32 func_retval0) __hashword(
	.param .b64 __hashword_param_0
)                                       // @__hashword
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<88>;

// %bb.0:
	ld.param.u64 	%rd1, [__hashword_param_0];
	ld.u32 	%rd2, [%rd1];
	shr.u64 	%rd3, %rd2, 30;
	xor.b64  	%rd4, %rd3, %rd2;
	mul.lo.s64 	%rd5, %rd4, -4658895280553007687;
	shr.u64 	%rd6, %rd5, 27;
	xor.b64  	%rd7, %rd6, %rd5;
	mul.lo.s64 	%rd8, %rd7, -7723592293110705685;
	shr.u64 	%rd9, %rd8, 31;
	xor.b64  	%rd10, %rd9, %rd8;
	ld.u32 	%rd11, [%rd1+4];
	shl.b64 	%rd12, %rd10, 32;
	or.b64  	%rd13, %rd12, %rd11;
	shr.u64 	%rd14, %rd13, 30;
	xor.b64  	%rd15, %rd14, %rd13;
	mul.lo.s64 	%rd16, %rd15, -4658895280553007687;
	shr.u64 	%rd17, %rd16, 27;
	xor.b64  	%rd18, %rd17, %rd16;
	mul.lo.s64 	%rd19, %rd18, -7723592293110705685;
	shr.u64 	%rd20, %rd19, 31;
	xor.b64  	%rd21, %rd20, %rd19;
	ld.u32 	%rd22, [%rd1+8];
	shl.b64 	%rd23, %rd21, 32;
	or.b64  	%rd24, %rd23, %rd22;
	shr.u64 	%rd25, %rd24, 30;
	xor.b64  	%rd26, %rd25, %rd24;
	mul.lo.s64 	%rd27, %rd26, -4658895280553007687;
	shr.u64 	%rd28, %rd27, 27;
	xor.b64  	%rd29, %rd28, %rd27;
	mul.lo.s64 	%rd30, %rd29, -7723592293110705685;
	shr.u64 	%rd31, %rd30, 31;
	xor.b64  	%rd32, %rd31, %rd30;
	ld.u32 	%rd33, [%rd1+12];
	shl.b64 	%rd34, %rd32, 32;
	or.b64  	%rd35, %rd34, %rd33;
	shr.u64 	%rd36, %rd35, 30;
	xor.b64  	%rd37, %rd36, %rd35;
	mul.lo.s64 	%rd38, %rd37, -4658895280553007687;
	shr.u64 	%rd39, %rd38, 27;
	xor.b64  	%rd40, %rd39, %rd38;
	mul.lo.s64 	%rd41, %rd40, -7723592293110705685;
	shr.u64 	%rd42, %rd41, 31;
	xor.b64  	%rd43, %rd42, %rd41;
	ld.u32 	%rd44, [%rd1+16];
	shl.b64 	%rd45, %rd43, 32;
	or.b64  	%rd46, %rd45, %rd44;
	shr.u64 	%rd47, %rd46, 30;
	xor.b64  	%rd48, %rd47, %rd46;
	mul.lo.s64 	%rd49, %rd48, -4658895280553007687;
	shr.u64 	%rd50, %rd49, 27;
	xor.b64  	%rd51, %rd50, %rd49;
	mul.lo.s64 	%rd52, %rd51, -7723592293110705685;
	shr.u64 	%rd53, %rd52, 31;
	xor.b64  	%rd54, %rd53, %rd52;
	ld.u32 	%rd55, [%rd1+20];
	shl.b64 	%rd56, %rd54, 32;
	or.b64  	%rd57, %rd56, %rd55;
	shr.u64 	%rd58, %rd57, 30;
	xor.b64  	%rd59, %rd58, %rd57;
	mul.lo.s64 	%rd60, %rd59, -4658895280553007687;
	shr.u64 	%rd61, %rd60, 27;
	xor.b64  	%rd62, %rd61, %rd60;
	mul.lo.s64 	%rd63, %rd62, -7723592293110705685;
	shr.u64 	%rd64, %rd63, 31;
	xor.b64  	%rd65, %rd64, %rd63;
	ld.u32 	%rd66, [%rd1+24];
	shl.b64 	%rd67, %rd65, 32;
	or.b64  	%rd68, %rd67, %rd66;
	shr.u64 	%rd69, %rd68, 30;
	xor.b64  	%rd70, %rd69, %rd68;
	mul.lo.s64 	%rd71, %rd70, -4658895280553007687;
	shr.u64 	%rd72, %rd71, 27;
	xor.b64  	%rd73, %rd72, %rd71;
	mul.lo.s64 	%rd74, %rd73, -7723592293110705685;
	shr.u64 	%rd75, %rd74, 31;
	xor.b64  	%rd76, %rd75, %rd74;
	ld.u32 	%rd77, [%rd1+28];
	shl.b64 	%rd78, %rd76, 32;
	or.b64  	%rd79, %rd78, %rd77;
	shr.u64 	%rd80, %rd79, 30;
	xor.b64  	%rd81, %rd80, %rd79;
	mul.lo.s64 	%rd82, %rd81, -4658895280553007687;
	shr.u64 	%rd83, %rd82, 27;
	xor.b64  	%rd84, %rd83, %rd82;
	mul.lo.s64 	%rd85, %rd84, -7723592293110705685;
	shr.u64 	%rd86, %rd85, 31;
	xor.b64  	%rd87, %rd86, %rd85;
	cvt.u32.u64 	%r1, %rd87;
	st.param.b32 	[func_retval0+0], %r1;
	ret;
                                        // -- End function
}
	// .globl	__classify_counts       // -- Begin function __classify_counts
.visible .func __classify_counts(
	.param .b64 __classify_counts_param_0
)                                       // @__classify_counts
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<26>;
	// demoted variable
	.shared .align 1 .b8 count_class_lookup8[256];
// %bb.0:
	mov.u64 	%rd25, 0;
	ld.param.u64 	%rd5, [__classify_counts_param_0];
	mov.u64 	%rd10, count_class_lookup8;
$L__BB23_1:                             // =>This Inner Loop Header: Depth=1
	add.s64 	%rd2, %rd5, %rd25;
	ld.global.u64 	%rd3, [%rd2];
	setp.eq.s64 	%p1, %rd3, 0;
	@%p1 bra 	$L__BB23_3;
	bra.uni 	$L__BB23_2;
$L__BB23_3:                             //   in Loop: Header=BB23_1 Depth=1
	add.s64 	%rd25, %rd25, 8;
	cvt.u32.u64 	%r1, %rd25;
	setp.ne.s32 	%p2, %r1, 4096;
	@%p2 bra 	$L__BB23_1;
	bra.uni 	$L__BB23_4;
$L__BB23_2:                             //   in Loop: Header=BB23_1 Depth=1
	shr.u64 	%rd7, %rd3, 56;
	shr.u64 	%rd8, %rd3, 32;
	and.b64  	%rd9, %rd3, 255;
	add.s64 	%rd11, %rd10, %rd9;
	ld.shared.u8 	%rs1, [%rd11];
	st.global.u8 	[%rd2], %rs1;
	bfe.u64 	%rd12, %rd3, 8, 8;
	add.s64 	%rd13, %rd10, %rd12;
	ld.shared.u8 	%rs2, [%rd13];
	st.global.u8 	[%rd2+1], %rs2;
	bfe.u64 	%rd14, %rd3, 16, 8;
	add.s64 	%rd15, %rd10, %rd14;
	ld.shared.u8 	%rs3, [%rd15];
	st.global.u8 	[%rd2+2], %rs3;
	bfe.u64 	%rd16, %rd3, 24, 8;
	add.s64 	%rd17, %rd10, %rd16;
	ld.shared.u8 	%rs4, [%rd17];
	st.global.u8 	[%rd2+3], %rs4;
	and.b64  	%rd18, %rd8, 255;
	add.s64 	%rd19, %rd10, %rd18;
	ld.shared.u8 	%rs5, [%rd19];
	st.global.u8 	[%rd2+4], %rs5;
	bfe.u64 	%rd20, %rd3, 40, 8;
	add.s64 	%rd21, %rd10, %rd20;
	ld.shared.u8 	%rs6, [%rd21];
	st.global.u8 	[%rd2+5], %rs6;
	bfe.u64 	%rd22, %rd3, 48, 8;
	add.s64 	%rd23, %rd10, %rd22;
	ld.shared.u8 	%rs7, [%rd23];
	st.global.u8 	[%rd2+6], %rs7;
	add.s64 	%rd24, %rd10, %rd7;
	ld.shared.u8 	%rs8, [%rd24];
	st.global.u8 	[%rd2+7], %rs8;
	bra.uni 	$L__BB23_3;
$L__BB23_4:
	ret;
                                        // -- End function
}
	// .globl	__mv_new_bits           // -- Begin function __mv_new_bits
.visible .func __mv_new_bits(
	.param .b32 __mv_new_bits_param_0,
	.param .b64 __mv_new_bits_param_1,
	.param .b64 __mv_new_bits_param_2
)                                       // @__mv_new_bits
{
	.reg .pred 	%p<19>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<35>;
	.reg .b64 	%rd<38>;

// %bb.0:
	ld.param.u64 	%rd15, [__mv_new_bits_param_1];
	ld.param.u32 	%r8, [__mv_new_bits_param_0];
	setp.ne.s32 	%p1, %r8, 0;
	@%p1 bra 	$L__BB24_2;
// %bb.1:
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd15], %rs1;
$L__BB24_2:
	ld.param.u64 	%rd16, [__mv_new_bits_param_2];
	bar.sync 	0;
	shl.b32 	%r9, %r8, 3;
	cvt.u64.u32 	%rd18, %r9;
	mov.u64 	%rd19, __virgin_bits;
	add.s64 	%rd1, %rd19, %rd18;
	cvt.u64.u32 	%rd2, %r8;
	mov.u64 	%rd36, 0;
	mov.u64 	%rd20, __bitmaps;
	shl.b64 	%rd22, %rd2, 3;
$L__BB24_3:                             // =>This Inner Loop Header: Depth=1
	add.s64 	%rd4, %rd20, %rd36;
	ld.global.u64 	%rd21, [%rd4];
	add.s64 	%rd5, %rd21, %rd22;
	ld.global.u64 	%rd6, [%rd5];
	setp.eq.s64 	%p2, %rd6, 0;
	@%p2 bra 	$L__BB24_6;
	bra.uni 	$L__BB24_4;
$L__BB24_6:                             //   in Loop: Header=BB24_3 Depth=1
	mov.u64 	%rd37, 0;
	st.global.u64 	[%rd5], %rd37;
	ld.global.u64 	%rd27, [%rd4+8];
	add.s64 	%rd8, %rd27, %rd22;
	ld.global.u64 	%rd9, [%rd8];
	setp.eq.s64 	%p4, %rd9, 0;
	@%p4 bra 	$L__BB24_9;
	bra.uni 	$L__BB24_7;
$L__BB24_9:                             //   in Loop: Header=BB24_3 Depth=1
	st.global.u64 	[%rd8], %rd37;
	add.s64 	%rd36, %rd36, 16;
	setp.eq.s64 	%p6, %rd36, 2048;
	@%p6 bra 	$L__BB24_10;
	bra.uni 	$L__BB24_3;
$L__BB24_4:                             //   in Loop: Header=BB24_3 Depth=1
	ld.global.u64 	%rd23, [%rd1];
	and.b64  	%rd24, %rd23, %rd6;
	setp.eq.s64 	%p3, %rd24, 0;
	@%p3 bra 	$L__BB24_6;
// %bb.5:                               //   in Loop: Header=BB24_3 Depth=1
	not.b64 	%rd25, %rd6;
	and.b64  	%rd7, %rd23, %rd25;
	st.global.u64 	[%rd1], %rd7;
	ld.global.u8 	%rs2, [%rd15];
	or.b16  	%rs3, %rs2, 1;
	st.global.u8 	[%rd15], %rs3;
	bra.uni 	$L__BB24_6;
$L__BB24_7:                             //   in Loop: Header=BB24_3 Depth=1
	ld.global.u64 	%rd29, [%rd1];
	and.b64  	%rd30, %rd29, %rd9;
	setp.eq.s64 	%p5, %rd30, 0;
	@%p5 bra 	$L__BB24_9;
// %bb.8:                               //   in Loop: Header=BB24_3 Depth=1
	not.b64 	%rd31, %rd9;
	and.b64  	%rd12, %rd29, %rd31;
	st.global.u64 	[%rd1], %rd12;
	ld.global.u8 	%rs4, [%rd15];
	or.b16  	%rs5, %rs4, 1;
	st.global.u8 	[%rd15], %rs5;
	bra.uni 	$L__BB24_9;
$L__BB24_10:
	bar.sync 	0;
	@%p1 bra 	$L__BB24_18;
// %bb.11:                              // %.preheader
	mov.u32 	%r33, 0;
	mov.u64 	%rd34, __cov_bits;
	bra.uni 	$L__BB24_12;
$L__BB24_16:                            //   in Loop: Header=BB24_12 Depth=1
	add.s64 	%rd37, %rd37, 8;
	cvt.u32.u64 	%r31, %rd37;
	setp.eq.s32 	%p18, %r31, 4096;
	@%p18 bra 	$L__BB24_17;
$L__BB24_12:                            // =>This Inner Loop Header: Depth=1
	add.s64 	%rd11, %rd34, %rd37;
	ld.global.u32 	%r2, [%rd11];
	setp.eq.s32 	%p8, %r2, -1;
	@%p8 bra 	$L__BB24_14;
// %bb.13:                              //   in Loop: Header=BB24_12 Depth=1
	and.b32  	%r11, %r2, 255;
	setp.ne.s32 	%p9, %r11, 255;
	selp.u32 	%r12, 1, 0, %p9;
	and.b32  	%r13, %r2, 65280;
	setp.ne.s32 	%p10, %r13, 65280;
	selp.u32 	%r14, 1, 0, %p10;
	and.b32  	%r15, %r2, 16711680;
	setp.ne.s32 	%p11, %r15, 16711680;
	selp.u32 	%r16, 1, 0, %p11;
	setp.lt.u32 	%p12, %r2, -16777216;
	selp.u32 	%r17, 1, 0, %p12;
	add.s32 	%r18, %r33, %r17;
	add.s32 	%r19, %r18, %r12;
	add.s32 	%r20, %r19, %r14;
	add.s32 	%r33, %r20, %r16;
$L__BB24_14:                            //   in Loop: Header=BB24_12 Depth=1
	ld.global.u32 	%r5, [%rd11+4];
	setp.eq.s32 	%p13, %r5, -1;
	@%p13 bra 	$L__BB24_16;
// %bb.15:                              //   in Loop: Header=BB24_12 Depth=1
	and.b32  	%r21, %r5, 255;
	setp.ne.s32 	%p14, %r21, 255;
	selp.u32 	%r22, 1, 0, %p14;
	and.b32  	%r23, %r5, 65280;
	setp.ne.s32 	%p15, %r23, 65280;
	selp.u32 	%r24, 1, 0, %p15;
	and.b32  	%r25, %r5, 16711680;
	setp.ne.s32 	%p16, %r25, 16711680;
	selp.u32 	%r26, 1, 0, %p16;
	setp.lt.u32 	%p17, %r5, -16777216;
	selp.u32 	%r27, 1, 0, %p17;
	add.s32 	%r28, %r33, %r27;
	add.s32 	%r29, %r28, %r22;
	add.s32 	%r30, %r29, %r24;
	add.s32 	%r33, %r30, %r26;
	bra.uni 	$L__BB24_16;
$L__BB24_17:
	cvt.u64.u32 	%rd35, %r33;
	st.global.u64 	[%rd16], %rd35;
$L__BB24_18:
	ret;
                                        // -- End function
}
	// .globl	addBugSet               // -- Begin function addBugSet
.visible .func addBugSet(
	.param .b32 addBugSet_param_0,
	.param .b32 addBugSet_param_1,
	.param .b32 addBugSet_param_2
)                                       // @addBugSet
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<12>;

// %bb.0:
	ld.param.u8 	%rs1, [addBugSet_param_1];
	setp.eq.s16 	%p1, %rs1, 0;
	@%p1 bra 	$L__BB25_3;
// %bb.1:
	ld.global.u64 	%rd1, [__signals];
	add.s64 	%rd2, %rd1, 1;
	setp.gt.u64 	%p2, %rd2, 256;
	@%p2 bra 	$L__BB25_3;
// %bb.2:
	ld.param.u32 	%r2, [addBugSet_param_2];
	ld.param.u32 	%r1, [addBugSet_param_0];
	st.global.u64 	[__signals], %rd2;
	mov.u64 	%rd3, __signals;
	shl.b32 	%r3, %r1, 8;
	cvt.u64.u32 	%rd4, %r3;
	cvt.u64.u16 	%rd5, %rs1;
	or.b64  	%rd6, %rd4, %rd5;
	shl.b64 	%rd7, %rd6, 32;
	cvt.u64.u32 	%rd8, %r2;
	or.b64  	%rd9, %rd7, %rd8;
	shl.b64 	%rd10, %rd1, 3;
	add.s64 	%rd11, %rd3, %rd10;
	st.global.u64 	[%rd11+8], %rd9;
$L__BB25_3:
	ret;
                                        // -- End function
}
	// .globl	randInit                // -- Begin function randInit
.visible .func  (.param .b32 func_retval0) randInit(
	.param .b32 randInit_param_0
)                                       // @randInit
{
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;

// %bb.0:
	ld.param.u32 	%r1, [randInit_param_0];
	ld.const.u32 	%r2, [Rand];
	xor.b32  	%r3, %r2, %r1;
	cvt.u64.u32 	%rd1, %r3;
	shr.u64 	%rd2, %rd1, 30;
	xor.b64  	%rd3, %rd2, %rd1;
	mul.lo.s64 	%rd4, %rd3, -4658895280553007687;
	shr.u64 	%rd5, %rd4, 27;
	xor.b64  	%rd6, %rd5, %rd4;
	mul.lo.s64 	%rd7, %rd6, -7723592293110705685;
	shr.u64 	%rd8, %rd7, 31;
	xor.b64  	%rd9, %rd8, %rd7;
	cvt.u32.u64 	%r4, %rd9;
	st.param.b32 	[func_retval0+0], %r4;
	ret;
                                        // -- End function
}
	// .globl	randInt                 // -- Begin function randInt
.visible .func  (.param .b32 func_retval0) randInt(
	.param .b64 randInt_param_0,
	.param .b32 randInt_param_1
)                                       // @randInt
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<11>;

// %bb.0:
	ld.param.u64 	%rd1, [randInt_param_0];
	ld.u32 	%rd2, [%rd1];
	ld.param.u32 	%r1, [randInt_param_1];
	shr.u64 	%rd3, %rd2, 30;
	xor.b64  	%rd4, %rd3, %rd2;
	mul.lo.s64 	%rd5, %rd4, -4658895280553007687;
	shr.u64 	%rd6, %rd5, 27;
	xor.b64  	%rd7, %rd6, %rd5;
	mul.lo.s64 	%rd8, %rd7, -7723592293110705685;
	shr.u64 	%rd9, %rd8, 31;
	xor.b64  	%rd10, %rd9, %rd8;
	cvt.u32.u64 	%r2, %rd10;
	st.u32 	[%rd1], %r2;
	rem.u32 	%r3, %r2, %r1;
	st.param.b32 	[func_retval0+0], %r3;
	ret;
                                        // -- End function
}
	// .globl	pickBoundaryByte        // -- Begin function pickBoundaryByte
.visible .func  (.param .b32 func_retval0) pickBoundaryByte(
	.param .b64 pickBoundaryByte_param_0
)                                       // @pickBoundaryByte
{
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<14>;

// %bb.0:
	ld.param.u64 	%rd1, [pickBoundaryByte_param_0];
	ld.u32 	%rd2, [%rd1];
	shr.u64 	%rd3, %rd2, 30;
	xor.b64  	%rd4, %rd3, %rd2;
	mul.lo.s64 	%rd5, %rd4, -4658895280553007687;
	shr.u64 	%rd6, %rd5, 27;
	xor.b64  	%rd7, %rd6, %rd5;
	mul.lo.s64 	%rd8, %rd7, -7723592293110705685;
	shr.u64 	%rd9, %rd8, 31;
	xor.b64  	%rd10, %rd9, %rd8;
	cvt.u32.u64 	%r1, %rd10;
	st.u32 	[%rd1], %r1;
	mul.hi.u32 	%r2, %r1, 954437177;
	shr.u32 	%r3, %r2, 1;
	mul.lo.s32 	%r4, %r3, 9;
	sub.s32 	%r5, %r1, %r4;
	cvt.u64.u32 	%rd11, %r5;
	mov.u64 	%rd12, MAGIC;
	add.s64 	%rd13, %rd12, %rd11;
	ld.const.u8 	%r6, [%rd13];
	st.param.b32 	[func_retval0+0], %r6;
	ret;
                                        // -- End function
}
	// .globl	pickBoundaryIntBytes    // -- Begin function pickBoundaryIntBytes
.visible .func pickBoundaryIntBytes(
	.param .b64 pickBoundaryIntBytes_param_0,
	.param .b32 pickBoundaryIntBytes_param_1,
	.param .b64 pickBoundaryIntBytes_param_2
)                                       // @pickBoundaryIntBytes
{
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<7>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<27>;

// %bb.0:
	ld.param.u32 	%r1, [pickBoundaryIntBytes_param_1];
	setp.lt.u32 	%p1, %r1, 2;
	@%p1 bra 	$L__BB29_4;
// %bb.1:
	ld.param.u64 	%rd7, [pickBoundaryIntBytes_param_2];
	ld.param.u64 	%rd6, [pickBoundaryIntBytes_param_0];
	ld.u32 	%rd9, [%rd7];
	shr.u64 	%rd10, %rd9, 30;
	xor.b64  	%rd11, %rd10, %rd9;
	mul.lo.s64 	%rd12, %rd11, -4658895280553007687;
	shr.u64 	%rd13, %rd12, 27;
	xor.b64  	%rd14, %rd13, %rd12;
	mul.lo.s64 	%rd15, %rd14, -7723592293110705685;
	shr.u64 	%rd16, %rd15, 31;
	xor.b64  	%rd17, %rd16, %rd15;
	cvt.u32.u64 	%r2, %rd17;
	st.u32 	[%rd7], %r2;
	mul.hi.u32 	%r3, %r2, 954437177;
	shr.u32 	%r4, %r3, 1;
	mul.lo.s32 	%r5, %r4, 9;
	sub.s32 	%r6, %r2, %r5;
	cvt.u64.u32 	%rd1, %r6;
	mov.u64 	%rd18, __const_$_pickBoundaryIntBytes_$_heads;
	add.s64 	%rd19, %rd18, %rd1;
	ld.global.nc.u8 	%rs2, [%rd19];
	cvt.u16.u8 	%rs3, %rs2;
	st.u8 	[%rd6], %rs3;
	add.s64 	%rd2, %rd6, 1;
	mov.u64 	%rd20, __const_$_pickBoundaryIntBytes_$_mids;
	add.s64 	%rd21, %rd20, %rd1;
	ld.global.nc.u8 	%rs4, [%rd21];
	cvt.u16.u8 	%rs1, %rs4;
	add.s32 	%r7, %r1, -2;
	cvt.u64.u32 	%rd3, %r7;
	setp.eq.s32 	%p2, %r7, 0;
	mov.u64 	%rd26, 0;
	@%p2 bra 	$L__BB29_3;
$L__BB29_2:                             // %loadstoreloop
                                        // =>This Inner Loop Header: Depth=1
	add.s64 	%rd22, %rd2, %rd26;
	st.u8 	[%rd22], %rs1;
	add.s64 	%rd26, %rd26, 1;
	setp.lt.u64 	%p3, %rd26, %rd3;
	@%p3 bra 	$L__BB29_2;
$L__BB29_3:                             // %split
	mov.u64 	%rd23, __const_$_pickBoundaryIntBytes_$_tails;
	add.s64 	%rd24, %rd23, %rd1;
	ld.global.nc.u8 	%rs5, [%rd24];
	cvt.u16.u8 	%rs6, %rs5;
	add.s64 	%rd25, %rd6, %rd3;
	st.u8 	[%rd25], %rs6;
$L__BB29_4:
	ret;
                                        // -- End function
}
	// .globl	__mutateCalldata        // -- Begin function __mutateCalldata
.visible .func __mutateCalldata(
	.param .b64 __mutateCalldata_param_0,
	.param .b32 __mutateCalldata_param_1
)                                       // @__mutateCalldata
{
	.reg .pred 	%p<7>;
	.reg .b16 	%rs<19>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<47>;

// %bb.0:
	ld.param.u32 	%r1, [__mutateCalldata_param_1];
	setp.eq.s32 	%p1, %r1, 0;
	@%p1 bra 	$L__BB30_9;
// %bb.1:
	ld.const.u8 	%rs5, [argTypeMap];
	mul.lo.s16 	%rs6, %rs5, 27;
	shr.u16 	%rs7, %rs6, 9;
	mul.lo.s16 	%rs8, %rs7, 19;
	sub.s16 	%rs1, %rs5, %rs8;
	and.b16  	%rs9, %rs1, 255;
	setp.eq.s16 	%p2, %rs9, 0;
	@%p2 bra 	$L__BB30_9;
// %bb.2:
	ld.param.u64 	%rd8, [__mutateCalldata_param_0];
	cvt.u32.u16 	%r4, %rs1;
	and.b32  	%r5, %r4, 255;
	rem.u32 	%r6, %r1, %r5;
	cvt.u64.u32 	%rd17, %r6;
	mov.u64 	%rd18, argTypeMap;
	add.s64 	%rd19, %rd18, %rd17;
	ld.const.u8 	%rs2, [%rd19+1];
	shl.b32 	%r7, %r6, 5;
	cvt.u64.u32 	%rd20, %r7;
	add.s64 	%rd21, %rd8, %rd20;
	add.s64 	%rd2, %rd21, 4;
	setp.gt.u16 	%p3, %rs2, 63;
	@%p3 bra 	$L__BB30_8;
// %bb.3:
	ld.const.u32 	%r2, [Rand];
	xor.b32  	%r3, %r2, %r1;
	cvt.u64.u32 	%rd9, %r3;
	shr.u64 	%rd10, %rd9, 30;
	xor.b64  	%rd11, %rd10, %rd9;
	mul.lo.s64 	%rd12, %rd11, -4658895280553007687;
	shr.u64 	%rd13, %rd12, 27;
	xor.b64  	%rd14, %rd13, %rd12;
	mul.lo.s64 	%rd15, %rd14, -7723592293110705685;
	shr.u64 	%rd16, %rd15, 31;
	xor.b64  	%rd1, %rd16, %rd15;
	and.b16  	%rs3, %rs2, 31;
	setp.ne.s16 	%p4, %rs3, 0;
	and.b64  	%rd24, %rd1, 4294967295;
	bfe.u64 	%rd25, %rd1, 30, 2;
	xor.b64  	%rd26, %rd25, %rd24;
	mul.lo.s64 	%rd27, %rd26, -4658895280553007687;
	shr.u64 	%rd28, %rd27, 27;
	xor.b64  	%rd29, %rd28, %rd27;
	mul.lo.s64 	%rd30, %rd29, -7723592293110705685;
	shr.u64 	%rd31, %rd30, 31;
	xor.b64  	%rd32, %rd31, %rd30;
	cvt.u32.u64 	%r12, %rd32;
	mul.hi.u32 	%r13, %r12, 954437177;
	shr.u32 	%r14, %r13, 1;
	mul.lo.s32 	%r15, %r14, 9;
	sub.s32 	%r16, %r12, %r15;
	cvt.u64.u32 	%rd3, %r16;
	@%p4 bra 	$L__BB30_5;
	bra.uni 	$L__BB30_4;
$L__BB30_5:
	mov.u64 	%rd34, __const_$_pickBoundaryIntBytes_$_heads;
	add.s64 	%rd35, %rd34, %rd3;
	ld.global.nc.u8 	%rs13, [%rd35];
	cvt.u16.u8 	%rs14, %rs13;
	st.u8 	[%rd2], %rs14;
	add.s64 	%rd4, %rd2, 1;
	mov.u64 	%rd36, __const_$_pickBoundaryIntBytes_$_mids;
	add.s64 	%rd37, %rd36, %rd3;
	ld.global.nc.u8 	%rs15, [%rd37];
	cvt.u16.u8 	%rs4, %rs15;
	cvt.u64.u16 	%rd38, %rs3;
	add.s64 	%rd39, %rd38, -1;
	and.b64  	%rd5, %rd39, 4294967295;
	setp.eq.s64 	%p5, %rd5, 0;
	mov.u64 	%rd46, 0;
	@%p5 bra 	$L__BB30_7;
$L__BB30_6:                             // %loadstoreloop
                                        // =>This Inner Loop Header: Depth=1
	add.s64 	%rd40, %rd4, %rd46;
	st.u8 	[%rd40], %rs4;
	add.s64 	%rd46, %rd46, 1;
	setp.lt.u64 	%p6, %rd46, %rd5;
	@%p6 bra 	$L__BB30_6;
$L__BB30_7:                             // %split
	mov.u64 	%rd41, __const_$_pickBoundaryIntBytes_$_tails;
	add.s64 	%rd42, %rd41, %rd3;
	ld.global.nc.u8 	%rs16, [%rd42];
	cvt.u16.u8 	%rs17, %rs16;
	add.s64 	%rd43, %rd2, %rd5;
	st.u8 	[%rd43], %rs17;
	bra.uni 	$L__BB30_9;
$L__BB30_8:
	and.b32  	%r8, %r1, 7;
	mov.u32 	%r9, 128;
	shr.u32 	%r10, %r9, %r8;
	bfe.u32 	%r11, %r1, 3, 2;
	cvt.u64.u32 	%rd22, %r11;
	add.s64 	%rd23, %rd2, %rd22;
	ld.u8 	%rs10, [%rd23];
	cvt.u16.u32 	%rs11, %r10;
	xor.b16  	%rs12, %rs10, %rs11;
	st.u8 	[%rd23], %rs12;
	bra.uni 	$L__BB30_9;
$L__BB30_4:
	mov.u64 	%rd44, MAGIC;
	add.s64 	%rd45, %rd44, %rd3;
	ld.const.u8 	%rs18, [%rd45];
	st.u8 	[%rd2], %rs18;
$L__BB30_9:
	ret;
                                        // -- End function
}
