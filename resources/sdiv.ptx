//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	contract                // -- Begin function contract
.extern .func  (.param .b64 func_retval0) malloc
(
	.param .b64 malloc_param_0
)
;
.func  (.param .b32 func_retval0) solidity_call
()
;
.extern .func free
(
	.param .b64 free_param_0
)
;
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.visible .func keccak256
(
	.param .b64 keccak256_param_0,
	.param .b32 keccak256_param_1,
	.param .b64 keccak256_param_2
)
;
.visible .func hash
(
	.param .b64 hash_param_0,
	.param .b64 hash_param_1,
	.param .b64 hash_param_2,
	.param .b64 hash_param_3,
	.param .b64 hash_param_4,
	.param .b32 hash_param_5
)
;
.visible .func __device_calldataload
(
	.param .b64 __device_calldataload_param_0,
	.param .b64 __device_calldataload_param_1,
	.param .b64 __device_calldataload_param_2
)
;
.visible .func mutateCaller
(
	.param .b64 mutateCaller_param_0
)
;
.visible .func mutateCallvalue
(
	.param .b64 mutateCallvalue_param_0
)
;
.visible .func mutateCalldata
(
	.param .b64 mutateCalldata_param_0,
	.param .b32 mutateCalldata_param_1
)
;
.visible .func cuhavoc
(
	.param .b64 cuhavoc_param_0,
	.param .b32 cuhavoc_param_1
)
;
.visible .const .align 1 .b8 __evmCode[32769] = {96, 23, 96, 12, 96, 0, 57, 96, 23, 96, 0, 243, 96, 0, 96, 0, 96, 0, 96, 0, 96, 0, 96, 4, 53, 97, 1, 0, 1, 98, 255, 255, 255, 241, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
.visible .const .align 4 .u32 __evmCodeSize = 35;
.extern .global .align 4 .b8 __debug_pcs[32384];
.visible .global .align 4 .u32 __debug_pc;
.extern .global .align 4 .b8 __debug_stack_sizes[32384];
.extern .global .align 16 .b8 __debug_stack_tops[259072];
.global .align 1 .b8 __const_$_printbytes_$_hexmap[16] = {48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102};
.global .align 1 .b8 _$_str[19] = {37, 115, 46, 32, 104, 101, 120, 32, 98, 121, 116, 101, 115, 58, 32, 37, 115, 10, 0};
.visible .const .align 8 .u64 cuTimestamp;
.visible .global .align 8 .u64 __signals;
.visible .global .align 1 .b8 __hnbs[1];
.extern .global .align 8 .b8 l1snaps[8192];
.extern .global .align 1 .b8 l1snap_lens[1];
// count_class_lookup8 has been demoted
.visible .global .align 1 .b8 __virgin_bits[4096];
.visible .global .align 8 .b8 __bitmaps[8];
.global .align 1 .b8 _$_str1[48] = {98, 117, 103, 59, 32, 116, 97, 114, 103, 101, 116, 32, 104, 105, 116, 32, 97, 116, 32, 116, 104, 114, 101, 97, 100, 35, 37, 100, 46, 32, 95, 95, 104, 110, 98, 115, 91, 116, 105, 100, 93, 32, 61, 32, 37, 100, 10, 0};
.visible .global .align 1 .b8 __cov_bits[4096];
.global .align 8 .b8 RC[192] = {1, 0, 0, 0, 0, 0, 0, 0, 130, 128, 0, 0, 0, 0, 0, 0, 138, 128, 0, 0, 0, 0, 0, 128, 0, 128, 0, 128, 0, 0, 0, 128, 139, 128, 0, 0, 0, 0, 0, 0, 1, 0, 0, 128, 0, 0, 0, 0, 129, 128, 0, 128, 0, 0, 0, 128, 9, 128, 0, 0, 0, 0, 0, 128, 138, 0, 0, 0, 0, 0, 0, 0, 136, 0, 0, 0, 0, 0, 0, 0, 9, 128, 0, 128, 0, 0, 0, 0, 10, 0, 0, 128, 0, 0, 0, 0, 139, 128, 0, 128, 0, 0, 0, 0, 139, 0, 0, 0, 0, 0, 0, 128, 137, 128, 0, 0, 0, 0, 0, 128, 3, 128, 0, 0, 0, 0, 0, 128, 2, 128, 0, 0, 0, 0, 0, 128, 128, 0, 0, 0, 0, 0, 0, 128, 10, 128, 0, 0, 0, 0, 0, 0, 10, 0, 0, 128, 0, 0, 0, 128, 129, 128, 0, 128, 0, 0, 0, 128, 128, 128, 0, 0, 0, 0, 0, 128, 1, 0, 0, 128, 0, 0, 0, 0, 8, 128, 0, 128, 0, 0, 0, 128};
.visible .global .align 4 .b8 cuda_states[4];
.visible .global .align 4 .u32 cbconstants_length;
.visible .global .align 4 .u32 callers_pool_len;
.visible .global .align 4 .u32 addresses_pool_len;
.visible .global .align 1 .b8 addresses_pool[2048];
.visible .global .align 1 .b8 callers_pool[2048];
.visible .global .align 1 .b8 argTypeMap[64];
.const .align 1 .b8 interesting_8[9] = {128, 255, 0, 1, 16, 32, 64, 100, 127};
.const .align 2 .b8 interesting_16[38] = {128, 255, 255, 255, 0, 0, 1, 0, 16, 0, 32, 0, 64, 0, 100, 0, 127, 0, 0, 128, 127, 255, 128, 0, 255, 0, 0, 1, 0, 2, 232, 3, 0, 4, 0, 16, 255, 127};
.const .align 4 .b8 interesting_32[108] = {128, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 16, 0, 0, 0, 32, 0, 0, 0, 64, 0, 0, 0, 100, 0, 0, 0, 127, 0, 0, 0, 0, 128, 255, 255, 127, 255, 255, 255, 128, 0, 0, 0, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 232, 3, 0, 0, 0, 4, 0, 0, 0, 16, 0, 0, 255, 127, 0, 0, 0, 0, 0, 128, 250, 0, 0, 250, 255, 127, 255, 255, 0, 128, 0, 0, 255, 255, 0, 0, 0, 0, 1, 0, 5, 255, 255, 5, 255, 255, 255, 127};
.visible .global .align 1 .b8 cbconstants[65536];
.visible .global .align 1 .b8 cbconstant_sizes[2048];
.extern .global .align 4 .b8 __snap_map[4];
.extern .global .align 1 .b8 l2snap_lens[32];
.extern .global .align 8 .b8 l2snaps[262144];
                                        // @contract
.visible .func  (.param .b32 func_retval0) contract(
	.param .b64 contract_param_0,
	.param .b64 contract_param_1,
	.param .b64 contract_param_2,
	.param .b32 contract_param_3,
	.param .b64 contract_param_4
)
{
	.local .align 8 .b8 	__local_depot0[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<8>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<37>;
	.reg .b64 	%rd<112>;

// %bb.0:                               // %Entry
	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	mov.u64 	%rd1, 728;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd1;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64 	%rd2, [retval0+0];
	} // callseq 0
	mov.u64 	%rd4, 8192;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd4;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64 	%rd5, [retval0+0];
	} // callseq 1
	ld.param.u64 	%rd7, [contract_param_2];
	ld.param.u64 	%rd8, [contract_param_4];
	mov.u16 	%rs1, 1;
	st.global.u8 	[%rd8+1383], %rs1;
	ld.global.u32 	%r1, [__debug_pc];
	mul.wide.s32 	%rd9, %r1, 4;
	mov.u64 	%rd10, __debug_pcs;
	add.s64 	%rd11, %rd10, %rd9;
	mov.u32 	%r2, 0;
	st.global.u32 	[%rd11], %r2;
	mov.u64 	%rd12, __debug_stack_sizes;
	add.s64 	%rd13, %rd12, %rd9;
	st.global.u32 	[%rd13], %r2;
	mul.wide.s32 	%rd14, %r1, 32;
	mov.u64 	%rd15, __debug_stack_tops;
	add.s64 	%rd16, %rd15, %rd14;
	mov.u64 	%rd17, 0;
	st.global.u32 	[%rd16+28], %rd17;
	st.global.u32 	[%rd16+24], %rd17;
	st.global.u32 	[%rd16+20], %rd17;
	st.global.u32 	[%rd16+16], %rd17;
	st.global.u32 	[%rd16+12], %rd17;
	st.global.u32 	[%rd16+8], %rd17;
	st.global.u32 	[%rd16+4], %rd17;
	st.global.u32 	[%rd16], %rd17;
	add.s32 	%r3, %r1, 1;
	st.global.u32 	[__debug_pc], %r3;
	mul.wide.s32 	%rd18, %r3, 4;
	add.s64 	%rd19, %rd10, %rd18;
	mov.u32 	%r4, 2;
	st.global.u32 	[%rd19], %r4;
	add.s64 	%rd20, %rd12, %rd18;
	mov.u32 	%r5, 1;
	st.global.u32 	[%rd20], %r5;
	mul.wide.s32 	%rd21, %r3, 32;
	add.s64 	%rd22, %rd15, %rd21;
	st.global.u32 	[%rd22+28], %rd17;
	st.global.u32 	[%rd22+24], %rd17;
	st.global.u32 	[%rd22+20], %rd17;
	st.global.u32 	[%rd22+16], %rd17;
	st.global.u32 	[%rd22+12], %rd17;
	st.global.u32 	[%rd22+8], %rd17;
	st.global.u32 	[%rd22+4], %rd17;
	st.global.u32 	[%rd22], %rd17;
	add.s32 	%r6, %r1, 2;
	st.global.u32 	[__debug_pc], %r6;
	mul.wide.s32 	%rd23, %r6, 4;
	add.s64 	%rd24, %rd10, %rd23;
	mov.u32 	%r7, 4;
	st.global.u32 	[%rd24], %r7;
	add.s64 	%rd25, %rd12, %rd23;
	st.global.u32 	[%rd25], %r4;
	mul.wide.s32 	%rd26, %r6, 32;
	add.s64 	%rd27, %rd15, %rd26;
	st.global.u32 	[%rd27+28], %rd17;
	st.global.u32 	[%rd27+24], %rd17;
	st.global.u32 	[%rd27+20], %rd17;
	st.global.u32 	[%rd27+16], %rd17;
	st.global.u32 	[%rd27+12], %rd17;
	st.global.u32 	[%rd27+8], %rd17;
	st.global.u32 	[%rd27+4], %rd17;
	st.global.u32 	[%rd27], %rd17;
	add.s32 	%r8, %r1, 3;
	st.global.u32 	[__debug_pc], %r8;
	mul.wide.s32 	%rd28, %r8, 4;
	add.s64 	%rd29, %rd10, %rd28;
	mov.u32 	%r9, 6;
	st.global.u32 	[%rd29], %r9;
	add.s64 	%rd30, %rd12, %rd28;
	mov.u32 	%r10, 3;
	st.global.u32 	[%rd30], %r10;
	mul.wide.s32 	%rd31, %r8, 32;
	add.s64 	%rd32, %rd15, %rd31;
	st.global.u32 	[%rd32+28], %rd17;
	st.global.u32 	[%rd32+24], %rd17;
	st.global.u32 	[%rd32+20], %rd17;
	st.global.u32 	[%rd32+16], %rd17;
	st.global.u32 	[%rd32+12], %rd17;
	st.global.u32 	[%rd32+8], %rd17;
	st.global.u32 	[%rd32+4], %rd17;
	st.global.u32 	[%rd32], %rd17;
	add.s32 	%r11, %r1, 4;
	st.global.u32 	[__debug_pc], %r11;
	mul.wide.s32 	%rd33, %r11, 4;
	add.s64 	%rd34, %rd10, %rd33;
	mov.u32 	%r12, 8;
	st.global.u32 	[%rd34], %r12;
	add.s64 	%rd35, %rd12, %rd33;
	st.global.u32 	[%rd35], %r7;
	mul.wide.s32 	%rd36, %r11, 32;
	add.s64 	%rd37, %rd15, %rd36;
	st.global.u32 	[%rd37+28], %rd17;
	st.global.u32 	[%rd37+24], %rd17;
	st.global.u32 	[%rd37+20], %rd17;
	st.global.u32 	[%rd37+16], %rd17;
	st.global.u32 	[%rd37+12], %rd17;
	st.global.u32 	[%rd37+8], %rd17;
	st.global.u32 	[%rd37+4], %rd17;
	st.global.u32 	[%rd37], %rd17;
	add.s32 	%r13, %r1, 5;
	st.global.u32 	[__debug_pc], %r13;
	mul.wide.s32 	%rd38, %r13, 4;
	add.s64 	%rd39, %rd10, %rd38;
	mov.u32 	%r14, 10;
	st.global.u32 	[%rd39], %r14;
	add.s64 	%rd40, %rd12, %rd38;
	mov.u32 	%r15, 5;
	st.global.u32 	[%rd40], %r15;
	mul.wide.s32 	%rd41, %r13, 32;
	add.s64 	%rd42, %rd15, %rd41;
	st.global.u32 	[%rd42+28], %rd17;
	st.global.u32 	[%rd42+24], %rd17;
	st.global.u32 	[%rd42+20], %rd17;
	st.global.u32 	[%rd42+16], %rd17;
	st.global.u32 	[%rd42+12], %rd17;
	st.global.u32 	[%rd42+8], %rd17;
	st.global.u32 	[%rd42+4], %rd17;
	st.global.u32 	[%rd42], %rd17;
	add.s32 	%r16, %r1, 6;
	st.global.u32 	[__debug_pc], %r16;
	mul.wide.s32 	%rd43, %r16, 4;
	add.s64 	%rd44, %rd10, %rd43;
	mov.u32 	%r17, 12;
	st.global.u32 	[%rd44], %r17;
	add.s64 	%rd45, %rd12, %rd43;
	st.global.u32 	[%rd45], %r9;
	mul.wide.s32 	%rd46, %r16, 32;
	add.s64 	%rd47, %rd15, %rd46;
	st.global.u32 	[%rd47+28], %rd17;
	st.global.u32 	[%rd47+24], %rd17;
	st.global.u32 	[%rd47+20], %rd17;
	st.global.u32 	[%rd47+16], %rd17;
	st.global.u32 	[%rd47+12], %rd17;
	st.global.u32 	[%rd47+8], %rd17;
	st.global.u32 	[%rd47+4], %rd17;
	mov.u64 	%rd48, 4;
	st.global.u32 	[%rd47], %rd48;
	add.s32 	%r18, %r1, 7;
	st.global.u32 	[__debug_pc], %r18;
	add.u64 	%rd49, %SP, 0;
	add.u64 	%rd50, %SPL, 0;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd49;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd48;
	call.uni 
	__device_calldataload, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 2
	ld.local.u32 	%rd51, [%rd50+24];
	ld.local.u32 	%rd52, [%rd50+28];
	shl.b64 	%rd53, %rd52, 32;
	or.b64  	%rd54, %rd53, %rd51;
	ld.local.u32 	%rd55, [%rd50+16];
	ld.local.u32 	%rd56, [%rd50+20];
	shl.b64 	%rd57, %rd56, 32;
	or.b64  	%rd58, %rd57, %rd55;
	ld.local.u32 	%rd59, [%rd50+8];
	ld.local.u32 	%rd60, [%rd50+12];
	shl.b64 	%rd61, %rd60, 32;
	or.b64  	%rd62, %rd61, %rd59;
	ld.local.u32 	%rd63, [%rd50];
	ld.local.u32 	%rd64, [%rd50+4];
	shl.b64 	%rd65, %rd64, 32;
	or.b64  	%rd66, %rd65, %rd63;
	ld.global.u32 	%r19, [__debug_pc];
	mul.wide.s32 	%rd67, %r19, 4;
	add.s64 	%rd68, %rd10, %rd67;
	mov.u32 	%r20, 13;
	st.global.u32 	[%rd68], %r20;
	add.s64 	%rd69, %rd12, %rd67;
	st.global.u32 	[%rd69], %r9;
	mul.wide.s32 	%rd70, %r19, 32;
	add.s64 	%rd71, %rd15, %rd70;
	st.global.u32 	[%rd71+28], %rd52;
	st.global.u32 	[%rd71+24], %rd51;
	st.global.u32 	[%rd71+20], %rd56;
	st.global.u32 	[%rd71+16], %rd55;
	st.global.u32 	[%rd71+12], %rd60;
	st.global.u32 	[%rd71+8], %rd59;
	st.global.u32 	[%rd71+4], %rd64;
	st.global.u32 	[%rd71], %rd63;
	add.s32 	%r21, %r19, 1;
	st.global.u32 	[__debug_pc], %r21;
	mul.wide.s32 	%rd72, %r21, 4;
	add.s64 	%rd73, %rd10, %rd72;
	mov.u32 	%r22, 16;
	st.global.u32 	[%rd73], %r22;
	add.s64 	%rd74, %rd12, %rd72;
	mov.u32 	%r23, 7;
	st.global.u32 	[%rd74], %r23;
	mul.wide.s32 	%rd75, %r21, 32;
	add.s64 	%rd76, %rd15, %rd75;
	st.global.u32 	[%rd76+28], %rd17;
	st.global.u32 	[%rd76+24], %rd17;
	st.global.u32 	[%rd76+20], %rd17;
	st.global.u32 	[%rd76+16], %rd17;
	st.global.u32 	[%rd76+12], %rd17;
	st.global.u32 	[%rd76+8], %rd17;
	st.global.u32 	[%rd76+4], %rd17;
	mov.u64 	%rd77, 256;
	st.global.u32 	[%rd76], %rd77;
	add.s32 	%r24, %r19, 2;
	st.global.u32 	[__debug_pc], %r24;
	add.s64 	%rd78, %rd66, 256;
	setp.lt.u64 	%p1, %rd78, %rd66;
	selp.u32 	%r25, -1, 0, %p1;
	selp.u64 	%rd79, 1, 0, %p1;
	setp.lt.u64 	%p2, %rd78, 256;
	selp.b64 	%rd80, 1, %rd79, %p2;
	setp.eq.s64 	%p3, %rd80, 0;
	add.s64 	%rd81, %rd62, %rd80;
	setp.lt.u64 	%p4, %rd81, %rd62;
	selp.u32 	%r26, -1, 0, %p4;
	selp.b32 	%r27, %r25, %r26, %p3;
	cvt.u64.u32 	%rd82, %r27;
	and.b64  	%rd83, %rd82, 1;
	selp.b64 	%rd84, 1, %rd83, %p2;
	setp.eq.s64 	%p5, %rd81, 0;
	selp.b64 	%rd85, %rd84, %rd83, %p5;
	add.s64 	%rd86, %rd58, %rd85;
	setp.lt.u64 	%p6, %rd86, %rd85;
	setp.lt.u64 	%p7, %rd86, %rd58;
	selp.u64 	%rd87, 1, 0, %p7;
	selp.b64 	%rd88, 1, %rd87, %p6;
	add.s64 	%rd89, %rd54, %rd88;
	mul.wide.s32 	%rd90, %r24, 4;
	add.s64 	%rd91, %rd10, %rd90;
	mov.u32 	%r28, 17;
	st.global.u32 	[%rd91], %r28;
	add.s64 	%rd92, %rd12, %rd90;
	st.global.u32 	[%rd92], %r9;
	mul.wide.s32 	%rd93, %r24, 32;
	add.s64 	%rd94, %rd15, %rd93;
	shr.u64 	%rd95, %rd81, 32;
	st.global.u32 	[%rd94+12], %rd95;
	st.global.u32 	[%rd94+8], %rd81;
	shr.u64 	%rd96, %rd78, 32;
	st.global.u32 	[%rd94+4], %rd96;
	st.global.u32 	[%rd94], %rd78;
	st.global.u32 	[%rd94+16], %rd86;
	shr.u64 	%rd97, %rd86, 32;
	st.global.u32 	[%rd94+20], %rd97;
	st.global.u32 	[%rd94+24], %rd89;
	shr.u64 	%rd98, %rd89, 32;
	st.global.u32 	[%rd94+28], %rd98;
	add.s32 	%r29, %r19, 3;
	st.global.u32 	[__debug_pc], %r29;
	mul.wide.s32 	%rd99, %r29, 4;
	add.s64 	%rd100, %rd10, %rd99;
	mov.u32 	%r30, 21;
	st.global.u32 	[%rd100], %r30;
	add.s64 	%rd101, %rd12, %rd99;
	st.global.u32 	[%rd101], %r23;
	mul.wide.s32 	%rd102, %r29, 32;
	add.s64 	%rd103, %rd15, %rd102;
	st.global.u32 	[%rd103+28], %rd17;
	st.global.u32 	[%rd103+24], %rd17;
	st.global.u32 	[%rd103+20], %rd17;
	st.global.u32 	[%rd103+16], %rd17;
	st.global.u32 	[%rd103+12], %rd17;
	st.global.u32 	[%rd103+8], %rd17;
	st.global.u32 	[%rd103+4], %rd17;
	mov.u64 	%rd104, 16777215;
	st.global.u32 	[%rd103], %rd104;
	add.s32 	%r31, %r19, 4;
	st.global.u32 	[__debug_pc], %r31;
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .b32 retval0;
	call.uni (retval0), 
	solidity_call, 
	(
	);
	ld.param.b32 	%r32, [retval0+0];
	} // callseq 3
	ld.global.u32 	%r34, [__debug_pc];
	mul.wide.s32 	%rd105, %r34, 4;
	add.s64 	%rd106, %rd10, %rd105;
	mov.u32 	%r35, 22;
	st.global.u32 	[%rd106], %r35;
	add.s64 	%rd107, %rd12, %rd105;
	st.global.u32 	[%rd107], %r5;
	cvt.u64.u32 	%rd108, %r32;
	and.b64  	%rd109, %rd108, 1;
	mul.wide.s32 	%rd110, %r34, 32;
	add.s64 	%rd111, %rd15, %rd110;
	st.global.u32 	[%rd111+28], %rd17;
	st.global.u32 	[%rd111+24], %rd17;
	st.global.u32 	[%rd111+20], %rd17;
	st.global.u32 	[%rd111+16], %rd17;
	st.global.u32 	[%rd111+12], %rd17;
	st.global.u32 	[%rd111+8], %rd17;
	st.global.u32 	[%rd111+4], %rd17;
	st.global.u32 	[%rd111], %rd109;
	add.s32 	%r36, %r34, 1;
	st.global.u32 	[__debug_pc], %r36;
	st.u32 	[%rd5+60], %rd17;
	st.u32 	[%rd5+56], %rd17;
	st.u32 	[%rd5+52], %rd17;
	st.u32 	[%rd5+48], %rd17;
	st.u32 	[%rd5+44], %rd17;
	st.u32 	[%rd5+40], %rd17;
	st.u32 	[%rd5+36], %rd17;
	st.u32 	[%rd5+32], %rd109;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd2;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd5;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 5
	st.param.b32 	[func_retval0+0], %r5;
	ret;
                                        // -- End function
}
.func  (.param .b32 func_retval0) solidity_call() // -- Begin function solidity_call
                                        // @solidity_call
{
	.reg .b32 	%r<2>;

// %bb.0:                               // %entry
	mov.u32 	%r1, 1;
	st.param.b32 	[func_retval0+0], %r1;
	ret;
                                        // -- End function
}
	// .globl	rand                    // -- Begin function rand
.visible .func  (.param .b32 func_retval0) rand() // @rand
{
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<4>;

// %bb.0:
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %ntid.x;
	mad.lo.s32 	%r4, %r3, %r2, %r1;
	mul.wide.u32 	%rd1, %r4, 4;
	mov.u64 	%rd2, cuda_states;
	add.s64 	%rd3, %rd2, %rd1;
	ld.global.u32 	%r5, [%rd3];
	mad.lo.s32 	%r6, %r5, 1103515245, 12345;
	mad.lo.s32 	%r7, %r6, 1103515245, 12345;
	shr.u32 	%r8, %r6, 6;
	and.b32  	%r9, %r8, 2096128;
	bfe.u32 	%r10, %r7, 16, 10;
	or.b32  	%r11, %r10, %r9;
	mad.lo.s32 	%r12, %r7, 1103515245, 12345;
	shl.b32 	%r13, %r11, 10;
	bfe.u32 	%r14, %r12, 16, 10;
	or.b32  	%r15, %r13, %r14;
	st.global.u32 	[%rd3], %r12;
	st.param.b32 	[func_retval0+0], %r15;
	ret;
                                        // -- End function
}
	// .globl	bytesToString           // -- Begin function bytesToString
.visible .func bytesToString(
	.param .b64 bytesToString_param_0,
	.param .b64 bytesToString_param_1,
	.param .b32 bytesToString_param_2
)                                       // @bytesToString
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<23>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<35>;

// %bb.0:
	ld.param.u32 	%r6, [bytesToString_param_2];
	ld.param.u64 	%rd4, [bytesToString_param_0];
	setp.eq.s32 	%p1, %r6, 0;
	@%p1 bra 	LBB3_6;
// %bb.1:
	ld.param.u64 	%rd5, [bytesToString_param_1];
	and.b32  	%r1, %r6, 1;
	setp.eq.s32 	%p2, %r6, 1;
	mov.u32 	%r13, 0;
	mov.u64 	%rd33, __const_$_printbytes_$_hexmap;
	@%p2 bra 	LBB3_4;
// %bb.2:
	cvt.u64.u32 	%rd7, %r6;
	and.b64  	%rd1, %rd7, 4294967294;
	mov.u32 	%r14, 2;
	mov.u64 	%rd34, 0;
LBB3_3:                                 // =>This Inner Loop Header: Depth=1
	add.s64 	%rd8, %rd5, %rd34;
	ld.u8 	%rs1, [%rd8];
	and.b16  	%rs2, %rs1, 15;
	cvt.u64.u16 	%rd9, %rs2;
	add.s64 	%rd11, %rd33, %rd9;
	ld.global.nc.u8 	%rs3, [%rd11];
	cvt.u16.u8 	%rs4, %rs3;
	add.s32 	%r9, %r14, -2;
	cvt.u64.u32 	%rd12, %r9;
	add.s64 	%rd13, %rd4, %rd12;
	st.u8 	[%rd13+1], %rs4;
	shr.u16 	%rs5, %rs1, 4;
	cvt.u64.u16 	%rd14, %rs5;
	add.s64 	%rd15, %rd33, %rd14;
	ld.global.nc.u8 	%rs6, [%rd15];
	cvt.u16.u8 	%rs7, %rs6;
	st.u8 	[%rd13], %rs7;
	ld.u8 	%rs8, [%rd8+1];
	and.b16  	%rs9, %rs8, 15;
	cvt.u64.u16 	%rd16, %rs9;
	add.s64 	%rd17, %rd33, %rd16;
	ld.global.nc.u8 	%rs10, [%rd17];
	cvt.u16.u8 	%rs11, %rs10;
	cvt.u64.u32 	%rd18, %r14;
	add.s64 	%rd19, %rd4, %rd18;
	st.u8 	[%rd19+1], %rs11;
	shr.u16 	%rs12, %rs8, 4;
	cvt.u64.u16 	%rd20, %rs12;
	add.s64 	%rd21, %rd33, %rd20;
	ld.global.nc.u8 	%rs13, [%rd21];
	cvt.u16.u8 	%rs14, %rs13;
	st.u8 	[%rd19], %rs14;
	add.s32 	%r14, %r14, 4;
	add.s64 	%rd34, %rd34, 2;
	cvt.u32.u64 	%r13, %rd34;
	cvt.u32.u64 	%r10, %rd1;
	setp.eq.s32 	%p3, %r10, %r13;
	@%p3 bra 	LBB3_4;
	bra.uni 	LBB3_3;
LBB3_4:
	setp.eq.s32 	%p4, %r1, 0;
	@%p4 bra 	LBB3_6;
// %bb.5:
	cvt.u64.u32 	%rd22, %r13;
	add.s64 	%rd23, %rd5, %rd22;
	ld.u8 	%rs15, [%rd23];
	and.b16  	%rs16, %rs15, 15;
	cvt.u64.u16 	%rd24, %rs16;
	add.s64 	%rd26, %rd33, %rd24;
	ld.global.nc.u8 	%rs17, [%rd26];
	cvt.u16.u8 	%rs18, %rs17;
	shl.b32 	%r11, %r13, 1;
	cvt.u64.u32 	%rd27, %r11;
	add.s64 	%rd28, %rd4, %rd27;
	st.u8 	[%rd28+1], %rs18;
	shr.u16 	%rs19, %rs15, 4;
	cvt.u64.u16 	%rd29, %rs19;
	add.s64 	%rd30, %rd33, %rd29;
	ld.global.nc.u8 	%rs20, [%rd30];
	cvt.u16.u8 	%rs21, %rs20;
	st.u8 	[%rd28], %rs21;
LBB3_6:
	shl.b32 	%r12, %r6, 1;
	cvt.u64.u32 	%rd31, %r12;
	add.s64 	%rd32, %rd4, %rd31;
	mov.u16 	%rs22, 0;
	st.u8 	[%rd32], %rs22;
	ret;
                                        // -- End function
}
	// .globl	printbytes              // -- Begin function printbytes
.visible .func printbytes(
	.param .b64 printbytes_param_0,
	.param .b64 printbytes_param_1,
	.param .b32 printbytes_param_2
)                                       // @printbytes
{
	.local .align 8 .b8 	__local_depot4[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<23>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<41>;

// %bb.0:
	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u32 	%r7, [printbytes_param_2];
	ld.param.u64 	%rd6, [printbytes_param_0];
	add.u64 	%rd8, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	shl.b32 	%r1, %r7, 1;
	or.b32  	%r8, %r1, 1;
	cvt.u64.u32 	%rd9, %r8;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd9;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64 	%rd10, [retval0+0];
	} // callseq 6
	setp.eq.s32 	%p1, %r7, 0;
	@%p1 bra 	LBB4_6;
// %bb.1:
	ld.param.u64 	%rd7, [printbytes_param_1];
	and.b32  	%r2, %r7, 1;
	setp.eq.s32 	%p2, %r7, 1;
	mov.u32 	%r16, 0;
	mov.u64 	%rd39, __const_$_printbytes_$_hexmap;
	@%p2 bra 	LBB4_4;
// %bb.2:
	cvt.u64.u32 	%rd12, %r7;
	and.b64  	%rd3, %rd12, 4294967294;
	mov.u32 	%r17, 2;
	mov.u64 	%rd40, 0;
LBB4_3:                                 // =>This Inner Loop Header: Depth=1
	add.s64 	%rd13, %rd7, %rd40;
	ld.u8 	%rs1, [%rd13];
	and.b16  	%rs2, %rs1, 15;
	cvt.u64.u16 	%rd14, %rs2;
	add.s64 	%rd16, %rd39, %rd14;
	ld.global.nc.u8 	%rs3, [%rd16];
	cvt.u16.u8 	%rs4, %rs3;
	add.s32 	%r11, %r17, -2;
	cvt.u64.u32 	%rd17, %r11;
	add.s64 	%rd18, %rd10, %rd17;
	shr.u16 	%rs5, %rs1, 4;
	cvt.u64.u16 	%rd19, %rs5;
	add.s64 	%rd20, %rd39, %rd19;
	ld.global.nc.u8 	%rs6, [%rd20];
	cvt.u16.u8 	%rs7, %rs6;
	ld.u8 	%rs8, [%rd13+1];
	and.b16  	%rs9, %rs8, 15;
	cvt.u64.u16 	%rd21, %rs9;
	add.s64 	%rd22, %rd39, %rd21;
	ld.global.nc.u8 	%rs10, [%rd22];
	cvt.u16.u8 	%rs11, %rs10;
	shr.u16 	%rs12, %rs8, 4;
	cvt.u64.u16 	%rd23, %rs12;
	add.s64 	%rd24, %rd39, %rd23;
	ld.global.nc.u8 	%rs13, [%rd24];
	cvt.u16.u8 	%rs14, %rs13;
	st.v4.u8 	[%rd18], {%rs7, %rs4, %rs14, %rs11};
	add.s32 	%r17, %r17, 4;
	add.s64 	%rd40, %rd40, 2;
	cvt.u32.u64 	%r16, %rd40;
	cvt.u32.u64 	%r12, %rd3;
	setp.eq.s32 	%p3, %r12, %r16;
	@%p3 bra 	LBB4_4;
	bra.uni 	LBB4_3;
LBB4_4:
	setp.eq.s32 	%p4, %r2, 0;
	@%p4 bra 	LBB4_6;
// %bb.5:
	cvt.u64.u32 	%rd25, %r16;
	add.s64 	%rd26, %rd7, %rd25;
	ld.u8 	%rs15, [%rd26];
	and.b16  	%rs16, %rs15, 15;
	cvt.u64.u16 	%rd27, %rs16;
	add.s64 	%rd29, %rd39, %rd27;
	ld.global.nc.u8 	%rs17, [%rd29];
	cvt.u16.u8 	%rs18, %rs17;
	shl.b32 	%r13, %r16, 1;
	cvt.u64.u32 	%rd30, %r13;
	add.s64 	%rd31, %rd10, %rd30;
	shr.u16 	%rs19, %rs15, 4;
	cvt.u64.u16 	%rd32, %rs19;
	add.s64 	%rd33, %rd39, %rd32;
	ld.global.nc.u8 	%rs20, [%rd33];
	cvt.u16.u8 	%rs21, %rs20;
	st.v2.u8 	[%rd31], {%rs21, %rs18};
LBB4_6:
	cvt.u64.u32 	%rd34, %r1;
	add.s64 	%rd35, %rd10, %rd34;
	mov.u16 	%rs22, 0;
	st.u8 	[%rd35], %rs22;
	st.local.u64 	[%rd1], %rd6;
	st.local.u64 	[%rd1+8], %rd10;
	mov.u64 	%rd36, _$_str;
	cvta.global.u64 	%rd37, %rd36;
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd37;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd8;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r14, [retval0+0];
	} // callseq 7
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd10;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 8
	ret;
                                        // -- End function
}
	// .globl	__clear_bitmap          // -- Begin function __clear_bitmap
.visible .func __clear_bitmap(
	.param .b64 __clear_bitmap_param_0
)                                       // @__clear_bitmap
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<8>;

// %bb.0:
	mov.u64 	%rd4, 0;
	ld.param.u64 	%rd3, [__clear_bitmap_param_0];
	mov.u64 	%rd7, %rd4;
LBB5_1:                                 // =>This Inner Loop Header: Depth=1
	add.s64 	%rd5, %rd3, %rd7;
	st.global.u64 	[%rd5], %rd4;
	st.global.u64 	[%rd5+8], %rd4;
	st.global.u64 	[%rd5+16], %rd4;
	st.global.u64 	[%rd5+24], %rd4;
	st.global.u64 	[%rd5+32], %rd4;
	st.global.u64 	[%rd5+40], %rd4;
	st.global.u64 	[%rd5+48], %rd4;
	st.global.u64 	[%rd5+56], %rd4;
	st.global.u64 	[%rd5+64], %rd4;
	st.global.u64 	[%rd5+72], %rd4;
	st.global.u64 	[%rd5+80], %rd4;
	st.global.u64 	[%rd5+88], %rd4;
	st.global.u64 	[%rd5+96], %rd4;
	st.global.u64 	[%rd5+104], %rd4;
	st.global.u64 	[%rd5+112], %rd4;
	st.global.u64 	[%rd5+120], %rd4;
	add.s64 	%rd7, %rd7, 128;
	cvt.u32.u64 	%r1, %rd7;
	setp.ne.s32 	%p1, %r1, 4096;
	@%p1 bra 	LBB5_1;
// %bb.2:
	ret;
                                        // -- End function
}
	// .globl	__device_sha3           // -- Begin function __device_sha3
.visible .func __device_sha3(
	.param .b64 __device_sha3_param_0,
	.param .b32 __device_sha3_param_1,
	.param .b64 __device_sha3_param_2
)                                       // @__device_sha3
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<3>;

// %bb.0:
	ld.param.u64 	%rd1, [__device_sha3_param_0];
	ld.param.u32 	%r1, [__device_sha3_param_1];
	ld.param.u64 	%rd2, [__device_sha3_param_2];
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd1;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r1;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd2;
	call.uni 
	keccak256, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 9
	ret;
                                        // -- End function
}
	// .globl	keccak256               // -- Begin function keccak256
.visible .func keccak256(
	.param .b64 keccak256_param_0,
	.param .b32 keccak256_param_1,
	.param .b64 keccak256_param_2
)                                       // @keccak256
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<6>;

// %bb.0:
	ld.param.u64 	%rd1, [keccak256_param_0];
	ld.param.u32 	%rd2, [keccak256_param_1];
	ld.param.u64 	%rd3, [keccak256_param_2];
	mov.u64 	%rd4, 32;
	mov.u64 	%rd5, 136;
	mov.u32 	%r1, 1;
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd4;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd1;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd2;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd5;
	.param .b32 param5;
	st.param.b32 	[param5+0], %r1;
	call.uni 
	hash, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	} // callseq 10
	ret;
                                        // -- End function
}
	// .globl	hash                    // -- Begin function hash
.visible .func hash(
	.param .b64 hash_param_0,
	.param .b64 hash_param_1,
	.param .b64 hash_param_2,
	.param .b64 hash_param_3,
	.param .b64 hash_param_4,
	.param .b32 hash_param_5
)                                       // @hash
{
	.local .align 8 .b8 	__local_depot8[200];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<36>;
	.reg .b16 	%rs<97>;
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<1003>;

// %bb.0:
	mov.u64 	%SPL, __local_depot8;
	ld.param.u64 	%rd375, [hash_param_4];
	ld.param.u64 	%rd901, [hash_param_3];
	add.u64 	%rd1, %SPL, 0;
	mov.u64 	%rd817, 0;
	mov.pred 	%p1, 0;
	mov.u16 	%rs94, 0;
	@%p1 bra 	LBB8_2;
LBB8_1:                                 // %loadstoreloop
                                        // =>This Inner Loop Header: Depth=1
	add.s64 	%rd378, %rd1, %rd817;
	st.local.u8 	[%rd378], %rs94;
	add.s64 	%rd817, %rd817, 1;
	setp.lt.u64 	%p2, %rd817, 200;
	@%p2 bra 	LBB8_1;
LBB8_2:                                 // %split
	ld.param.u8 	%rs7, [hash_param_5];
	ld.param.u64 	%rd900, [hash_param_2];
	setp.lt.u64 	%p3, %rd901, %rd375;
	add.s64 	%rd813, %rd375, -1;
	mov.u64 	%rd814, RC;
	@%p3 bra 	LBB8_17;
// %bb.3:
	mov.u64 	%rd815, 1;
	add.s64 	%rd6, %rd375, -2;
	and.b64  	%rd7, %rd813, 7;
	and.b64  	%rd8, %rd813, -8;
	add.s64 	%rd9, %rd1, 4;
	mov.u64 	%rd873, 0;
	setp.eq.s64 	%p4, %rd375, 0;
	setp.eq.s64 	%p5, %rd375, 1;
	setp.lt.u64 	%p6, %rd6, 7;
	setp.eq.s64 	%p8, %rd7, 0;
	mov.u64 	%rd872, %rd873;
	mov.u64 	%rd871, %rd873;
	mov.u64 	%rd870, %rd873;
	mov.u64 	%rd869, %rd873;
	mov.u64 	%rd868, %rd873;
	mov.u64 	%rd867, %rd873;
	mov.u64 	%rd866, %rd873;
	mov.u64 	%rd865, %rd873;
	mov.u64 	%rd864, %rd873;
	mov.u64 	%rd863, %rd873;
	mov.u64 	%rd862, %rd873;
	mov.u64 	%rd861, %rd873;
	mov.u64 	%rd860, %rd873;
	mov.u64 	%rd859, %rd873;
	mov.u64 	%rd858, %rd873;
	mov.u64 	%rd857, %rd873;
	mov.u64 	%rd856, %rd873;
	mov.u64 	%rd855, %rd873;
	mov.u64 	%rd854, %rd873;
	mov.u64 	%rd853, %rd873;
	mov.u64 	%rd852, %rd873;
	mov.u64 	%rd851, %rd873;
	mov.u64 	%rd850, %rd873;
	mov.u64 	%rd849, %rd873;
LBB8_4:                                 // =>This Loop Header: Depth=1
                                        //     Child Loop BB8_8 Depth 2
                                        //     Child Loop BB8_12 Depth 2
                                        //     Child Loop BB8_15 Depth 2
	@%p4 bra 	LBB8_14;
// %bb.5:                               //   in Loop: Header=BB8_4 Depth=1
	ld.u8 	%rs10, [%rd900];
	xor.b16  	%rs11, %rs94, %rs10;
	st.local.u8 	[%rd1], %rs11;
	@%p5 bra 	LBB8_13;
// %bb.6:                               //   in Loop: Header=BB8_4 Depth=1
	mov.u64 	%rd847, %rd815;
	@%p6 bra 	LBB8_10;
// %bb.7:                               // %.preheader15
                                        //   in Loop: Header=BB8_4 Depth=1
	mov.u64 	%rd845, 0;
LBB8_8:                                 //   Parent Loop BB8_4 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd383, %rd9, %rd845;
	ld.local.u8 	%rs12, [%rd383+-3];
	add.s64 	%rd384, %rd900, %rd845;
	ld.u8 	%rs13, [%rd384+1];
	xor.b16  	%rs14, %rs12, %rs13;
	st.local.u8 	[%rd383+-3], %rs14;
	ld.local.u8 	%rs15, [%rd383+-2];
	ld.u8 	%rs16, [%rd384+2];
	xor.b16  	%rs17, %rs15, %rs16;
	st.local.u8 	[%rd383+-2], %rs17;
	ld.local.u8 	%rs18, [%rd383+-1];
	ld.u8 	%rs19, [%rd384+3];
	xor.b16  	%rs20, %rs18, %rs19;
	st.local.u8 	[%rd383+-1], %rs20;
	ld.local.u8 	%rs21, [%rd383];
	ld.u8 	%rs22, [%rd384+4];
	xor.b16  	%rs23, %rs21, %rs22;
	st.local.u8 	[%rd383], %rs23;
	ld.local.u8 	%rs24, [%rd383+1];
	ld.u8 	%rs25, [%rd384+5];
	xor.b16  	%rs26, %rs24, %rs25;
	st.local.u8 	[%rd383+1], %rs26;
	ld.local.u8 	%rs27, [%rd383+2];
	ld.u8 	%rs28, [%rd384+6];
	xor.b16  	%rs29, %rs27, %rs28;
	st.local.u8 	[%rd383+2], %rs29;
	ld.local.u8 	%rs30, [%rd383+3];
	ld.u8 	%rs31, [%rd384+7];
	xor.b16  	%rs32, %rs30, %rs31;
	st.local.u8 	[%rd383+3], %rs32;
	ld.local.u8 	%rs33, [%rd383+4];
	ld.u8 	%rs34, [%rd384+8];
	xor.b16  	%rs35, %rs33, %rs34;
	st.local.u8 	[%rd383+4], %rs35;
	add.s64 	%rd845, %rd845, 8;
	setp.ne.s64 	%p7, %rd8, %rd845;
	@%p7 bra 	LBB8_8;
// %bb.9:                               // %.loopexit16
                                        //   in Loop: Header=BB8_4 Depth=1
	add.s64 	%rd847, %rd845, 1;
LBB8_10:                                //   in Loop: Header=BB8_4 Depth=1
	@%p8 bra 	LBB8_13;
// %bb.11:                              // %.preheader13
                                        //   in Loop: Header=BB8_4 Depth=1
	mov.u64 	%rd848, %rd7;
LBB8_12:                                //   Parent Loop BB8_4 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	add.s64 	%rd385, %rd1, %rd847;
	ld.local.u8 	%rs36, [%rd385];
	add.s64 	%rd386, %rd900, %rd847;
	ld.u8 	%rs37, [%rd386];
	xor.b16  	%rs38, %rs36, %rs37;
	st.local.u8 	[%rd385], %rs38;
	add.s64 	%rd847, %rd847, 1;
	add.s64 	%rd848, %rd848, -1;
	setp.ne.s64 	%p9, %rd848, 0;
	@%p9 bra 	LBB8_12;
LBB8_13:                                //   in Loop: Header=BB8_4 Depth=1
	ld.local.u64 	%rd849, [%rd1];
	ld.local.u64 	%rd850, [%rd1+40];
	ld.local.u64 	%rd851, [%rd1+80];
	ld.local.u64 	%rd852, [%rd1+120];
	ld.local.u64 	%rd853, [%rd1+160];
	ld.local.u64 	%rd854, [%rd1+8];
	ld.local.u64 	%rd855, [%rd1+48];
	ld.local.u64 	%rd856, [%rd1+88];
	ld.local.u64 	%rd857, [%rd1+128];
	ld.local.u64 	%rd858, [%rd1+168];
	ld.local.u64 	%rd859, [%rd1+16];
	ld.local.u64 	%rd860, [%rd1+56];
	ld.local.u64 	%rd861, [%rd1+96];
	ld.local.u64 	%rd862, [%rd1+136];
	ld.local.u64 	%rd863, [%rd1+176];
	ld.local.u64 	%rd864, [%rd1+24];
	ld.local.u64 	%rd865, [%rd1+64];
	ld.local.u64 	%rd866, [%rd1+104];
	ld.local.u64 	%rd867, [%rd1+144];
	ld.local.u64 	%rd868, [%rd1+184];
	ld.local.u64 	%rd869, [%rd1+32];
	ld.local.u64 	%rd870, [%rd1+72];
	ld.local.u64 	%rd871, [%rd1+112];
	ld.local.u64 	%rd872, [%rd1+152];
	ld.local.u64 	%rd873, [%rd1+192];
LBB8_14:                                //   in Loop: Header=BB8_4 Depth=1
	mov.u64 	%rd874, 0;
LBB8_15:                                //   Parent Loop BB8_4 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	xor.b64  	%rd388, %rd850, %rd849;
	xor.b64  	%rd389, %rd388, %rd851;
	xor.b64  	%rd390, %rd389, %rd852;
	xor.b64  	%rd391, %rd390, %rd853;
	xor.b64  	%rd392, %rd855, %rd854;
	xor.b64  	%rd393, %rd392, %rd856;
	xor.b64  	%rd394, %rd393, %rd857;
	xor.b64  	%rd395, %rd394, %rd858;
	xor.b64  	%rd396, %rd860, %rd859;
	xor.b64  	%rd397, %rd396, %rd861;
	xor.b64  	%rd398, %rd397, %rd862;
	xor.b64  	%rd399, %rd398, %rd863;
	xor.b64  	%rd400, %rd865, %rd864;
	xor.b64  	%rd401, %rd400, %rd866;
	xor.b64  	%rd402, %rd401, %rd867;
	xor.b64  	%rd403, %rd402, %rd868;
	xor.b64  	%rd404, %rd870, %rd869;
	xor.b64  	%rd405, %rd404, %rd871;
	xor.b64  	%rd406, %rd405, %rd872;
	xor.b64  	%rd407, %rd406, %rd873;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd395, 1;
	shr.b64 	%rhs, %rd395, 63;
	add.u64 	%rd408, %lhs, %rhs;
	}
	xor.b64  	%rd409, %rd407, %rd408;
	xor.b64  	%rd410, %rd409, %rd849;
	xor.b64  	%rd411, %rd409, %rd850;
	xor.b64  	%rd412, %rd409, %rd851;
	xor.b64  	%rd413, %rd409, %rd852;
	xor.b64  	%rd414, %rd409, %rd853;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd399, 1;
	shr.b64 	%rhs, %rd399, 63;
	add.u64 	%rd415, %lhs, %rhs;
	}
	xor.b64  	%rd416, %rd415, %rd391;
	xor.b64  	%rd417, %rd416, %rd854;
	xor.b64  	%rd418, %rd416, %rd855;
	xor.b64  	%rd419, %rd416, %rd856;
	xor.b64  	%rd420, %rd416, %rd857;
	xor.b64  	%rd421, %rd416, %rd858;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd403, 1;
	shr.b64 	%rhs, %rd403, 63;
	add.u64 	%rd422, %lhs, %rhs;
	}
	xor.b64  	%rd423, %rd422, %rd395;
	xor.b64  	%rd424, %rd423, %rd859;
	xor.b64  	%rd425, %rd423, %rd860;
	xor.b64  	%rd426, %rd423, %rd861;
	xor.b64  	%rd427, %rd423, %rd862;
	xor.b64  	%rd428, %rd423, %rd863;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd407, 1;
	shr.b64 	%rhs, %rd407, 63;
	add.u64 	%rd429, %lhs, %rhs;
	}
	xor.b64  	%rd430, %rd429, %rd399;
	xor.b64  	%rd431, %rd430, %rd864;
	xor.b64  	%rd432, %rd430, %rd865;
	xor.b64  	%rd433, %rd430, %rd866;
	xor.b64  	%rd434, %rd430, %rd867;
	xor.b64  	%rd435, %rd430, %rd868;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd391, 1;
	shr.b64 	%rhs, %rd391, 63;
	add.u64 	%rd436, %lhs, %rhs;
	}
	xor.b64  	%rd437, %rd403, %rd436;
	xor.b64  	%rd438, %rd437, %rd869;
	xor.b64  	%rd439, %rd870, %rd437;
	xor.b64  	%rd440, %rd871, %rd437;
	xor.b64  	%rd441, %rd872, %rd437;
	xor.b64  	%rd442, %rd873, %rd437;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd417, 1;
	shr.b64 	%rhs, %rd417, 63;
	add.u64 	%rd443, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd412, 3;
	shr.b64 	%rhs, %rd412, 61;
	add.u64 	%rd444, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd425, 6;
	shr.b64 	%rhs, %rd425, 58;
	add.u64 	%rd445, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd419, 10;
	shr.b64 	%rhs, %rd419, 54;
	add.u64 	%rd446, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd427, 15;
	shr.b64 	%rhs, %rd427, 49;
	add.u64 	%rd447, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd434, 21;
	shr.b64 	%rhs, %rd434, 43;
	add.u64 	%rd448, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd431, 28;
	shr.b64 	%rhs, %rd431, 36;
	add.u64 	%rd449, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd411, 36;
	shr.b64 	%rhs, %rd411, 28;
	add.u64 	%rd450, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd420, 45;
	shr.b64 	%rhs, %rd420, 19;
	add.u64 	%rd451, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd432, 55;
	shr.b64 	%rhs, %rd432, 9;
	add.u64 	%rd452, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd421, 2;
	shr.b64 	%rhs, %rd421, 62;
	add.u64 	%rd453, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd442, 14;
	shr.b64 	%rhs, %rd442, 50;
	add.u64 	%rd454, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd438, 27;
	shr.b64 	%rhs, %rd438, 37;
	add.u64 	%rd455, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd413, 41;
	shr.b64 	%rhs, %rd413, 23;
	add.u64 	%rd456, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd435, 56;
	shr.b64 	%rhs, %rd435, 8;
	add.u64 	%rd457, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd441, 8;
	shr.b64 	%rhs, %rd441, 56;
	add.u64 	%rd458, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd433, 25;
	shr.b64 	%rhs, %rd433, 39;
	add.u64 	%rd459, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd426, 43;
	shr.b64 	%rhs, %rd426, 21;
	add.u64 	%rd460, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd424, 62;
	shr.b64 	%rhs, %rd424, 2;
	add.u64 	%rd461, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd414, 18;
	shr.b64 	%rhs, %rd414, 46;
	add.u64 	%rd462, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd440, 39;
	shr.b64 	%rhs, %rd440, 25;
	add.u64 	%rd463, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd428, 61;
	shr.b64 	%rhs, %rd428, 3;
	add.u64 	%rd464, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd439, 20;
	shr.b64 	%rhs, %rd439, 44;
	add.u64 	%rd465, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd418, 44;
	shr.b64 	%rhs, %rd418, 20;
	add.u64 	%rd466, %lhs, %rhs;
	}
	not.b64 	%rd467, %rd466;
	and.b64  	%rd468, %rd460, %rd467;
	not.b64 	%rd469, %rd460;
	and.b64  	%rd470, %rd448, %rd469;
	xor.b64  	%rd854, %rd470, %rd466;
	not.b64 	%rd471, %rd448;
	and.b64  	%rd472, %rd454, %rd471;
	xor.b64  	%rd859, %rd472, %rd460;
	not.b64 	%rd473, %rd454;
	and.b64  	%rd474, %rd410, %rd473;
	xor.b64  	%rd864, %rd448, %rd474;
	not.b64 	%rd475, %rd410;
	and.b64  	%rd476, %rd466, %rd475;
	xor.b64  	%rd869, %rd476, %rd454;
	not.b64 	%rd477, %rd465;
	and.b64  	%rd478, %rd444, %rd477;
	xor.b64  	%rd850, %rd449, %rd478;
	not.b64 	%rd479, %rd444;
	and.b64  	%rd480, %rd451, %rd479;
	xor.b64  	%rd855, %rd480, %rd465;
	not.b64 	%rd481, %rd451;
	and.b64  	%rd482, %rd464, %rd481;
	xor.b64  	%rd860, %rd444, %rd482;
	not.b64 	%rd483, %rd464;
	and.b64  	%rd484, %rd449, %rd483;
	xor.b64  	%rd865, %rd484, %rd451;
	not.b64 	%rd485, %rd449;
	and.b64  	%rd486, %rd465, %rd485;
	xor.b64  	%rd870, %rd486, %rd464;
	not.b64 	%rd487, %rd445;
	and.b64  	%rd488, %rd459, %rd487;
	xor.b64  	%rd851, %rd488, %rd443;
	not.b64 	%rd489, %rd459;
	and.b64  	%rd490, %rd458, %rd489;
	xor.b64  	%rd856, %rd490, %rd445;
	not.b64 	%rd491, %rd458;
	and.b64  	%rd492, %rd462, %rd491;
	xor.b64  	%rd861, %rd459, %rd492;
	not.b64 	%rd493, %rd462;
	and.b64  	%rd494, %rd443, %rd493;
	xor.b64  	%rd866, %rd494, %rd458;
	not.b64 	%rd495, %rd443;
	and.b64  	%rd496, %rd445, %rd495;
	xor.b64  	%rd871, %rd462, %rd496;
	not.b64 	%rd497, %rd450;
	and.b64  	%rd498, %rd446, %rd497;
	xor.b64  	%rd852, %rd498, %rd455;
	not.b64 	%rd499, %rd446;
	and.b64  	%rd500, %rd447, %rd499;
	xor.b64  	%rd857, %rd450, %rd500;
	not.b64 	%rd501, %rd447;
	and.b64  	%rd502, %rd457, %rd501;
	xor.b64  	%rd862, %rd502, %rd446;
	not.b64 	%rd503, %rd457;
	and.b64  	%rd504, %rd455, %rd503;
	xor.b64  	%rd867, %rd504, %rd447;
	not.b64 	%rd505, %rd455;
	and.b64  	%rd506, %rd450, %rd505;
	xor.b64  	%rd872, %rd457, %rd506;
	not.b64 	%rd507, %rd452;
	and.b64  	%rd508, %rd463, %rd507;
	xor.b64  	%rd853, %rd508, %rd461;
	not.b64 	%rd509, %rd463;
	and.b64  	%rd510, %rd456, %rd509;
	xor.b64  	%rd858, %rd452, %rd510;
	not.b64 	%rd511, %rd456;
	and.b64  	%rd512, %rd453, %rd511;
	xor.b64  	%rd863, %rd512, %rd463;
	not.b64 	%rd513, %rd453;
	and.b64  	%rd514, %rd461, %rd513;
	xor.b64  	%rd868, %rd456, %rd514;
	not.b64 	%rd515, %rd461;
	and.b64  	%rd516, %rd452, %rd515;
	xor.b64  	%rd873, %rd516, %rd453;
	add.s64 	%rd518, %rd814, %rd874;
	ld.global.nc.u64 	%rd519, [%rd518];
	xor.b64  	%rd520, %rd519, %rd468;
	xor.b64  	%rd849, %rd520, %rd410;
	add.s64 	%rd874, %rd874, 8;
	cvt.u32.u64 	%r1, %rd874;
	setp.ne.s32 	%p10, %r1, 192;
	@%p10 bra 	LBB8_15;
// %bb.16:                              //   in Loop: Header=BB8_4 Depth=1
	st.local.u64 	[%rd1], %rd849;
	st.local.u64 	[%rd1+40], %rd850;
	st.local.u64 	[%rd1+80], %rd851;
	st.local.u64 	[%rd1+120], %rd852;
	st.local.u64 	[%rd1+160], %rd853;
	st.local.u64 	[%rd1+8], %rd854;
	st.local.u64 	[%rd1+48], %rd855;
	st.local.u64 	[%rd1+88], %rd856;
	st.local.u64 	[%rd1+128], %rd857;
	st.local.u64 	[%rd1+168], %rd858;
	st.local.u64 	[%rd1+16], %rd859;
	st.local.u64 	[%rd1+56], %rd860;
	st.local.u64 	[%rd1+96], %rd861;
	st.local.u64 	[%rd1+136], %rd862;
	st.local.u64 	[%rd1+176], %rd863;
	st.local.u64 	[%rd1+24], %rd864;
	st.local.u64 	[%rd1+64], %rd865;
	st.local.u64 	[%rd1+104], %rd866;
	st.local.u64 	[%rd1+144], %rd867;
	st.local.u64 	[%rd1+184], %rd868;
	st.local.u64 	[%rd1+32], %rd869;
	st.local.u64 	[%rd1+72], %rd870;
	st.local.u64 	[%rd1+112], %rd871;
	st.local.u64 	[%rd1+152], %rd872;
	st.local.u64 	[%rd1+192], %rd873;
	add.s64 	%rd900, %rd900, %rd375;
	sub.s64 	%rd901, %rd901, %rd375;
	cvt.u16.u64 	%rs94, %rd849;
	setp.ge.u64 	%p11, %rd901, %rd375;
	@%p11 bra 	LBB8_4;
LBB8_17:
	add.s64 	%rd521, %rd1, %rd901;
	ld.local.u8 	%rs39, [%rd521];
	xor.b16  	%rs40, %rs39, %rs7;
	st.local.u8 	[%rd521], %rs40;
	add.s64 	%rd522, %rd1, %rd375;
	ld.local.u8 	%rs41, [%rd522+-1];
	xor.b16  	%rs42, %rs41, 128;
	st.local.u8 	[%rd522+-1], %rs42;
	setp.eq.s64 	%p12, %rd901, 0;
	@%p12 bra 	LBB8_24;
// %bb.18:
	add.s64 	%rd524, %rd901, -1;
	and.b64  	%rd906, %rd901, 7;
	setp.lt.u64 	%p13, %rd524, 7;
	mov.u64 	%rd903, 0;
	@%p13 bra 	LBB8_21;
// %bb.19:
	and.b64  	%rd153, %rd901, -8;
	mov.u64 	%rd903, 0;
LBB8_20:                                // =>This Inner Loop Header: Depth=1
	add.s64 	%rd526, %rd900, %rd903;
	ld.u8 	%rs43, [%rd526];
	add.s64 	%rd527, %rd1, %rd903;
	ld.local.v4.u8 	{%rs44, %rs45, %rs46, %rs47}, [%rd527+4];
	ld.local.v4.u8 	{%rs48, %rs49, %rs50, %rs51}, [%rd527];
	xor.b16  	%rs52, %rs48, %rs43;
	st.local.u8 	[%rd527], %rs52;
	ld.u8 	%rs53, [%rd526+1];
	xor.b16  	%rs54, %rs49, %rs53;
	st.local.u8 	[%rd527+1], %rs54;
	ld.u8 	%rs55, [%rd526+2];
	xor.b16  	%rs56, %rs50, %rs55;
	st.local.u8 	[%rd527+2], %rs56;
	ld.u8 	%rs57, [%rd526+3];
	xor.b16  	%rs58, %rs51, %rs57;
	st.local.u8 	[%rd527+3], %rs58;
	ld.u8 	%rs59, [%rd526+4];
	xor.b16  	%rs60, %rs44, %rs59;
	st.local.u8 	[%rd527+4], %rs60;
	ld.u8 	%rs61, [%rd526+5];
	xor.b16  	%rs62, %rs45, %rs61;
	st.local.u8 	[%rd527+5], %rs62;
	ld.u8 	%rs63, [%rd526+6];
	xor.b16  	%rs64, %rs46, %rs63;
	st.local.u8 	[%rd527+6], %rs64;
	ld.u8 	%rs65, [%rd526+7];
	xor.b16  	%rs66, %rs47, %rs65;
	st.local.u8 	[%rd527+7], %rs66;
	add.s64 	%rd903, %rd903, 8;
	setp.ne.s64 	%p14, %rd153, %rd903;
	@%p14 bra 	LBB8_20;
LBB8_21:
	setp.eq.s64 	%p15, %rd906, 0;
	@%p15 bra 	LBB8_24;
// %bb.22:                              // %.preheader10
	add.s64 	%rd905, %rd1, %rd903;
	add.s64 	%rd904, %rd900, %rd903;
LBB8_23:                                // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	ld.u8 	%rs67, [%rd904];
	ld.local.u8 	%rs68, [%rd905];
	xor.b16  	%rs69, %rs68, %rs67;
	st.local.u8 	[%rd905], %rs69;
	add.s64 	%rd906, %rd906, -1;
	add.s64 	%rd905, %rd905, 1;
	add.s64 	%rd904, %rd904, 1;
	setp.ne.s64 	%p16, %rd906, 0;
	@%p16 bra 	LBB8_23;
LBB8_24:
	ld.param.u64 	%rd990, [hash_param_1];
	ld.param.u64 	%rd991, [hash_param_0];
	ld.local.u64 	%rd965, [%rd1];
	ld.local.u64 	%rd966, [%rd1+40];
	ld.local.u64 	%rd967, [%rd1+80];
	ld.local.u64 	%rd968, [%rd1+120];
	ld.local.u64 	%rd969, [%rd1+160];
	ld.local.u64 	%rd970, [%rd1+8];
	ld.local.u64 	%rd971, [%rd1+48];
	ld.local.u64 	%rd972, [%rd1+88];
	ld.local.u64 	%rd973, [%rd1+128];
	ld.local.u64 	%rd974, [%rd1+168];
	ld.local.u64 	%rd975, [%rd1+16];
	ld.local.u64 	%rd976, [%rd1+56];
	ld.local.u64 	%rd977, [%rd1+96];
	ld.local.u64 	%rd978, [%rd1+136];
	ld.local.u64 	%rd979, [%rd1+176];
	ld.local.u64 	%rd980, [%rd1+24];
	ld.local.u64 	%rd981, [%rd1+64];
	ld.local.u64 	%rd982, [%rd1+104];
	ld.local.u64 	%rd983, [%rd1+144];
	ld.local.u64 	%rd984, [%rd1+184];
	ld.local.u64 	%rd985, [%rd1+32];
	ld.local.u64 	%rd986, [%rd1+72];
	ld.local.u64 	%rd987, [%rd1+112];
	ld.local.u64 	%rd988, [%rd1+152];
	ld.local.u64 	%rd989, [%rd1+192];
	mov.u64 	%rd907, 0;
LBB8_25:                                // =>This Inner Loop Header: Depth=1
	xor.b64  	%rd529, %rd966, %rd965;
	xor.b64  	%rd530, %rd529, %rd967;
	xor.b64  	%rd531, %rd530, %rd968;
	xor.b64  	%rd532, %rd531, %rd969;
	xor.b64  	%rd533, %rd971, %rd970;
	xor.b64  	%rd534, %rd533, %rd972;
	xor.b64  	%rd535, %rd534, %rd973;
	xor.b64  	%rd536, %rd535, %rd974;
	xor.b64  	%rd537, %rd976, %rd975;
	xor.b64  	%rd538, %rd537, %rd977;
	xor.b64  	%rd539, %rd538, %rd978;
	xor.b64  	%rd540, %rd539, %rd979;
	xor.b64  	%rd541, %rd981, %rd980;
	xor.b64  	%rd542, %rd541, %rd982;
	xor.b64  	%rd543, %rd542, %rd983;
	xor.b64  	%rd544, %rd543, %rd984;
	xor.b64  	%rd545, %rd986, %rd985;
	xor.b64  	%rd546, %rd545, %rd987;
	xor.b64  	%rd547, %rd546, %rd988;
	xor.b64  	%rd548, %rd547, %rd989;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd536, 1;
	shr.b64 	%rhs, %rd536, 63;
	add.u64 	%rd549, %lhs, %rhs;
	}
	xor.b64  	%rd550, %rd548, %rd549;
	xor.b64  	%rd551, %rd550, %rd965;
	xor.b64  	%rd552, %rd550, %rd966;
	xor.b64  	%rd553, %rd550, %rd967;
	xor.b64  	%rd554, %rd550, %rd968;
	xor.b64  	%rd555, %rd550, %rd969;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd540, 1;
	shr.b64 	%rhs, %rd540, 63;
	add.u64 	%rd556, %lhs, %rhs;
	}
	xor.b64  	%rd557, %rd556, %rd532;
	xor.b64  	%rd558, %rd557, %rd970;
	xor.b64  	%rd559, %rd557, %rd971;
	xor.b64  	%rd560, %rd557, %rd972;
	xor.b64  	%rd561, %rd557, %rd973;
	xor.b64  	%rd562, %rd557, %rd974;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd544, 1;
	shr.b64 	%rhs, %rd544, 63;
	add.u64 	%rd563, %lhs, %rhs;
	}
	xor.b64  	%rd564, %rd563, %rd536;
	xor.b64  	%rd565, %rd564, %rd975;
	xor.b64  	%rd566, %rd564, %rd976;
	xor.b64  	%rd567, %rd564, %rd977;
	xor.b64  	%rd568, %rd564, %rd978;
	xor.b64  	%rd569, %rd564, %rd979;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd548, 1;
	shr.b64 	%rhs, %rd548, 63;
	add.u64 	%rd570, %lhs, %rhs;
	}
	xor.b64  	%rd571, %rd570, %rd540;
	xor.b64  	%rd572, %rd571, %rd980;
	xor.b64  	%rd573, %rd571, %rd981;
	xor.b64  	%rd574, %rd571, %rd982;
	xor.b64  	%rd575, %rd571, %rd983;
	xor.b64  	%rd576, %rd571, %rd984;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd532, 1;
	shr.b64 	%rhs, %rd532, 63;
	add.u64 	%rd577, %lhs, %rhs;
	}
	xor.b64  	%rd578, %rd544, %rd577;
	xor.b64  	%rd579, %rd578, %rd985;
	xor.b64  	%rd580, %rd986, %rd578;
	xor.b64  	%rd581, %rd987, %rd578;
	xor.b64  	%rd582, %rd988, %rd578;
	xor.b64  	%rd583, %rd989, %rd578;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd558, 1;
	shr.b64 	%rhs, %rd558, 63;
	add.u64 	%rd584, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd553, 3;
	shr.b64 	%rhs, %rd553, 61;
	add.u64 	%rd585, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd566, 6;
	shr.b64 	%rhs, %rd566, 58;
	add.u64 	%rd586, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd560, 10;
	shr.b64 	%rhs, %rd560, 54;
	add.u64 	%rd587, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd568, 15;
	shr.b64 	%rhs, %rd568, 49;
	add.u64 	%rd588, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd575, 21;
	shr.b64 	%rhs, %rd575, 43;
	add.u64 	%rd589, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd572, 28;
	shr.b64 	%rhs, %rd572, 36;
	add.u64 	%rd590, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd552, 36;
	shr.b64 	%rhs, %rd552, 28;
	add.u64 	%rd591, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd561, 45;
	shr.b64 	%rhs, %rd561, 19;
	add.u64 	%rd592, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd573, 55;
	shr.b64 	%rhs, %rd573, 9;
	add.u64 	%rd593, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd562, 2;
	shr.b64 	%rhs, %rd562, 62;
	add.u64 	%rd594, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd583, 14;
	shr.b64 	%rhs, %rd583, 50;
	add.u64 	%rd595, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd579, 27;
	shr.b64 	%rhs, %rd579, 37;
	add.u64 	%rd596, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd554, 41;
	shr.b64 	%rhs, %rd554, 23;
	add.u64 	%rd597, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd576, 56;
	shr.b64 	%rhs, %rd576, 8;
	add.u64 	%rd598, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd582, 8;
	shr.b64 	%rhs, %rd582, 56;
	add.u64 	%rd599, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd574, 25;
	shr.b64 	%rhs, %rd574, 39;
	add.u64 	%rd600, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd567, 43;
	shr.b64 	%rhs, %rd567, 21;
	add.u64 	%rd601, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd565, 62;
	shr.b64 	%rhs, %rd565, 2;
	add.u64 	%rd602, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd555, 18;
	shr.b64 	%rhs, %rd555, 46;
	add.u64 	%rd603, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd581, 39;
	shr.b64 	%rhs, %rd581, 25;
	add.u64 	%rd604, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd569, 61;
	shr.b64 	%rhs, %rd569, 3;
	add.u64 	%rd605, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd580, 20;
	shr.b64 	%rhs, %rd580, 44;
	add.u64 	%rd606, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd559, 44;
	shr.b64 	%rhs, %rd559, 20;
	add.u64 	%rd607, %lhs, %rhs;
	}
	not.b64 	%rd608, %rd607;
	and.b64  	%rd609, %rd601, %rd608;
	not.b64 	%rd610, %rd601;
	and.b64  	%rd611, %rd589, %rd610;
	xor.b64  	%rd970, %rd611, %rd607;
	not.b64 	%rd612, %rd589;
	and.b64  	%rd613, %rd595, %rd612;
	xor.b64  	%rd975, %rd613, %rd601;
	not.b64 	%rd614, %rd595;
	and.b64  	%rd615, %rd551, %rd614;
	xor.b64  	%rd980, %rd589, %rd615;
	not.b64 	%rd616, %rd551;
	and.b64  	%rd617, %rd607, %rd616;
	xor.b64  	%rd985, %rd617, %rd595;
	not.b64 	%rd618, %rd606;
	and.b64  	%rd619, %rd585, %rd618;
	xor.b64  	%rd966, %rd590, %rd619;
	not.b64 	%rd620, %rd585;
	and.b64  	%rd621, %rd592, %rd620;
	xor.b64  	%rd971, %rd621, %rd606;
	not.b64 	%rd622, %rd592;
	and.b64  	%rd623, %rd605, %rd622;
	xor.b64  	%rd976, %rd585, %rd623;
	not.b64 	%rd624, %rd605;
	and.b64  	%rd625, %rd590, %rd624;
	xor.b64  	%rd981, %rd625, %rd592;
	not.b64 	%rd626, %rd590;
	and.b64  	%rd627, %rd606, %rd626;
	xor.b64  	%rd986, %rd627, %rd605;
	not.b64 	%rd628, %rd586;
	and.b64  	%rd629, %rd600, %rd628;
	xor.b64  	%rd967, %rd629, %rd584;
	not.b64 	%rd630, %rd600;
	and.b64  	%rd631, %rd599, %rd630;
	xor.b64  	%rd972, %rd631, %rd586;
	not.b64 	%rd632, %rd599;
	and.b64  	%rd633, %rd603, %rd632;
	xor.b64  	%rd977, %rd600, %rd633;
	not.b64 	%rd634, %rd603;
	and.b64  	%rd635, %rd584, %rd634;
	xor.b64  	%rd982, %rd635, %rd599;
	not.b64 	%rd636, %rd584;
	and.b64  	%rd637, %rd586, %rd636;
	xor.b64  	%rd987, %rd603, %rd637;
	not.b64 	%rd638, %rd591;
	and.b64  	%rd639, %rd587, %rd638;
	xor.b64  	%rd968, %rd639, %rd596;
	not.b64 	%rd640, %rd587;
	and.b64  	%rd641, %rd588, %rd640;
	xor.b64  	%rd973, %rd591, %rd641;
	not.b64 	%rd642, %rd588;
	and.b64  	%rd643, %rd598, %rd642;
	xor.b64  	%rd978, %rd643, %rd587;
	not.b64 	%rd644, %rd598;
	and.b64  	%rd645, %rd596, %rd644;
	xor.b64  	%rd983, %rd645, %rd588;
	not.b64 	%rd646, %rd596;
	and.b64  	%rd647, %rd591, %rd646;
	xor.b64  	%rd988, %rd598, %rd647;
	not.b64 	%rd648, %rd593;
	and.b64  	%rd649, %rd604, %rd648;
	xor.b64  	%rd969, %rd649, %rd602;
	not.b64 	%rd650, %rd604;
	and.b64  	%rd651, %rd597, %rd650;
	xor.b64  	%rd974, %rd593, %rd651;
	not.b64 	%rd652, %rd597;
	and.b64  	%rd653, %rd594, %rd652;
	xor.b64  	%rd979, %rd653, %rd604;
	not.b64 	%rd654, %rd594;
	and.b64  	%rd655, %rd602, %rd654;
	xor.b64  	%rd984, %rd597, %rd655;
	not.b64 	%rd656, %rd602;
	and.b64  	%rd657, %rd593, %rd656;
	xor.b64  	%rd989, %rd657, %rd594;
	add.s64 	%rd659, %rd814, %rd907;
	ld.global.nc.u64 	%rd660, [%rd659];
	xor.b64  	%rd661, %rd660, %rd609;
	xor.b64  	%rd965, %rd661, %rd551;
	add.s64 	%rd907, %rd907, 8;
	cvt.u32.u64 	%r2, %rd907;
	setp.ne.s32 	%p17, %r2, 192;
	@%p17 bra 	LBB8_25;
// %bb.26:
	st.local.u64 	[%rd1], %rd965;
	st.local.u64 	[%rd1+40], %rd966;
	st.local.u64 	[%rd1+80], %rd967;
	st.local.u64 	[%rd1+120], %rd968;
	st.local.u64 	[%rd1+160], %rd969;
	st.local.u64 	[%rd1+8], %rd970;
	st.local.u64 	[%rd1+48], %rd971;
	st.local.u64 	[%rd1+88], %rd972;
	st.local.u64 	[%rd1+128], %rd973;
	st.local.u64 	[%rd1+168], %rd974;
	st.local.u64 	[%rd1+16], %rd975;
	st.local.u64 	[%rd1+56], %rd976;
	st.local.u64 	[%rd1+96], %rd977;
	st.local.u64 	[%rd1+136], %rd978;
	st.local.u64 	[%rd1+176], %rd979;
	st.local.u64 	[%rd1+24], %rd980;
	st.local.u64 	[%rd1+64], %rd981;
	st.local.u64 	[%rd1+104], %rd982;
	st.local.u64 	[%rd1+144], %rd983;
	st.local.u64 	[%rd1+184], %rd984;
	st.local.u64 	[%rd1+32], %rd985;
	st.local.u64 	[%rd1+72], %rd986;
	st.local.u64 	[%rd1+112], %rd987;
	st.local.u64 	[%rd1+152], %rd988;
	st.local.u64 	[%rd1+192], %rd989;
	setp.lt.u64 	%p18, %rd990, %rd375;
	cvt.u16.u64 	%rs96, %rd965;
	@%p18 bra 	LBB8_39;
// %bb.27:
	add.s64 	%rd242, %rd375, -2;
	and.b64  	%rd243, %rd813, 7;
	and.b64  	%rd244, %rd813, -8;
	add.s64 	%rd245, %rd1, 4;
	setp.eq.s64 	%p19, %rd375, 1;
	setp.lt.u64 	%p20, %rd242, 7;
	setp.eq.s64 	%p22, %rd243, 0;
LBB8_28:                                // =>This Loop Header: Depth=1
                                        //     Child Loop BB8_31 Depth 2
                                        //     Child Loop BB8_35 Depth 2
                                        //     Child Loop BB8_37 Depth 2
	st.u8 	[%rd991], %rs96;
	@%p19 bra 	LBB8_36;
// %bb.29:                              //   in Loop: Header=BB8_28 Depth=1
	mov.u64 	%rd962, 1;
	@%p20 bra 	LBB8_33;
// %bb.30:                              // %.preheader7
                                        //   in Loop: Header=BB8_28 Depth=1
	mov.u64 	%rd960, 0;
LBB8_31:                                //   Parent Loop BB8_28 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd664, %rd245, %rd960;
	ld.local.u8 	%rs70, [%rd664+-3];
	add.s64 	%rd665, %rd991, %rd960;
	st.u8 	[%rd665+1], %rs70;
	ld.local.u8 	%rs71, [%rd664+-2];
	st.u8 	[%rd665+2], %rs71;
	ld.local.u8 	%rs72, [%rd664+-1];
	st.u8 	[%rd665+3], %rs72;
	ld.local.u8 	%rs73, [%rd664];
	st.u8 	[%rd665+4], %rs73;
	ld.local.u8 	%rs74, [%rd664+1];
	st.u8 	[%rd665+5], %rs74;
	ld.local.u8 	%rs75, [%rd664+2];
	st.u8 	[%rd665+6], %rs75;
	ld.local.u8 	%rs76, [%rd664+3];
	st.u8 	[%rd665+7], %rs76;
	ld.local.u8 	%rs77, [%rd664+4];
	st.u8 	[%rd665+8], %rs77;
	add.s64 	%rd960, %rd960, 8;
	setp.ne.s64 	%p21, %rd244, %rd960;
	@%p21 bra 	LBB8_31;
// %bb.32:                              // %.loopexit8
                                        //   in Loop: Header=BB8_28 Depth=1
	add.s64 	%rd962, %rd960, 1;
LBB8_33:                                //   in Loop: Header=BB8_28 Depth=1
	@%p22 bra 	LBB8_36;
// %bb.34:                              // %.preheader5
                                        //   in Loop: Header=BB8_28 Depth=1
	mov.u64 	%rd963, %rd243;
LBB8_35:                                //   Parent Loop BB8_28 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	add.s64 	%rd666, %rd1, %rd962;
	ld.local.u8 	%rs78, [%rd666];
	add.s64 	%rd667, %rd991, %rd962;
	st.u8 	[%rd667], %rs78;
	add.s64 	%rd962, %rd962, 1;
	add.s64 	%rd963, %rd963, -1;
	setp.ne.s64 	%p23, %rd963, 0;
	@%p23 bra 	LBB8_35;
LBB8_36:                                //   in Loop: Header=BB8_28 Depth=1
	mov.u64 	%rd964, 0;
LBB8_37:                                //   Parent Loop BB8_28 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	xor.b64  	%rd669, %rd966, %rd965;
	xor.b64  	%rd670, %rd669, %rd967;
	xor.b64  	%rd671, %rd670, %rd968;
	xor.b64  	%rd672, %rd671, %rd969;
	xor.b64  	%rd673, %rd971, %rd970;
	xor.b64  	%rd674, %rd673, %rd972;
	xor.b64  	%rd675, %rd674, %rd973;
	xor.b64  	%rd676, %rd675, %rd974;
	xor.b64  	%rd677, %rd976, %rd975;
	xor.b64  	%rd678, %rd677, %rd977;
	xor.b64  	%rd679, %rd678, %rd978;
	xor.b64  	%rd680, %rd679, %rd979;
	xor.b64  	%rd681, %rd981, %rd980;
	xor.b64  	%rd682, %rd681, %rd982;
	xor.b64  	%rd683, %rd682, %rd983;
	xor.b64  	%rd684, %rd683, %rd984;
	xor.b64  	%rd685, %rd986, %rd985;
	xor.b64  	%rd686, %rd685, %rd987;
	xor.b64  	%rd687, %rd686, %rd988;
	xor.b64  	%rd688, %rd687, %rd989;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd676, 1;
	shr.b64 	%rhs, %rd676, 63;
	add.u64 	%rd689, %lhs, %rhs;
	}
	xor.b64  	%rd690, %rd688, %rd689;
	xor.b64  	%rd691, %rd690, %rd965;
	xor.b64  	%rd692, %rd690, %rd966;
	xor.b64  	%rd693, %rd690, %rd967;
	xor.b64  	%rd694, %rd690, %rd968;
	xor.b64  	%rd695, %rd690, %rd969;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd680, 1;
	shr.b64 	%rhs, %rd680, 63;
	add.u64 	%rd696, %lhs, %rhs;
	}
	xor.b64  	%rd697, %rd696, %rd672;
	xor.b64  	%rd698, %rd697, %rd970;
	xor.b64  	%rd699, %rd697, %rd971;
	xor.b64  	%rd700, %rd697, %rd972;
	xor.b64  	%rd701, %rd697, %rd973;
	xor.b64  	%rd702, %rd697, %rd974;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd684, 1;
	shr.b64 	%rhs, %rd684, 63;
	add.u64 	%rd703, %lhs, %rhs;
	}
	xor.b64  	%rd704, %rd703, %rd676;
	xor.b64  	%rd705, %rd704, %rd975;
	xor.b64  	%rd706, %rd704, %rd976;
	xor.b64  	%rd707, %rd704, %rd977;
	xor.b64  	%rd708, %rd704, %rd978;
	xor.b64  	%rd709, %rd704, %rd979;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd688, 1;
	shr.b64 	%rhs, %rd688, 63;
	add.u64 	%rd710, %lhs, %rhs;
	}
	xor.b64  	%rd711, %rd710, %rd680;
	xor.b64  	%rd712, %rd711, %rd980;
	xor.b64  	%rd713, %rd711, %rd981;
	xor.b64  	%rd714, %rd711, %rd982;
	xor.b64  	%rd715, %rd711, %rd983;
	xor.b64  	%rd716, %rd711, %rd984;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd672, 1;
	shr.b64 	%rhs, %rd672, 63;
	add.u64 	%rd717, %lhs, %rhs;
	}
	xor.b64  	%rd718, %rd684, %rd717;
	xor.b64  	%rd719, %rd718, %rd985;
	xor.b64  	%rd720, %rd986, %rd718;
	xor.b64  	%rd721, %rd987, %rd718;
	xor.b64  	%rd722, %rd988, %rd718;
	xor.b64  	%rd723, %rd989, %rd718;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd698, 1;
	shr.b64 	%rhs, %rd698, 63;
	add.u64 	%rd724, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd693, 3;
	shr.b64 	%rhs, %rd693, 61;
	add.u64 	%rd725, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd706, 6;
	shr.b64 	%rhs, %rd706, 58;
	add.u64 	%rd726, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd700, 10;
	shr.b64 	%rhs, %rd700, 54;
	add.u64 	%rd727, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd708, 15;
	shr.b64 	%rhs, %rd708, 49;
	add.u64 	%rd728, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd715, 21;
	shr.b64 	%rhs, %rd715, 43;
	add.u64 	%rd729, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd712, 28;
	shr.b64 	%rhs, %rd712, 36;
	add.u64 	%rd730, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd692, 36;
	shr.b64 	%rhs, %rd692, 28;
	add.u64 	%rd731, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd701, 45;
	shr.b64 	%rhs, %rd701, 19;
	add.u64 	%rd732, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd713, 55;
	shr.b64 	%rhs, %rd713, 9;
	add.u64 	%rd733, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd702, 2;
	shr.b64 	%rhs, %rd702, 62;
	add.u64 	%rd734, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd723, 14;
	shr.b64 	%rhs, %rd723, 50;
	add.u64 	%rd735, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd719, 27;
	shr.b64 	%rhs, %rd719, 37;
	add.u64 	%rd736, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd694, 41;
	shr.b64 	%rhs, %rd694, 23;
	add.u64 	%rd737, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd716, 56;
	shr.b64 	%rhs, %rd716, 8;
	add.u64 	%rd738, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd722, 8;
	shr.b64 	%rhs, %rd722, 56;
	add.u64 	%rd739, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd714, 25;
	shr.b64 	%rhs, %rd714, 39;
	add.u64 	%rd740, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd707, 43;
	shr.b64 	%rhs, %rd707, 21;
	add.u64 	%rd741, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd705, 62;
	shr.b64 	%rhs, %rd705, 2;
	add.u64 	%rd742, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd695, 18;
	shr.b64 	%rhs, %rd695, 46;
	add.u64 	%rd743, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd721, 39;
	shr.b64 	%rhs, %rd721, 25;
	add.u64 	%rd744, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd709, 61;
	shr.b64 	%rhs, %rd709, 3;
	add.u64 	%rd745, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd720, 20;
	shr.b64 	%rhs, %rd720, 44;
	add.u64 	%rd746, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd699, 44;
	shr.b64 	%rhs, %rd699, 20;
	add.u64 	%rd747, %lhs, %rhs;
	}
	not.b64 	%rd748, %rd747;
	and.b64  	%rd749, %rd741, %rd748;
	not.b64 	%rd750, %rd741;
	and.b64  	%rd751, %rd729, %rd750;
	xor.b64  	%rd970, %rd751, %rd747;
	not.b64 	%rd752, %rd729;
	and.b64  	%rd753, %rd735, %rd752;
	xor.b64  	%rd975, %rd753, %rd741;
	not.b64 	%rd754, %rd735;
	and.b64  	%rd755, %rd691, %rd754;
	xor.b64  	%rd980, %rd729, %rd755;
	not.b64 	%rd756, %rd691;
	and.b64  	%rd757, %rd747, %rd756;
	xor.b64  	%rd985, %rd757, %rd735;
	not.b64 	%rd758, %rd746;
	and.b64  	%rd759, %rd725, %rd758;
	xor.b64  	%rd966, %rd730, %rd759;
	not.b64 	%rd760, %rd725;
	and.b64  	%rd761, %rd732, %rd760;
	xor.b64  	%rd971, %rd761, %rd746;
	not.b64 	%rd762, %rd732;
	and.b64  	%rd763, %rd745, %rd762;
	xor.b64  	%rd976, %rd725, %rd763;
	not.b64 	%rd764, %rd745;
	and.b64  	%rd765, %rd730, %rd764;
	xor.b64  	%rd981, %rd765, %rd732;
	not.b64 	%rd766, %rd730;
	and.b64  	%rd767, %rd746, %rd766;
	xor.b64  	%rd986, %rd767, %rd745;
	not.b64 	%rd768, %rd726;
	and.b64  	%rd769, %rd740, %rd768;
	xor.b64  	%rd967, %rd769, %rd724;
	not.b64 	%rd770, %rd740;
	and.b64  	%rd771, %rd739, %rd770;
	xor.b64  	%rd972, %rd771, %rd726;
	not.b64 	%rd772, %rd739;
	and.b64  	%rd773, %rd743, %rd772;
	xor.b64  	%rd977, %rd740, %rd773;
	not.b64 	%rd774, %rd743;
	and.b64  	%rd775, %rd724, %rd774;
	xor.b64  	%rd982, %rd775, %rd739;
	not.b64 	%rd776, %rd724;
	and.b64  	%rd777, %rd726, %rd776;
	xor.b64  	%rd987, %rd743, %rd777;
	not.b64 	%rd778, %rd731;
	and.b64  	%rd779, %rd727, %rd778;
	xor.b64  	%rd968, %rd779, %rd736;
	not.b64 	%rd780, %rd727;
	and.b64  	%rd781, %rd728, %rd780;
	xor.b64  	%rd973, %rd731, %rd781;
	not.b64 	%rd782, %rd728;
	and.b64  	%rd783, %rd738, %rd782;
	xor.b64  	%rd978, %rd783, %rd727;
	not.b64 	%rd784, %rd738;
	and.b64  	%rd785, %rd736, %rd784;
	xor.b64  	%rd983, %rd785, %rd728;
	not.b64 	%rd786, %rd736;
	and.b64  	%rd787, %rd731, %rd786;
	xor.b64  	%rd988, %rd738, %rd787;
	not.b64 	%rd788, %rd733;
	and.b64  	%rd789, %rd744, %rd788;
	xor.b64  	%rd969, %rd789, %rd742;
	not.b64 	%rd790, %rd744;
	and.b64  	%rd791, %rd737, %rd790;
	xor.b64  	%rd974, %rd733, %rd791;
	not.b64 	%rd792, %rd737;
	and.b64  	%rd793, %rd734, %rd792;
	xor.b64  	%rd979, %rd793, %rd744;
	not.b64 	%rd794, %rd734;
	and.b64  	%rd795, %rd742, %rd794;
	xor.b64  	%rd984, %rd737, %rd795;
	not.b64 	%rd796, %rd742;
	and.b64  	%rd797, %rd733, %rd796;
	xor.b64  	%rd989, %rd797, %rd734;
	add.s64 	%rd799, %rd814, %rd964;
	ld.global.nc.u64 	%rd800, [%rd799];
	xor.b64  	%rd801, %rd800, %rd749;
	xor.b64  	%rd965, %rd801, %rd691;
	add.s64 	%rd964, %rd964, 8;
	cvt.u32.u64 	%r3, %rd964;
	setp.ne.s32 	%p24, %r3, 192;
	@%p24 bra 	LBB8_37;
// %bb.38:                              //   in Loop: Header=BB8_28 Depth=1
	st.local.u64 	[%rd1], %rd965;
	st.local.u64 	[%rd1+40], %rd966;
	st.local.u64 	[%rd1+80], %rd967;
	st.local.u64 	[%rd1+120], %rd968;
	st.local.u64 	[%rd1+160], %rd969;
	st.local.u64 	[%rd1+8], %rd970;
	st.local.u64 	[%rd1+48], %rd971;
	st.local.u64 	[%rd1+88], %rd972;
	st.local.u64 	[%rd1+128], %rd973;
	st.local.u64 	[%rd1+168], %rd974;
	st.local.u64 	[%rd1+16], %rd975;
	st.local.u64 	[%rd1+56], %rd976;
	st.local.u64 	[%rd1+96], %rd977;
	st.local.u64 	[%rd1+136], %rd978;
	st.local.u64 	[%rd1+176], %rd979;
	st.local.u64 	[%rd1+24], %rd980;
	st.local.u64 	[%rd1+64], %rd981;
	st.local.u64 	[%rd1+104], %rd982;
	st.local.u64 	[%rd1+144], %rd983;
	st.local.u64 	[%rd1+184], %rd984;
	st.local.u64 	[%rd1+32], %rd985;
	st.local.u64 	[%rd1+72], %rd986;
	st.local.u64 	[%rd1+112], %rd987;
	st.local.u64 	[%rd1+152], %rd988;
	st.local.u64 	[%rd1+192], %rd989;
	add.s64 	%rd991, %rd991, %rd375;
	sub.s64 	%rd990, %rd990, %rd375;
	cvt.u16.u64 	%rs96, %rd965;
	setp.ge.u64 	%p25, %rd990, %rd375;
	@%p25 bra 	LBB8_28;
LBB8_39:
	setp.eq.s64 	%p26, %rd990, 0;
	@%p26 bra 	LBB8_55;
// %bb.40:
	st.u8 	[%rd991], %rs96;
	setp.eq.s64 	%p27, %rd990, 1;
	add.s64 	%rd816, %rd990, -1;
	@%p27 bra 	LBB8_48;
// %bb.41:
	add.s64 	%rd803, %rd990, -2;
	and.b64  	%rd996, %rd816, 7;
	setp.lt.u64 	%p28, %rd803, 7;
	mov.u64 	%rd993, 1;
	@%p28 bra 	LBB8_45;
// %bb.42:
	and.b64  	%rd339, %rd816, -8;
	add.s64 	%rd340, %rd1, 4;
	mov.u64 	%rd992, 0;
LBB8_43:                                // =>This Inner Loop Header: Depth=1
	add.s64 	%rd805, %rd340, %rd992;
	ld.local.u8 	%rs79, [%rd805+-3];
	add.s64 	%rd806, %rd991, %rd992;
	st.u8 	[%rd806+1], %rs79;
	ld.local.u8 	%rs80, [%rd805+-2];
	st.u8 	[%rd806+2], %rs80;
	ld.local.u8 	%rs81, [%rd805+-1];
	st.u8 	[%rd806+3], %rs81;
	ld.local.u8 	%rs82, [%rd805];
	st.u8 	[%rd806+4], %rs82;
	ld.local.u8 	%rs83, [%rd805+1];
	st.u8 	[%rd806+5], %rs83;
	ld.local.u8 	%rs84, [%rd805+2];
	st.u8 	[%rd806+6], %rs84;
	ld.local.u8 	%rs85, [%rd805+3];
	st.u8 	[%rd806+7], %rs85;
	ld.local.u8 	%rs86, [%rd805+4];
	st.u8 	[%rd806+8], %rs86;
	add.s64 	%rd992, %rd992, 8;
	setp.ne.s64 	%p29, %rd339, %rd992;
	@%p29 bra 	LBB8_43;
// %bb.44:                              // %.loopexit4
	add.s64 	%rd993, %rd992, 1;
LBB8_45:
	setp.eq.s64 	%p30, %rd996, 0;
	@%p30 bra 	LBB8_48;
// %bb.46:                              // %.preheader2
	add.s64 	%rd995, %rd1, %rd993;
	add.s64 	%rd994, %rd991, %rd993;
LBB8_47:                                // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	ld.local.u8 	%rs87, [%rd995];
	st.u8 	[%rd994], %rs87;
	add.s64 	%rd996, %rd996, -1;
	add.s64 	%rd995, %rd995, 1;
	add.s64 	%rd994, %rd994, 1;
	setp.ne.s64 	%p31, %rd996, 0;
	@%p31 bra 	LBB8_47;
LBB8_48:
	and.b64  	%rd1000, %rd990, 3;
	setp.lt.u64 	%p32, %rd816, 3;
	mov.u64 	%rd997, 0;
	@%p32 bra 	LBB8_52;
// %bb.49:
	and.b64  	%rd809, %rd990, -4;
	neg.s64 	%rd355, %rd809;
	add.s64 	%rd810, %rd990, %rd1;
	add.s64 	%rd356, %rd810, -2;
	mov.u64 	%rd1002, 0;
	mov.u64 	%rd1001, %rd991;
LBB8_50:                                // =>This Inner Loop Header: Depth=1
	add.s64 	%rd811, %rd356, %rd1002;
	ld.local.u8 	%rs88, [%rd811+1];
	st.u8 	[%rd1001], %rs88;
	ld.local.u8 	%rs89, [%rd811];
	st.u8 	[%rd1001+1], %rs89;
	ld.local.u8 	%rs90, [%rd811+-1];
	st.u8 	[%rd1001+2], %rs90;
	ld.local.u8 	%rs91, [%rd811+-2];
	st.u8 	[%rd1001+3], %rs91;
	add.s64 	%rd1002, %rd1002, -4;
	add.s64 	%rd1001, %rd1001, 4;
	setp.eq.s64 	%p33, %rd355, %rd1002;
	@%p33 bra 	LBB8_51;
	bra.uni 	LBB8_50;
LBB8_51:                                // %.loopexit1
	neg.s64 	%rd997, %rd1002;
LBB8_52:
	setp.eq.s64 	%p34, %rd1000, 0;
	@%p34 bra 	LBB8_55;
// %bb.53:                              // %.preheader
	add.s64 	%rd999, %rd991, %rd997;
	sub.s64 	%rd812, %rd816, %rd997;
	add.s64 	%rd998, %rd1, %rd812;
LBB8_54:                                // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	ld.local.u8 	%rs92, [%rd998];
	st.u8 	[%rd999], %rs92;
	add.s64 	%rd1000, %rd1000, -1;
	add.s64 	%rd999, %rd999, 1;
	add.s64 	%rd998, %rd998, -1;
	setp.ne.s64 	%p35, %rd1000, 0;
	@%p35 bra 	LBB8_54;
LBB8_55:
	ret;
                                        // -- End function
}
	// .globl	__power_word            // -- Begin function __power_word
.visible .func __power_word(
	.param .b64 __power_word_param_0,
	.param .b64 __power_word_param_1,
	.param .b64 __power_word_param_2
)                                       // @__power_word
{
	.reg .pred 	%p<34>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<157>;

// %bb.0:
	ld.param.u64 	%rd38, [__power_word_param_2];
	ld.param.u64 	%rd43, [__power_word_param_1];
	ld.u64 	%rd143, [%rd43+16];
	ld.u64 	%rd141, [%rd43];
	ld.u64 	%rd144, [%rd43+24];
	ld.u64 	%rd142, [%rd43+8];
	or.b64  	%rd44, %rd142, %rd144;
	or.b64  	%rd45, %rd141, %rd143;
	or.b64  	%rd46, %rd45, %rd44;
	setp.eq.s64 	%p1, %rd46, 0;
	mov.u64 	%rd154, 0;
	mov.u64 	%rd153, 1;
	mov.u64 	%rd155, %rd154;
	mov.u64 	%rd156, %rd154;
	@%p1 bra 	LBB9_3;
// %bb.1:
	ld.param.u64 	%rd37, [__power_word_param_0];
	ld.u64 	%rd148, [%rd37+24];
	ld.u64 	%rd147, [%rd37+16];
	ld.u64 	%rd146, [%rd37+8];
	ld.u64 	%rd145, [%rd37];
	mov.u64 	%rd150, 0;
	mov.u64 	%rd153, 1;
	mov.u64 	%rd155, %rd150;
	mov.u64 	%rd156, %rd150;
LBB9_2:                                 // =>This Inner Loop Header: Depth=1
	and.b64  	%rd51, %rd141, 1;
	setp.eq.b64 	%p2, %rd51, 1;
	selp.b64 	%rd52, %rd148, 0, %p2;
	selp.b64 	%rd53, %rd147, 0, %p2;
	selp.b64 	%rd54, %rd146, 0, %p2;
	selp.b64 	%rd55, %rd145, 1, %p2;
	mul.hi.u64 	%rd56, %rd55, %rd153;
	mul.lo.s64 	%rd57, %rd54, %rd153;
	add.s64 	%rd58, %rd57, %rd56;
	setp.lt.u64 	%p3, %rd58, %rd56;
	setp.lt.u64 	%p4, %rd58, %rd57;
	selp.u64 	%rd59, 1, 0, %p4;
	selp.b64 	%rd60, 1, %rd59, %p3;
	mul.hi.u64 	%rd61, %rd54, %rd153;
	add.s64 	%rd62, %rd61, %rd60;
	mul.lo.s64 	%rd63, %rd55, %rd150;
	add.s64 	%rd154, %rd63, %rd58;
	setp.lt.u64 	%p5, %rd154, %rd58;
	setp.lt.u64 	%p6, %rd154, %rd63;
	selp.u64 	%rd64, 1, 0, %p6;
	selp.b64 	%rd65, 1, %rd64, %p5;
	mul.hi.u64 	%rd66, %rd55, %rd150;
	add.s64 	%rd67, %rd66, %rd65;
	add.s64 	%rd68, %rd62, %rd67;
	mul.lo.s64 	%rd69, %rd54, %rd150;
	add.s64 	%rd70, %rd69, %rd68;
	setp.lt.u64 	%p7, %rd70, %rd68;
	setp.lt.u64 	%p8, %rd70, %rd69;
	selp.u64 	%rd71, 1, 0, %p8;
	selp.b64 	%rd72, 1, %rd71, %p7;
	setp.lt.u64 	%p9, %rd68, %rd67;
	setp.lt.u64 	%p10, %rd68, %rd62;
	selp.u64 	%rd73, 1, 0, %p10;
	selp.b64 	%rd74, 1, %rd73, %p9;
	mul.hi.u64 	%rd75, %rd54, %rd150;
	add.s64 	%rd76, %rd75, %rd74;
	add.s64 	%rd77, %rd76, %rd72;
	mul.lo.s64 	%rd78, %rd153, %rd53;
	mul.lo.s64 	%rd79, %rd155, %rd55;
	add.s64 	%rd80, %rd79, %rd78;
	setp.lt.u64 	%p11, %rd80, %rd78;
	setp.lt.u64 	%p12, %rd80, %rd79;
	selp.u64 	%rd81, 1, 0, %p12;
	selp.b64 	%rd82, 1, %rd81, %p11;
	mul.lo.s64 	%rd83, %rd155, %rd54;
	mul.hi.u64 	%rd84, %rd155, %rd55;
	add.s64 	%rd85, %rd84, %rd83;
	mul.lo.s64 	%rd86, %rd156, %rd55;
	add.s64 	%rd87, %rd85, %rd86;
	mul.hi.u64 	%rd88, %rd153, %rd53;
	mul.lo.s64 	%rd89, %rd153, %rd52;
	add.s64 	%rd90, %rd88, %rd89;
	mul.lo.s64 	%rd91, %rd150, %rd53;
	add.s64 	%rd92, %rd90, %rd91;
	add.s64 	%rd93, %rd87, %rd92;
	add.s64 	%rd94, %rd93, %rd82;
	add.s64 	%rd95, %rd77, %rd94;
	add.s64 	%rd155, %rd70, %rd80;
	setp.lt.u64 	%p13, %rd155, %rd70;
	selp.u64 	%rd96, 1, 0, %p13;
	setp.lt.u64 	%p14, %rd155, %rd80;
	selp.b64 	%rd97, 1, %rd96, %p14;
	add.s64 	%rd156, %rd95, %rd97;
	mul.lo.s64 	%rd153, %rd55, %rd153;
	mul.lo.s64 	%rd98, %rd146, %rd145;
	mul.hi.u64 	%rd99, %rd145, %rd145;
	add.s64 	%rd100, %rd98, %rd99;
	add.s64 	%rd26, %rd98, %rd100;
	setp.lt.u64 	%p15, %rd26, %rd100;
	setp.lt.u64 	%p16, %rd26, %rd98;
	selp.u64 	%rd101, 1, 0, %p16;
	selp.b64 	%rd102, 1, %rd101, %p15;
	mul.hi.u64 	%rd103, %rd146, %rd145;
	add.s64 	%rd104, %rd103, %rd102;
	setp.lt.u64 	%p17, %rd100, %rd98;
	selp.u64 	%rd105, 1, 0, %p17;
	setp.lt.u64 	%p18, %rd100, %rd99;
	selp.b64 	%rd106, 1, %rd105, %p18;
	add.s64 	%rd107, %rd103, %rd106;
	add.s64 	%rd108, %rd107, %rd104;
	mul.lo.s64 	%rd109, %rd146, %rd146;
	add.s64 	%rd110, %rd109, %rd108;
	setp.lt.u64 	%p19, %rd110, %rd108;
	setp.lt.u64 	%p20, %rd110, %rd109;
	selp.u64 	%rd111, 1, 0, %p20;
	selp.b64 	%rd112, 1, %rd111, %p19;
	setp.lt.u64 	%p21, %rd108, %rd104;
	setp.lt.u64 	%p22, %rd108, %rd107;
	selp.u64 	%rd113, 1, 0, %p22;
	selp.b64 	%rd114, 1, %rd113, %p21;
	mul.hi.u64 	%rd115, %rd146, %rd146;
	add.s64 	%rd116, %rd115, %rd114;
	add.s64 	%rd117, %rd116, %rd112;
	mul.lo.s64 	%rd118, %rd145, %rd147;
	add.s64 	%rd119, %rd118, %rd118;
	setp.lt.u64 	%p23, %rd119, %rd118;
	selp.u64 	%rd120, 1, 0, %p23;
	selp.b64 	%rd121, 1, %rd120, %p23;
	mul.lo.s64 	%rd122, %rd146, %rd147;
	mul.hi.u64 	%rd123, %rd145, %rd147;
	add.s64 	%rd124, %rd123, %rd122;
	mul.lo.s64 	%rd125, %rd145, %rd148;
	add.s64 	%rd126, %rd124, %rd125;
	add.s64 	%rd127, %rd123, %rd125;
	add.s64 	%rd128, %rd127, %rd122;
	add.s64 	%rd129, %rd126, %rd128;
	add.s64 	%rd130, %rd129, %rd121;
	add.s64 	%rd131, %rd117, %rd130;
	add.s64 	%rd147, %rd110, %rd119;
	setp.lt.u64 	%p24, %rd147, %rd110;
	selp.u64 	%rd132, 1, 0, %p24;
	setp.lt.u64 	%p25, %rd147, %rd119;
	selp.b64 	%rd133, 1, %rd132, %p25;
	add.s64 	%rd148, %rd131, %rd133;
	mul.lo.s64 	%rd145, %rd145, %rd145;
	shr.u64 	%rd134, %rd141, 1;
	shl.b64 	%rd135, %rd142, 63;
	or.b64  	%rd29, %rd134, %rd135;
	shr.u64 	%rd136, %rd142, 1;
	shl.b64 	%rd137, %rd143, 63;
	or.b64  	%rd30, %rd136, %rd137;
	shr.u64 	%rd138, %rd143, 1;
	shl.b64 	%rd139, %rd144, 63;
	or.b64  	%rd31, %rd138, %rd139;
	shr.u64 	%rd32, %rd144, 1;
	setp.eq.s64 	%p26, %rd142, 0;
	setp.gt.u64 	%p27, %rd141, 1;
	selp.u32 	%r1, -1, 0, %p27;
	setp.ne.s64 	%p28, %rd142, 0;
	selp.u32 	%r2, -1, 0, %p28;
	selp.b32 	%r3, %r1, %r2, %p26;
	setp.eq.s64 	%p29, %rd144, 0;
	setp.ne.s64 	%p30, %rd143, 0;
	selp.u32 	%r4, -1, 0, %p30;
	setp.ne.s64 	%p31, %rd144, 0;
	selp.u32 	%r5, -1, 0, %p31;
	selp.b32 	%r6, %r4, %r5, %p29;
	or.b64  	%rd140, %rd143, %rd144;
	setp.eq.s64 	%p32, %rd140, 0;
	selp.b32 	%r7, %r3, %r6, %p32;
	and.b32  	%r8, %r7, 1;
	setp.eq.b32 	%p33, %r8, 1;
	mov.u64 	%rd141, %rd29;
	mov.u64 	%rd142, %rd30;
	mov.u64 	%rd143, %rd31;
	mov.u64 	%rd144, %rd32;
	mov.u64 	%rd146, %rd26;
	mov.u64 	%rd150, %rd154;
	@%p33 bra 	LBB9_2;
LBB9_3:
	st.u64 	[%rd38], %rd153;
	st.u64 	[%rd38+8], %rd154;
	st.u64 	[%rd38+16], %rd155;
	st.u64 	[%rd38+24], %rd156;
	ret;
                                        // -- End function
}
	// .globl	__device_calldatacpy    // -- Begin function __device_calldatacpy
.visible .func __device_calldatacpy(
	.param .b64 __device_calldatacpy_param_0,
	.param .b64 __device_calldatacpy_param_1,
	.param .b64 __device_calldatacpy_param_2,
	.param .b64 __device_calldatacpy_param_3,
	.param .b64 __device_calldatacpy_param_4
)                                       // @__device_calldatacpy
{
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<6>;
	.reg .b64 	%rd<41>;

// %bb.0:
	ld.param.u64 	%rd24, [__device_calldatacpy_param_4];
	setp.eq.s64 	%p1, %rd24, 0;
	@%p1 bra 	LBB10_10;
// %bb.1:
	ld.param.u64 	%rd21, [__device_calldatacpy_param_1];
	add.s64 	%rd25, %rd24, %rd21;
	setp.lt.u64 	%p2, %rd25, %rd24;
	setp.gt.u64 	%p3, %rd25, 727;
	or.pred  	%p4, %p2, %p3;
	@%p4 bra 	LBB10_10;
// %bb.2:
	ld.param.u64 	%rd23, [__device_calldatacpy_param_3];
	add.s64 	%rd26, %rd24, %rd23;
	setp.lt.u64 	%p5, %rd26, %rd24;
	setp.gt.u64 	%p6, %rd26, 2035;
	or.pred  	%p7, %p5, %p6;
	@%p7 bra 	LBB10_10;
// %bb.3:
	min.u64 	%rd1, %rd23, 2036;
	add.s64 	%rd27, %rd1, %rd24;
	min.u64 	%rd2, %rd27, 2036;
	setp.eq.s64 	%p8, %rd2, %rd1;
	@%p8 bra 	LBB10_10;
// %bb.4:
	ld.param.u64 	%rd22, [__device_calldatacpy_param_2];
	ld.param.u64 	%rd20, [__device_calldatacpy_param_0];
	sub.s64 	%rd3, %rd2, %rd1;
	not.b64 	%rd29, %rd1;
	add.s64 	%rd30, %rd2, %rd29;
	and.b64  	%rd4, %rd3, 3;
	setp.lt.u64 	%p9, %rd30, 3;
	mov.u64 	%rd37, 0;
	@%p9 bra 	LBB10_7;
// %bb.5:
	and.b64  	%rd5, %rd3, -4;
	add.s64 	%rd6, %rd20, %rd21;
	add.s64 	%rd7, %rd22, %rd1;
	mov.u64 	%rd37, 0;
LBB10_6:                                // =>This Inner Loop Header: Depth=1
	add.s64 	%rd32, %rd7, %rd37;
	ld.u8 	%rs1, [%rd32];
	add.s64 	%rd33, %rd6, %rd37;
	st.u8 	[%rd33], %rs1;
	ld.u8 	%rs2, [%rd32+1];
	st.u8 	[%rd33+1], %rs2;
	ld.u8 	%rs3, [%rd32+2];
	st.u8 	[%rd33+2], %rs3;
	ld.u8 	%rs4, [%rd32+3];
	st.u8 	[%rd33+3], %rs4;
	add.s64 	%rd37, %rd37, 4;
	setp.ne.s64 	%p10, %rd5, %rd37;
	@%p10 bra 	LBB10_6;
LBB10_7:
	setp.eq.s64 	%p11, %rd4, 0;
	@%p11 bra 	LBB10_10;
// %bb.8:                               // %.preheader
	add.s64 	%rd34, %rd37, %rd21;
	add.s64 	%rd40, %rd20, %rd34;
	add.s64 	%rd35, %rd37, %rd1;
	add.s64 	%rd39, %rd22, %rd35;
	neg.s64 	%rd38, %rd4;
LBB10_9:                                // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	ld.u8 	%rs5, [%rd39];
	st.u8 	[%rd40], %rs5;
	add.s64 	%rd40, %rd40, 1;
	add.s64 	%rd39, %rd39, 1;
	add.s64 	%rd19, %rd38, 1;
	setp.ge.u64 	%p12, %rd19, %rd38;
	mov.u64 	%rd38, %rd19;
	@%p12 bra 	LBB10_9;
LBB10_10:
	ret;
                                        // -- End function
}
	// .globl	__device_calldataload   // -- Begin function __device_calldataload
.visible .func __device_calldataload(
	.param .b64 __device_calldataload_param_0,
	.param .b64 __device_calldataload_param_1,
	.param .b64 __device_calldataload_param_2
)                                       // @__device_calldataload
{
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<33>;
	.reg .b64 	%rd<7>;

// %bb.0:
	ld.param.u64 	%rd3, [__device_calldataload_param_2];
	ld.param.u64 	%rd1, [__device_calldataload_param_0];
	setp.gt.u64 	%p1, %rd3, -33;
	add.s64 	%rd4, %rd3, 32;
	setp.gt.u64 	%p2, %rd4, 2035;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	LBB11_2;
	bra.uni 	LBB11_1;
LBB11_2:
	mov.u64 	%rd6, 0;
	st.u64 	[%rd1+24], %rd6;
	st.u64 	[%rd1+16], %rd6;
	st.u64 	[%rd1+8], %rd6;
	st.u64 	[%rd1], %rd6;
	bra.uni 	LBB11_3;
LBB11_1:
	ld.param.u64 	%rd2, [__device_calldataload_param_1];
	add.s64 	%rd5, %rd2, %rd3;
	ld.u8 	%rs1, [%rd5+31];
	st.u8 	[%rd1], %rs1;
	ld.u8 	%rs2, [%rd5+30];
	st.u8 	[%rd1+1], %rs2;
	ld.u8 	%rs3, [%rd5+29];
	st.u8 	[%rd1+2], %rs3;
	ld.u8 	%rs4, [%rd5+28];
	st.u8 	[%rd1+3], %rs4;
	ld.u8 	%rs5, [%rd5+27];
	st.u8 	[%rd1+4], %rs5;
	ld.u8 	%rs6, [%rd5+26];
	st.u8 	[%rd1+5], %rs6;
	ld.u8 	%rs7, [%rd5+25];
	st.u8 	[%rd1+6], %rs7;
	ld.u8 	%rs8, [%rd5+24];
	st.u8 	[%rd1+7], %rs8;
	ld.u8 	%rs9, [%rd5+23];
	st.u8 	[%rd1+8], %rs9;
	ld.u8 	%rs10, [%rd5+22];
	st.u8 	[%rd1+9], %rs10;
	ld.u8 	%rs11, [%rd5+21];
	st.u8 	[%rd1+10], %rs11;
	ld.u8 	%rs12, [%rd5+20];
	st.u8 	[%rd1+11], %rs12;
	ld.u8 	%rs13, [%rd5+19];
	st.u8 	[%rd1+12], %rs13;
	ld.u8 	%rs14, [%rd5+18];
	st.u8 	[%rd1+13], %rs14;
	ld.u8 	%rs15, [%rd5+17];
	st.u8 	[%rd1+14], %rs15;
	ld.u8 	%rs16, [%rd5+16];
	st.u8 	[%rd1+15], %rs16;
	ld.u8 	%rs17, [%rd5+15];
	st.u8 	[%rd1+16], %rs17;
	ld.u8 	%rs18, [%rd5+14];
	st.u8 	[%rd1+17], %rs18;
	ld.u8 	%rs19, [%rd5+13];
	st.u8 	[%rd1+18], %rs19;
	ld.u8 	%rs20, [%rd5+12];
	st.u8 	[%rd1+19], %rs20;
	ld.u8 	%rs21, [%rd5+11];
	st.u8 	[%rd1+20], %rs21;
	ld.u8 	%rs22, [%rd5+10];
	st.u8 	[%rd1+21], %rs22;
	ld.u8 	%rs23, [%rd5+9];
	st.u8 	[%rd1+22], %rs23;
	ld.u8 	%rs24, [%rd5+8];
	st.u8 	[%rd1+23], %rs24;
	ld.u8 	%rs25, [%rd5+7];
	st.u8 	[%rd1+24], %rs25;
	ld.u8 	%rs26, [%rd5+6];
	st.u8 	[%rd1+25], %rs26;
	ld.u8 	%rs27, [%rd5+5];
	st.u8 	[%rd1+26], %rs27;
	ld.u8 	%rs28, [%rd5+4];
	st.u8 	[%rd1+27], %rs28;
	ld.u8 	%rs29, [%rd5+3];
	st.u8 	[%rd1+28], %rs29;
	ld.u8 	%rs30, [%rd5+2];
	st.u8 	[%rd1+29], %rs30;
	ld.u8 	%rs31, [%rd5+1];
	st.u8 	[%rd1+30], %rs31;
	ld.u8 	%rs32, [%rd5];
	st.u8 	[%rd1+31], %rs32;
LBB11_3:
	ret;
                                        // -- End function
}
	// .globl	__device_mstore         // -- Begin function __device_mstore
.visible .func __device_mstore(
	.param .b64 __device_mstore_param_0,
	.param .b64 __device_mstore_param_1,
	.param .b64 __device_mstore_param_2,
	.param .b64 __device_mstore_param_3
)                                       // @__device_mstore
{
	.reg .pred 	%p<11>;
	.reg .b16 	%rs<6>;
	.reg .b64 	%rd<40>;

// %bb.0:
	ld.param.u64 	%rd23, [__device_mstore_param_3];
	ld.param.u64 	%rd21, [__device_mstore_param_1];
	setp.ne.s64 	%p1, %rd23, 0;
	not.b64 	%rd24, %rd21;
	setp.ge.u64 	%p2, %rd24, %rd23;
	and.pred  	%p3, %p1, %p2;
	mov.u64 	%rd25, 728;
	sub.s64 	%rd26, %rd25, %rd23;
	setp.gt.u64 	%p4, %rd26, %rd21;
	and.pred  	%p5, %p3, %p4;
	and.pred  	%p6, %p5, %p1;
	@!%p6 bra 	LBB12_8;
	bra.uni 	LBB12_1;
LBB12_1:
	ld.param.u64 	%rd22, [__device_mstore_param_2];
	ld.param.u64 	%rd20, [__device_mstore_param_0];
	add.s64 	%rd1, %rd23, -1;
	and.b64  	%rd39, %rd23, 3;
	setp.lt.u64 	%p7, %rd1, 3;
	mov.u64 	%rd36, 0;
	@%p7 bra 	LBB12_5;
// %bb.2:
	and.b64  	%rd29, %rd23, -4;
	neg.s64 	%rd3, %rd29;
	add.s64 	%rd34, %rd20, %rd21;
	add.s64 	%rd30, %rd23, %rd22;
	add.s64 	%rd5, %rd30, -2;
	mov.u64 	%rd35, 0;
LBB12_3:                                // =>This Inner Loop Header: Depth=1
	add.s64 	%rd31, %rd5, %rd35;
	ld.u8 	%rs1, [%rd31+1];
	st.u8 	[%rd34], %rs1;
	ld.u8 	%rs2, [%rd31];
	st.u8 	[%rd34+1], %rs2;
	ld.u8 	%rs3, [%rd31+-1];
	st.u8 	[%rd34+2], %rs3;
	ld.u8 	%rs4, [%rd31+-2];
	st.u8 	[%rd34+3], %rs4;
	add.s64 	%rd35, %rd35, -4;
	add.s64 	%rd34, %rd34, 4;
	setp.ne.s64 	%p8, %rd3, %rd35;
	@%p8 bra 	LBB12_3;
// %bb.4:                               // %.loopexit1
	neg.s64 	%rd36, %rd35;
LBB12_5:
	setp.eq.s64 	%p9, %rd39, 0;
	@%p9 bra 	LBB12_8;
// %bb.6:                               // %.preheader
	add.s64 	%rd32, %rd36, %rd21;
	add.s64 	%rd38, %rd20, %rd32;
	sub.s64 	%rd33, %rd1, %rd36;
	add.s64 	%rd37, %rd22, %rd33;
LBB12_7:                                // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	ld.u8 	%rs5, [%rd37];
	st.u8 	[%rd38], %rs5;
	add.s64 	%rd39, %rd39, -1;
	add.s64 	%rd38, %rd38, 1;
	add.s64 	%rd37, %rd37, -1;
	setp.ne.s64 	%p10, %rd39, 0;
	@%p10 bra 	LBB12_7;
LBB12_8:
	ret;
                                        // -- End function
}
	// .globl	__device_mload          // -- Begin function __device_mload
.visible .func __device_mload(
	.param .b64 __device_mload_param_0,
	.param .b64 __device_mload_param_1,
	.param .b64 __device_mload_param_2
)                                       // @__device_mload
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<33>;
	.reg .b64 	%rd<6>;

// %bb.0:
	ld.param.u64 	%rd3, [__device_mload_param_2];
	ld.param.u64 	%rd2, [__device_mload_param_1];
	setp.lt.u64 	%p1, %rd2, 696;
	@%p1 bra 	LBB13_2;
// %bb.1:
	mov.u64 	%rd5, 0;
	st.u64 	[%rd3+24], %rd5;
	st.u64 	[%rd3+16], %rd5;
	st.u64 	[%rd3+8], %rd5;
	st.u64 	[%rd3], %rd5;
	bra.uni 	LBB13_3;
LBB13_2:
	ld.param.u64 	%rd1, [__device_mload_param_0];
	add.s64 	%rd4, %rd1, %rd2;
	ld.u8 	%rs1, [%rd4+31];
	st.u8 	[%rd3], %rs1;
	ld.u8 	%rs2, [%rd4+30];
	st.u8 	[%rd3+1], %rs2;
	ld.u8 	%rs3, [%rd4+29];
	st.u8 	[%rd3+2], %rs3;
	ld.u8 	%rs4, [%rd4+28];
	st.u8 	[%rd3+3], %rs4;
	ld.u8 	%rs5, [%rd4+27];
	st.u8 	[%rd3+4], %rs5;
	ld.u8 	%rs6, [%rd4+26];
	st.u8 	[%rd3+5], %rs6;
	ld.u8 	%rs7, [%rd4+25];
	st.u8 	[%rd3+6], %rs7;
	ld.u8 	%rs8, [%rd4+24];
	st.u8 	[%rd3+7], %rs8;
	ld.u8 	%rs9, [%rd4+23];
	st.u8 	[%rd3+8], %rs9;
	ld.u8 	%rs10, [%rd4+22];
	st.u8 	[%rd3+9], %rs10;
	ld.u8 	%rs11, [%rd4+21];
	st.u8 	[%rd3+10], %rs11;
	ld.u8 	%rs12, [%rd4+20];
	st.u8 	[%rd3+11], %rs12;
	ld.u8 	%rs13, [%rd4+19];
	st.u8 	[%rd3+12], %rs13;
	ld.u8 	%rs14, [%rd4+18];
	st.u8 	[%rd3+13], %rs14;
	ld.u8 	%rs15, [%rd4+17];
	st.u8 	[%rd3+14], %rs15;
	ld.u8 	%rs16, [%rd4+16];
	st.u8 	[%rd3+15], %rs16;
	ld.u8 	%rs17, [%rd4+15];
	st.u8 	[%rd3+16], %rs17;
	ld.u8 	%rs18, [%rd4+14];
	st.u8 	[%rd3+17], %rs18;
	ld.u8 	%rs19, [%rd4+13];
	st.u8 	[%rd3+18], %rs19;
	ld.u8 	%rs20, [%rd4+12];
	st.u8 	[%rd3+19], %rs20;
	ld.u8 	%rs21, [%rd4+11];
	st.u8 	[%rd3+20], %rs21;
	ld.u8 	%rs22, [%rd4+10];
	st.u8 	[%rd3+21], %rs22;
	ld.u8 	%rs23, [%rd4+9];
	st.u8 	[%rd3+22], %rs23;
	ld.u8 	%rs24, [%rd4+8];
	st.u8 	[%rd3+23], %rs24;
	ld.u8 	%rs25, [%rd4+7];
	st.u8 	[%rd3+24], %rs25;
	ld.u8 	%rs26, [%rd4+6];
	st.u8 	[%rd3+25], %rs26;
	ld.u8 	%rs27, [%rd4+5];
	st.u8 	[%rd3+26], %rs27;
	ld.u8 	%rs28, [%rd4+4];
	st.u8 	[%rd3+27], %rs28;
	ld.u8 	%rs29, [%rd4+3];
	st.u8 	[%rd3+28], %rs29;
	ld.u8 	%rs30, [%rd4+2];
	st.u8 	[%rd3+29], %rs30;
	ld.u8 	%rs31, [%rd4+1];
	st.u8 	[%rd3+30], %rs31;
	ld.u8 	%rs32, [%rd4];
	st.u8 	[%rd3+31], %rs32;
LBB13_3:
	ret;
                                        // -- End function
}
	// .globl	__device_sstore         // -- Begin function __device_sstore
.visible .func __device_sstore(
	.param .b64 __device_sstore_param_0,
	.param .b64 __device_sstore_param_1
)                                       // @__device_sstore
{
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<8>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<52>;

// %bb.0:
	ld.param.u64 	%rd10, [__device_sstore_param_1];
	ld.param.u64 	%rd12, [__device_sstore_param_0];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %ntid.x;
	mad.lo.s32 	%r4, %r3, %r2, %r1;
	cvt.u64.u32 	%rd1, %r4;
	mov.u64 	%rd13, l1snap_lens;
	add.s64 	%rd2, %rd13, %rd1;
	ld.global.u8 	%rs1, [%rd2];
	setp.eq.s16 	%p1, %rs1, 0;
	ld.u64 	%rd7, [%rd12+24];
	ld.u64 	%rd6, [%rd12+16];
	ld.u64 	%rd5, [%rd12+8];
	ld.u64 	%rd4, [%rd12];
	mov.u64 	%rd51, 0;
	shl.b64 	%rd49, %rd1, 13;
	mov.u64 	%rd50, l1snaps;
	@%p1 bra 	LBB14_5;
// %bb.1:                               // %.preheader
	cvt.u64.u16 	%rd51, %rs1;
	mov.u16 	%rs7, 0;
LBB14_2:                                // =>This Inner Loop Header: Depth=1
	add.s64 	%rd17, %rd50, %rd49;
	cvt.u32.u16 	%r5, %rs7;
	and.b32  	%r6, %r5, 255;
	mul.wide.u32 	%rd18, %r6, 64;
	add.s64 	%rd19, %rd17, %rd18;
	ld.global.u64 	%rd20, [%rd19];
	ld.global.u64 	%rd21, [%rd19+16];
	ld.global.u64 	%rd22, [%rd19+8];
	ld.global.u64 	%rd23, [%rd19+24];
	xor.b64  	%rd24, %rd23, %rd7;
	xor.b64  	%rd25, %rd22, %rd5;
	or.b64  	%rd26, %rd25, %rd24;
	xor.b64  	%rd27, %rd21, %rd6;
	xor.b64  	%rd28, %rd20, %rd4;
	or.b64  	%rd29, %rd28, %rd27;
	or.b64  	%rd30, %rd29, %rd26;
	setp.ne.s64 	%p2, %rd30, 0;
	@%p2 bra 	LBB14_4;
	bra.uni 	LBB14_3;
LBB14_4:                                //   in Loop: Header=BB14_2 Depth=1
	add.s16 	%rs7, %rs7, 1;
	and.b16  	%rs5, %rs7, 255;
	setp.lt.u16 	%p3, %rs5, %rs1;
	@%p3 bra 	LBB14_2;
LBB14_5:
	add.s64 	%rd42, %rd50, %rd49;
	shl.b64 	%rd43, %rd51, 6;
	add.s64 	%rd44, %rd42, %rd43;
	st.global.u64 	[%rd44+24], %rd7;
	st.global.u64 	[%rd44+16], %rd6;
	st.global.u64 	[%rd44+8], %rd5;
	st.global.u64 	[%rd44], %rd4;
	ld.u64 	%rd45, [%rd10+16];
	ld.u64 	%rd46, [%rd10+8];
	ld.u64 	%rd47, [%rd10];
	ld.u64 	%rd48, [%rd10+24];
	st.global.u64 	[%rd44+56], %rd48;
	st.global.u64 	[%rd44+32], %rd47;
	st.global.u64 	[%rd44+40], %rd46;
	st.global.u64 	[%rd44+48], %rd45;
	add.s16 	%rs6, %rs1, 1;
	st.global.u8 	[%rd2], %rs6;
	bra.uni 	LBB14_6;
LBB14_3:
	cvt.u64.u16 	%rd14, %rs7;
	and.b64  	%rd8, %rd14, 255;
	ld.u64 	%rd31, [%rd10+8];
	ld.u64 	%rd32, [%rd10];
	ld.u64 	%rd33, [%rd10+24];
	ld.u64 	%rd34, [%rd10+16];
	shl.b64 	%rd38, %rd8, 6;
	add.s64 	%rd39, %rd17, %rd38;
	st.global.u64 	[%rd39+48], %rd34;
	st.global.u64 	[%rd39+56], %rd33;
	st.global.u64 	[%rd39+32], %rd32;
	st.global.u64 	[%rd39+40], %rd31;
LBB14_6:
	ret;
                                        // -- End function
}
	// .globl	__device_sload          // -- Begin function __device_sload
.visible .func __device_sload(
	.param .b64 __device_sload_param_0,
	.param .b64 __device_sload_param_1
)                                       // @__device_sload
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<76>;

// %bb.0:
	ld.param.u64 	%rd24, [__device_sload_param_1];
	ld.param.u64 	%rd25, [__device_sload_param_0];
	mov.u32 	%r7, %tid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %ntid.x;
	mad.lo.s32 	%r10, %r9, %r8, %r7;
	cvt.u64.u32 	%rd1, %r10;
	ld.u64 	%rd5, [%rd25+24];
	ld.u64 	%rd4, [%rd25+16];
	ld.u64 	%rd3, [%rd25+8];
	ld.u64 	%rd2, [%rd25];
	mov.u64 	%rd26, l1snap_lens;
	add.s64 	%rd27, %rd26, %rd1;
	ld.global.u8 	%r11, [%rd27];
	setp.eq.s32 	%p1, %r11, 0;
	@%p1 bra 	LBB15_4;
// %bb.1:                               // %.preheader1
	shl.b64 	%rd28, %rd1, 13;
	mov.u64 	%rd29, l1snaps;
	add.s64 	%rd30, %rd29, %rd28;
	add.s64 	%rd69, %rd30, 32;
LBB15_3:                                // =>This Inner Loop Header: Depth=1
	ld.global.u64 	%rd31, [%rd69+-8];
	ld.global.u64 	%rd32, [%rd69+-24];
	ld.global.u64 	%rd33, [%rd69+-16];
	ld.global.u64 	%rd34, [%rd69+-32];
	xor.b64  	%rd35, %rd34, %rd2;
	xor.b64  	%rd36, %rd33, %rd4;
	or.b64  	%rd37, %rd35, %rd36;
	xor.b64  	%rd38, %rd32, %rd3;
	xor.b64  	%rd39, %rd31, %rd5;
	or.b64  	%rd40, %rd38, %rd39;
	or.b64  	%rd41, %rd37, %rd40;
	setp.eq.s64 	%p2, %rd41, 0;
	@%p2 bra 	LBB15_8;
// %bb.2:                               //   in Loop: Header=BB15_3 Depth=1
	add.s32 	%r11, %r11, -1;
	add.s64 	%rd69, %rd69, 64;
	setp.eq.s32 	%p3, %r11, 0;
	@%p3 bra 	LBB15_4;
	bra.uni 	LBB15_3;
LBB15_4:
	shl.b64 	%rd46, %rd1, 2;
	mov.u64 	%rd47, __snap_map;
	add.s64 	%rd48, %rd47, %rd46;
	ld.global.u32 	%rd10, [%rd48];
	mov.u64 	%rd49, l2snap_lens;
	add.s64 	%rd50, %rd49, %rd10;
	ld.global.u8 	%r12, [%rd50];
	setp.eq.s32 	%p4, %r12, 0;
	mov.u64 	%rd72, 0;
	mov.u64 	%rd73, %rd72;
	mov.u64 	%rd74, %rd72;
	mov.u64 	%rd75, %rd72;
	@%p4 bra 	LBB15_9;
// %bb.5:                               // %.preheader
	shl.b64 	%rd51, %rd10, 13;
	mov.u64 	%rd52, l2snaps;
	add.s64 	%rd53, %rd52, %rd51;
	add.s64 	%rd69, %rd53, 32;
LBB15_7:                                // =>This Inner Loop Header: Depth=1
	ld.global.u64 	%rd54, [%rd69+-8];
	ld.global.u64 	%rd55, [%rd69+-24];
	ld.global.u64 	%rd56, [%rd69+-16];
	ld.global.u64 	%rd57, [%rd69+-32];
	xor.b64  	%rd58, %rd57, %rd2;
	xor.b64  	%rd59, %rd56, %rd4;
	or.b64  	%rd60, %rd58, %rd59;
	xor.b64  	%rd61, %rd55, %rd3;
	xor.b64  	%rd62, %rd54, %rd5;
	or.b64  	%rd63, %rd61, %rd62;
	or.b64  	%rd64, %rd60, %rd63;
	setp.ne.s64 	%p5, %rd64, 0;
	@%p5 bra 	LBB15_6;
	bra.uni 	LBB15_8;
LBB15_6:                                //   in Loop: Header=BB15_7 Depth=1
	add.s32 	%r12, %r12, -1;
	add.s64 	%rd69, %rd69, 64;
	setp.eq.s32 	%p6, %r12, 0;
	mov.u64 	%rd72, 0;
	mov.u64 	%rd73, %rd72;
	mov.u64 	%rd74, %rd72;
	mov.u64 	%rd75, %rd72;
	@%p6 bra 	LBB15_9;
	bra.uni 	LBB15_7;
LBB15_8:
	ld.global.u64 	%rd75, [%rd69+24];
	ld.global.u64 	%rd74, [%rd69+16];
	ld.global.u64 	%rd73, [%rd69+8];
	ld.global.u64 	%rd72, [%rd69];
LBB15_9:
	st.u64 	[%rd24], %rd72;
	st.u64 	[%rd24+8], %rd73;
	st.u64 	[%rd24+16], %rd74;
	st.u64 	[%rd24+24], %rd75;
	ret;
                                        // -- End function
}
	// .globl	__simple_hash           // -- Begin function __simple_hash
.visible .func  (.param .b64 func_retval0) __simple_hash(
	.param .b64 __simple_hash_param_0
)                                       // @__simple_hash
{
	.reg .b64 	%rd<10>;

// %bb.0:
	ld.param.u64 	%rd1, [__simple_hash_param_0];
	shr.u64 	%rd2, %rd1, 30;
	xor.b64  	%rd3, %rd2, %rd1;
	mul.lo.s64 	%rd4, %rd3, -4658895280553007687;
	shr.u64 	%rd5, %rd4, 27;
	xor.b64  	%rd6, %rd5, %rd4;
	mul.lo.s64 	%rd7, %rd6, -7723592293110705685;
	shr.u64 	%rd8, %rd7, 31;
	xor.b64  	%rd9, %rd8, %rd7;
	st.param.b64 	[func_retval0+0], %rd9;
	ret;
                                        // -- End function
}
	// .globl	__hashint               // -- Begin function __hashint
.visible .func  (.param .b32 func_retval0) __hashint(
	.param .b32 __hashint_param_0,
	.param .b32 __hashint_param_1
)                                       // @__hashint
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<13>;

// %bb.0:
	ld.param.u32 	%rd1, [__hashint_param_1];
	ld.param.u32 	%rd2, [__hashint_param_0];
	shl.b64 	%rd3, %rd2, 32;
	or.b64  	%rd4, %rd3, %rd1;
	shr.u64 	%rd5, %rd4, 30;
	xor.b64  	%rd6, %rd5, %rd4;
	mul.lo.s64 	%rd7, %rd6, -4658895280553007687;
	shr.u64 	%rd8, %rd7, 27;
	xor.b64  	%rd9, %rd8, %rd7;
	mul.lo.s64 	%rd10, %rd9, -7723592293110705685;
	shr.u64 	%rd11, %rd10, 31;
	xor.b64  	%rd12, %rd11, %rd10;
	cvt.u32.u64 	%r1, %rd12;
	st.param.b32 	[func_retval0+0], %r1;
	ret;
                                        // -- End function
}
	// .globl	__hashword              // -- Begin function __hashword
.visible .func  (.param .b32 func_retval0) __hashword(
	.param .b64 __hashword_param_0
)                                       // @__hashword
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<43>;

// %bb.0:
	ld.param.u64 	%rd1, [__hashword_param_0];
	ld.u64 	%rd2, [%rd1];
	ld.u64 	%rd3, [%rd1+8];
	ld.u64 	%rd4, [%rd1+16];
	ld.u64 	%rd5, [%rd1+24];
	shr.u64 	%rd6, %rd2, 30;
	xor.b64  	%rd7, %rd6, %rd2;
	mul.lo.s64 	%rd8, %rd7, -4658895280553007687;
	shr.u64 	%rd9, %rd8, 27;
	xor.b64  	%rd10, %rd9, %rd8;
	mul.lo.s64 	%rd11, %rd10, -7723592293110705685;
	shr.u64 	%rd12, %rd11, 31;
	shr.u64 	%rd13, %rd3, 30;
	xor.b64  	%rd14, %rd13, %rd3;
	mul.lo.s64 	%rd15, %rd14, -4658895280553007687;
	shr.u64 	%rd16, %rd15, 27;
	xor.b64  	%rd17, %rd16, %rd15;
	mul.lo.s64 	%rd18, %rd17, -7723592293110705685;
	shr.u64 	%rd19, %rd18, 31;
	shr.u64 	%rd20, %rd4, 30;
	xor.b64  	%rd21, %rd20, %rd4;
	mul.lo.s64 	%rd22, %rd21, -4658895280553007687;
	shr.u64 	%rd23, %rd22, 27;
	xor.b64  	%rd24, %rd23, %rd22;
	mul.lo.s64 	%rd25, %rd24, -7723592293110705685;
	shr.u64 	%rd26, %rd25, 31;
	shr.u64 	%rd27, %rd5, 30;
	xor.b64  	%rd28, %rd27, %rd5;
	mul.lo.s64 	%rd29, %rd28, -4658895280553007687;
	shr.u64 	%rd30, %rd29, 27;
	xor.b64  	%rd31, %rd30, %rd29;
	mul.lo.s64 	%rd32, %rd31, -7723592293110705685;
	shr.u64 	%rd33, %rd32, 31;
	xor.b64  	%rd34, %rd12, %rd11;
	xor.b64  	%rd35, %rd34, %rd18;
	xor.b64  	%rd36, %rd35, %rd19;
	xor.b64  	%rd37, %rd36, %rd25;
	xor.b64  	%rd38, %rd37, %rd26;
	xor.b64  	%rd39, %rd38, %rd32;
	xor.b64  	%rd40, %rd39, %rd33;
	shr.u64 	%rd41, %rd40, 32;
	xor.b64  	%rd42, %rd41, %rd40;
	cvt.u32.u64 	%r1, %rd42;
	st.param.b32 	[func_retval0+0], %r1;
	ret;
                                        // -- End function
}
	// .globl	__classify_counts       // -- Begin function __classify_counts
.visible .func __classify_counts(
	.param .b64 __classify_counts_param_0
)                                       // @__classify_counts
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<26>;
	// demoted variable
	.shared .align 1 .b8 count_class_lookup8[256];
// %bb.0:
	mov.u64 	%rd25, 0;
	ld.param.u64 	%rd5, [__classify_counts_param_0];
LBB19_1:                                // =>This Inner Loop Header: Depth=1
	add.s64 	%rd2, %rd5, %rd25;
	ld.global.u64 	%rd3, [%rd2];
	setp.eq.s64 	%p1, %rd3, 0;
	@%p1 bra 	LBB19_3;
	bra.uni 	LBB19_2;
LBB19_3:                                //   in Loop: Header=BB19_1 Depth=1
	add.s64 	%rd25, %rd25, 8;
	cvt.u32.u64 	%r1, %rd25;
	setp.ne.s32 	%p2, %r1, 4096;
	@%p2 bra 	LBB19_1;
	bra.uni 	LBB19_4;
LBB19_2:                                //   in Loop: Header=BB19_1 Depth=1
	shr.u64 	%rd7, %rd3, 56;
	shr.u64 	%rd8, %rd3, 32;
	and.b64  	%rd9, %rd3, 255;
	mov.u64 	%rd10, count_class_lookup8;
	add.s64 	%rd11, %rd10, %rd9;
	ld.shared.u8 	%rs1, [%rd11];
	st.global.u8 	[%rd2], %rs1;
	bfe.u64 	%rd12, %rd3, 8, 8;
	add.s64 	%rd13, %rd10, %rd12;
	ld.shared.u8 	%rs2, [%rd13];
	st.global.u8 	[%rd2+1], %rs2;
	bfe.u64 	%rd14, %rd3, 16, 8;
	add.s64 	%rd15, %rd10, %rd14;
	ld.shared.u8 	%rs3, [%rd15];
	st.global.u8 	[%rd2+2], %rs3;
	bfe.u64 	%rd16, %rd3, 24, 8;
	add.s64 	%rd17, %rd10, %rd16;
	ld.shared.u8 	%rs4, [%rd17];
	st.global.u8 	[%rd2+3], %rs4;
	and.b64  	%rd18, %rd8, 255;
	add.s64 	%rd19, %rd10, %rd18;
	ld.shared.u8 	%rs5, [%rd19];
	st.global.u8 	[%rd2+4], %rs5;
	bfe.u64 	%rd20, %rd3, 40, 8;
	add.s64 	%rd21, %rd10, %rd20;
	ld.shared.u8 	%rs6, [%rd21];
	st.global.u8 	[%rd2+5], %rs6;
	bfe.u64 	%rd22, %rd3, 48, 8;
	add.s64 	%rd23, %rd10, %rd22;
	ld.shared.u8 	%rs7, [%rd23];
	st.global.u8 	[%rd2+6], %rs7;
	add.s64 	%rd24, %rd10, %rd7;
	ld.shared.u8 	%rs8, [%rd24];
	st.global.u8 	[%rd2+7], %rs8;
	bra.uni 	LBB19_3;
LBB19_4:
	ret;
                                        // -- End function
}
	// .globl	updateBits              // -- Begin function updateBits
.visible .entry updateBits(
	.param .b64 updateBits_param_0
)                                       // @updateBits
{
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<14>;

// %bb.0:
	ld.param.u64 	%rd5, [updateBits_param_0];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %ntid.x;
	mad.lo.s32 	%r4, %r3, %r2, %r1;
	mul.wide.u32 	%rd6, %r4, 8;
	ld.global.u64 	%rd8, [__bitmaps];
	add.s64 	%rd2, %rd8, %rd6;
	ld.global.u64 	%rd3, [%rd2];
	setp.eq.s64 	%p1, %rd3, 0;
	@%p1 bra 	LBB20_5;
	bra.uni 	LBB20_1;
LBB20_5:
	mov.u64 	%rd12, 0;
	st.global.u64 	[%rd2], %rd12;
	bar.sync 	0;
	bar.sync 	0;
	ld.global.u64 	%rd13, [__signals];
	st.global.u64 	[%rd5], %rd13;
	ret;
LBB20_1:
	mov.u64 	%rd7, __virgin_bits;
	add.s64 	%rd1, %rd7, %rd6;
	ld.global.u64 	%rd4, [%rd1];
	and.b64  	%rd9, %rd4, %rd3;
	setp.eq.s64 	%p2, %rd9, 0;
	@%p2 bra 	LBB20_5;
// %bb.2:
	ld.global.u8 	%rs1, [__hnbs];
	setp.eq.s16 	%p3, %rs1, 3;
	@%p3 bra 	LBB20_4;
// %bb.3:
	mov.u16 	%rs2, 2;
	st.global.u8 	[__hnbs], %rs2;
LBB20_4:
	not.b64 	%rd10, %rd3;
	and.b64  	%rd11, %rd4, %rd10;
	st.global.u64 	[%rd1], %rd11;
	bra.uni 	LBB20_5;
                                        // -- End function
}
	// .globl	addBugSet               // -- Begin function addBugSet
.visible .func addBugSet(
	.param .b64 addBugSet_param_0
)                                       // @addBugSet
{
	.local .align 8 .b8 	__local_depot21[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<11>;

// %bb.0:
	mov.u64 	%SPL, __local_depot21;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [addBugSet_param_0];
	setp.ne.s64 	%p1, %rd2, 1258295;
	@%p1 bra 	LBB21_2;
// %bb.1:
	add.u64 	%rd3, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r2;
	cvt.u64.u32 	%rd4, %r1;
	mov.u64 	%rd5, __hnbs;
	add.s64 	%rd6, %rd5, %rd4;
	mov.u16 	%rs1, 3;
	st.global.u8 	[%rd6], %rs1;
	or.b64  	%rd7, %rd4, -2401018191707897856;
	st.global.u64 	[__signals], %rd7;
	mov.u32 	%r5, 3;
	st.local.v2.u32 	[%rd1], {%r1, %r5};
	mov.u64 	%rd8, _$_str1;
	cvta.global.u64 	%rd9, %rd8;
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd9;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd3;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r6, [retval0+0];
	} // callseq 11
LBB21_2:
	ret;
                                        // -- End function
}
	// .globl	parallel_mutate         // -- Begin function parallel_mutate
.visible .func parallel_mutate(
	.param .b64 parallel_mutate_param_0,
	.param .b32 parallel_mutate_param_1
)                                       // @parallel_mutate
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<28>;
	.reg .b64 	%rd<12>;

// %bb.0:
	ld.param.u64 	%rd5, [parallel_mutate_param_0];
	mov.u32 	%r5, %tid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mad.lo.s32 	%r8, %r7, %r6, %r5;
	shl.b32 	%r9, %r8, 11;
	cvt.u64.u32 	%rd6, %r9;
	add.s64 	%rd1, %rd5, %rd6;
	ld.global.u32 	%r1, [%rd1+64];
	setp.lt.u32 	%p1, %r1, 5;
	mul.wide.u32 	%rd8, %r8, 4;
	mov.u64 	%rd9, cuda_states;
	add.s64 	%rd4, %rd9, %rd8;
	ld.global.u32 	%r27, [%rd4];
	@%p1 bra 	LBB22_2;
// %bb.1:
	mad.lo.s32 	%r10, %r27, 1103515245, 12345;
	mad.lo.s32 	%r11, %r10, 1103515245, 12345;
	shr.u32 	%r12, %r10, 6;
	and.b32  	%r13, %r12, 2096128;
	bfe.u32 	%r14, %r11, 16, 10;
	or.b32  	%r15, %r14, %r13;
	mad.lo.s32 	%r27, %r11, 1103515245, 12345;
	shl.b32 	%r16, %r15, 10;
	bfe.u32 	%r17, %r27, 16, 10;
	or.b32  	%r18, %r16, %r17;
	st.global.u32 	[%rd4], %r27;
	mul.hi.u32 	%r19, %r18, 1374389535;
	shr.u32 	%r20, %r19, 5;
	mul.lo.s32 	%r21, %r20, 100;
	sub.s32 	%r22, %r18, %r21;
	setp.lt.u32 	%p2, %r22, 91;
	@%p2 bra 	LBB22_5;
LBB22_2:
	mad.lo.s32 	%r25, %r27, -2139243339, -1492899873;
	st.global.u32 	[%rd4], %r25;
	and.b32  	%r26, %r25, 65536;
	setp.ne.s32 	%p3, %r26, 0;
	@%p3 bra 	LBB22_4;
// %bb.3:
	cvta.global.u64 	%rd2, %rd1;
	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd2;
	call.uni 
	mutateCaller, 
	(
	param0
	);
	} // callseq 14
	bra.uni 	LBB22_6;
LBB22_4:
	add.s64 	%rd7, %rd1, 32;
	cvta.global.u64 	%rd3, %rd7;
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd3;
	call.uni 
	mutateCallvalue, 
	(
	param0
	);
	} // callseq 13
	bra.uni 	LBB22_6;
LBB22_5:
	add.s64 	%rd10, %rd1, 72;
	cvta.global.u64 	%rd11, %rd10;
	add.s32 	%r23, %r1, -4;
	shr.u32 	%r24, %r23, 5;
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd11;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r24;
	call.uni 
	mutateCalldata, 
	(
	param0, 
	param1
	);
	} // callseq 12
LBB22_6:
	bar.sync 	0;
	ret;
                                        // -- End function
}
	// .globl	mutateCaller            // -- Begin function mutateCaller
.visible .func mutateCaller(
	.param .b64 mutateCaller_param_0
)                                       // @mutateCaller
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<33>;
	.reg .b32 	%r<32>;
	.reg .b64 	%rd<12>;

// %bb.0:
	ld.param.u64 	%rd4, [mutateCaller_param_0];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mad.lo.s32 	%r5, %r4, %r3, %r2;
	mul.wide.u32 	%rd6, %r5, 4;
	mov.u64 	%rd7, cuda_states;
	add.s64 	%rd1, %rd7, %rd6;
	ld.global.u32 	%r6, [%rd1];
	mad.lo.s32 	%r7, %r6, 1103515245, 12345;
	mad.lo.s32 	%r8, %r7, 1103515245, 12345;
	shr.u32 	%r9, %r7, 6;
	and.b32  	%r10, %r9, 2096128;
	bfe.u32 	%r11, %r8, 16, 10;
	or.b32  	%r12, %r11, %r10;
	mad.lo.s32 	%r1, %r8, 1103515245, 12345;
	shl.b32 	%r13, %r12, 10;
	bfe.u32 	%r14, %r1, 16, 10;
	or.b32  	%r15, %r13, %r14;
	st.global.u32 	[%rd1], %r1;
	mul.hi.u32 	%r16, %r15, 1374389535;
	shr.u32 	%r17, %r16, 5;
	mul.lo.s32 	%r18, %r17, 100;
	sub.s32 	%r19, %r15, %r18;
	setp.lt.u32 	%p1, %r19, 80;
	mov.u64 	%rd11, 0;
	@%p1 bra 	LBB23_2;
// %bb.1:
	ld.volatile.global.u32 	%r20, [callers_pool_len];
	mad.lo.s32 	%r21, %r1, 1103515245, 12345;
	mad.lo.s32 	%r22, %r21, 1103515245, 12345;
	shr.u32 	%r23, %r21, 6;
	and.b32  	%r24, %r23, 2096128;
	bfe.u32 	%r25, %r22, 16, 10;
	or.b32  	%r26, %r25, %r24;
	mad.lo.s32 	%r27, %r22, 1103515245, 12345;
	shl.b32 	%r28, %r26, 10;
	bfe.u32 	%r29, %r27, 16, 10;
	or.b32  	%r30, %r28, %r29;
	st.global.u32 	[%rd1], %r27;
	rem.u32 	%r31, %r30, %r20;
	cvt.u64.u32 	%rd11, %r31;
LBB23_2:
	shl.b64 	%rd8, %rd11, 5;
	mov.u64 	%rd9, callers_pool;
	add.s64 	%rd10, %rd9, %rd8;
	ld.global.u8 	%rs1, [%rd10+31];
	st.u8 	[%rd4+31], %rs1;
	ld.global.u8 	%rs2, [%rd10+30];
	st.u8 	[%rd4+30], %rs2;
	ld.global.u8 	%rs3, [%rd10+29];
	st.u8 	[%rd4+29], %rs3;
	ld.global.u8 	%rs4, [%rd10+28];
	st.u8 	[%rd4+28], %rs4;
	ld.global.u8 	%rs5, [%rd10+27];
	st.u8 	[%rd4+27], %rs5;
	ld.global.u8 	%rs6, [%rd10+26];
	st.u8 	[%rd4+26], %rs6;
	ld.global.u8 	%rs7, [%rd10+25];
	st.u8 	[%rd4+25], %rs7;
	ld.global.u8 	%rs8, [%rd10+24];
	st.u8 	[%rd4+24], %rs8;
	ld.global.u8 	%rs9, [%rd10+23];
	st.u8 	[%rd4+23], %rs9;
	ld.global.u8 	%rs10, [%rd10+22];
	st.u8 	[%rd4+22], %rs10;
	ld.global.u8 	%rs11, [%rd10+21];
	st.u8 	[%rd4+21], %rs11;
	ld.global.u8 	%rs12, [%rd10+20];
	st.u8 	[%rd4+20], %rs12;
	ld.global.u8 	%rs13, [%rd10+19];
	st.u8 	[%rd4+19], %rs13;
	ld.global.u8 	%rs14, [%rd10+18];
	st.u8 	[%rd4+18], %rs14;
	ld.global.u8 	%rs15, [%rd10+17];
	st.u8 	[%rd4+17], %rs15;
	ld.global.u8 	%rs16, [%rd10+16];
	st.u8 	[%rd4+16], %rs16;
	ld.global.u8 	%rs17, [%rd10+15];
	st.u8 	[%rd4+15], %rs17;
	ld.global.u8 	%rs18, [%rd10+14];
	st.u8 	[%rd4+14], %rs18;
	ld.global.u8 	%rs19, [%rd10+13];
	st.u8 	[%rd4+13], %rs19;
	ld.global.u8 	%rs20, [%rd10+12];
	st.u8 	[%rd4+12], %rs20;
	ld.global.u8 	%rs21, [%rd10+11];
	st.u8 	[%rd4+11], %rs21;
	ld.global.u8 	%rs22, [%rd10+10];
	st.u8 	[%rd4+10], %rs22;
	ld.global.u8 	%rs23, [%rd10+9];
	st.u8 	[%rd4+9], %rs23;
	ld.global.u8 	%rs24, [%rd10+8];
	st.u8 	[%rd4+8], %rs24;
	ld.global.u8 	%rs25, [%rd10+7];
	st.u8 	[%rd4+7], %rs25;
	ld.global.u8 	%rs26, [%rd10+6];
	st.u8 	[%rd4+6], %rs26;
	ld.global.u8 	%rs27, [%rd10+5];
	st.u8 	[%rd4+5], %rs27;
	ld.global.u8 	%rs28, [%rd10+4];
	st.u8 	[%rd4+4], %rs28;
	ld.global.u8 	%rs29, [%rd10+3];
	st.u8 	[%rd4+3], %rs29;
	ld.global.u8 	%rs30, [%rd10+2];
	st.u8 	[%rd4+2], %rs30;
	ld.global.u8 	%rs31, [%rd10+1];
	st.u8 	[%rd4+1], %rs31;
	ld.global.u8 	%rs32, [%rd10];
	st.u8 	[%rd4], %rs32;
	ret;
                                        // -- End function
}
	// .globl	mutateCallvalue         // -- Begin function mutateCallvalue
.visible .func mutateCallvalue(
	.param .b64 mutateCallvalue_param_0
)                                       // @mutateCallvalue
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<6>;

// %bb.0:
	ld.param.u64 	%rd2, [mutateCallvalue_param_0];
	mov.u32 	%r5, %tid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mad.lo.s32 	%r8, %r7, %r6, %r5;
	mul.wide.u32 	%rd3, %r8, 4;
	mov.u64 	%rd4, cuda_states;
	add.s64 	%rd5, %rd4, %rd3;
	ld.global.u32 	%r9, [%rd5];
	mad.lo.s32 	%r10, %r9, 1103515245, 12345;
	mad.lo.s32 	%r11, %r10, 1103515245, 12345;
	shr.u32 	%r12, %r10, 6;
	and.b32  	%r13, %r12, 2096128;
	bfe.u32 	%r14, %r11, 16, 10;
	or.b32  	%r15, %r14, %r13;
	mad.lo.s32 	%r16, %r11, 1103515245, 12345;
	shl.b32 	%r17, %r15, 10;
	bfe.u32 	%r18, %r16, 16, 10;
	or.b32  	%r19, %r17, %r18;
	st.global.u32 	[%rd5], %r16;
	mul.hi.u32 	%r20, %r19, 613566757;
	sub.s32 	%r21, %r19, %r20;
	shr.u32 	%r22, %r21, 1;
	add.s32 	%r23, %r22, %r20;
	shr.u32 	%r24, %r23, 2;
	mul.lo.s32 	%r25, %r24, 7;
	sub.s32 	%r26, %r19, %r25;
	add.s32 	%r1, %r26, 1;
	add.s64 	%rd1, %rd2, 16;
	mov.u32 	%r29, 1;
LBB24_1:                                // =>This Inner Loop Header: Depth=1
	mov.u32 	%r27, 16;
	{ // callseq 15, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd1;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r27;
	call.uni 
	cuhavoc, 
	(
	param0, 
	param1
	);
	} // callseq 15
	shr.u32 	%r28, %r29, %r1;
	setp.eq.s32 	%p1, %r28, 0;
	add.s32 	%r29, %r29, 1;
	@%p1 bra 	LBB24_1;
// %bb.2:
	ret;
                                        // -- End function
}
	// .globl	mutateCalldata          // -- Begin function mutateCalldata
.visible .func mutateCalldata(
	.param .b64 mutateCalldata_param_0,
	.param .b32 mutateCalldata_param_1
)                                       // @mutateCalldata
{
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<27>;
	.reg .b32 	%r<102>;
	.reg .b64 	%rd<21>;

// %bb.0:
	ld.param.u32 	%r15, [mutateCalldata_param_1];
	ld.param.u64 	%rd8, [mutateCalldata_param_0];
	mov.u32 	%r16, %tid.x;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %ntid.x;
	mad.lo.s32 	%r19, %r18, %r17, %r16;
	mul.wide.u32 	%rd9, %r19, 4;
	mov.u64 	%rd10, cuda_states;
	add.s64 	%rd1, %rd10, %rd9;
	ld.global.u32 	%r20, [%rd1];
	mad.lo.s32 	%r21, %r20, 1103515245, 12345;
	mad.lo.s32 	%r22, %r21, 1103515245, 12345;
	shr.u32 	%r23, %r21, 6;
	and.b32  	%r24, %r23, 2096128;
	bfe.u32 	%r25, %r22, 16, 10;
	or.b32  	%r26, %r25, %r24;
	mad.lo.s32 	%r27, %r22, 1103515245, 12345;
	shl.b32 	%r28, %r26, 10;
	bfe.u32 	%r29, %r27, 16, 10;
	or.b32  	%r30, %r28, %r29;
	st.global.u32 	[%rd1], %r27;
	rem.u32 	%r101, %r30, %r15;
	mov.u64 	%rd12, argTypeMap;
	mov.u16 	%rs4, 0;
	mov.u32 	%r98, %r15;
	bra.uni 	LBB25_1;
LBB25_20:                               //   in Loop: Header=BB25_1 Depth=1
	add.s32 	%r31, %r101, 1;
	rem.u32 	%r101, %r31, %r15;
LBB25_21:                               //   in Loop: Header=BB25_1 Depth=1
	add.s32 	%r98, %r98, -1;
	@%p2 bra 	LBB25_1;
	bra.uni 	LBB25_22;
LBB25_1:                                // =>This Loop Header: Depth=1
                                        //     Child Loop BB25_4 Depth 2
	setp.eq.s32 	%p1, %r98, 0;
	@%p1 bra 	LBB25_22;
// %bb.2:                               //   in Loop: Header=BB25_1 Depth=1
	cvt.u64.u32 	%rd11, %r101;
	add.s64 	%rd13, %rd12, %rd11;
	ld.global.u8 	%rs1, [%rd13];
	cvt.u32.u16 	%r5, %rs1;
	add.s32 	%r6, %r5, -1;
	setp.gt.u32 	%p2, %r6, 65;
	@%p2 bra 	LBB25_20;
// %bb.3:                               //   in Loop: Header=BB25_1 Depth=1
	cvt.u64.u16 	%rd2, %rs1;
	ld.global.u32 	%r33, [%rd1];
	mad.lo.s32 	%r34, %r33, 1103515245, 12345;
	mad.lo.s32 	%r35, %r34, 1103515245, 12345;
	shr.u32 	%r36, %r34, 6;
	and.b32  	%r37, %r36, 2096128;
	bfe.u32 	%r38, %r35, 16, 10;
	or.b32  	%r39, %r38, %r37;
	mad.lo.s32 	%r40, %r35, 1103515245, 12345;
	shl.b32 	%r41, %r39, 10;
	bfe.u32 	%r42, %r40, 16, 10;
	or.b32  	%r43, %r41, %r42;
	st.global.u32 	[%rd1], %r40;
	mul.hi.u32 	%r44, %r43, 613566757;
	sub.s32 	%r45, %r43, %r44;
	shr.u32 	%r46, %r45, 1;
	add.s32 	%r47, %r46, %r44;
	shr.u32 	%r48, %r47, 2;
	mul.lo.s32 	%r49, %r48, 7;
	sub.s32 	%r50, %r43, %r49;
	add.s32 	%r7, %r50, 1;
	shl.b32 	%r51, %r101, 5;
	cvt.u64.u32 	%rd14, %r51;
	add.s64 	%rd3, %rd8, %rd14;
	sub.s64 	%rd15, %rd3, %rd2;
	add.s64 	%rd4, %rd15, 32;
	add.s64 	%rd5, %rd3, 12;
	add.s32 	%r8, %r5, -34;
	mov.u32 	%r100, 1;
	bra.uni 	LBB25_4;
LBB25_5:                                //   in Loop: Header=BB25_4 Depth=2
	add.s16 	%rs3, %rs1, -2;
	setp.lt.u16 	%p6, %rs3, 31;
	@%p6 bra 	LBB25_16;
	bra.uni 	LBB25_6;
LBB25_16:                               //   in Loop: Header=BB25_4 Depth=2
	{ // callseq 16, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd4;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r5;
	call.uni 
	cuhavoc, 
	(
	param0, 
	param1
	);
	} // callseq 16
LBB25_19:                               //   in Loop: Header=BB25_4 Depth=2
	shr.u32 	%r97, %r100, %r7;
	setp.eq.s32 	%p11, %r97, 0;
	add.s32 	%r100, %r100, 1;
	@%p11 bra 	LBB25_4;
	bra.uni 	LBB25_21;
LBB25_4:                                //   Parent Loop BB25_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.gt.s16 	%p3, %rs1, 33;
	@%p3 bra 	LBB25_12;
	bra.uni 	LBB25_5;
LBB25_12:                               //   in Loop: Header=BB25_4 Depth=2
	add.s16 	%rs2, %rs1, -35;
	setp.lt.u16 	%p4, %rs2, 32;
	@%p4 bra 	LBB25_18;
	bra.uni 	LBB25_13;
LBB25_18:                               //   in Loop: Header=BB25_4 Depth=2
	{ // callseq 17, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd3;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r8;
	call.uni 
	cuhavoc, 
	(
	param0, 
	param1
	);
	} // callseq 17
	bra.uni 	LBB25_19;
LBB25_6:                                //   in Loop: Header=BB25_4 Depth=2
	setp.eq.s16 	%p7, %rs1, 1;
	@%p7 bra 	LBB25_15;
// %bb.7:                               //   in Loop: Header=BB25_4 Depth=2
	setp.eq.s16 	%p8, %rs1, 33;
	@%p8 bra 	LBB25_8;
	bra.uni 	LBB25_19;
LBB25_8:                                //   in Loop: Header=BB25_4 Depth=2
	ld.global.u32 	%r55, [%rd1];
	mad.lo.s32 	%r56, %r55, 1103515245, 12345;
	mad.lo.s32 	%r57, %r56, 1103515245, 12345;
	shr.u32 	%r58, %r56, 6;
	and.b32  	%r59, %r58, 2096128;
	bfe.u32 	%r60, %r57, 16, 10;
	or.b32  	%r61, %r60, %r59;
	mad.lo.s32 	%r10, %r57, 1103515245, 12345;
	shl.b32 	%r62, %r61, 10;
	bfe.u32 	%r63, %r10, 16, 10;
	or.b32  	%r64, %r62, %r63;
	st.global.u32 	[%rd1], %r10;
	mul.hi.u32 	%r65, %r64, 1374389535;
	shr.u32 	%r66, %r65, 5;
	mul.lo.s32 	%r67, %r66, 100;
	sub.s32 	%r68, %r64, %r67;
	setp.gt.u32 	%p9, %r68, 89;
	@%p9 bra 	LBB25_17;
// %bb.9:                               //   in Loop: Header=BB25_4 Depth=2
	mad.lo.s32 	%r69, %r10, 1103515245, 12345;
	mad.lo.s32 	%r70, %r69, 1103515245, 12345;
	shr.u32 	%r71, %r69, 6;
	and.b32  	%r72, %r71, 2096128;
	bfe.u32 	%r73, %r70, 16, 10;
	or.b32  	%r74, %r73, %r72;
	mad.lo.s32 	%r11, %r70, 1103515245, 12345;
	shl.b32 	%r75, %r74, 10;
	bfe.u32 	%r76, %r11, 16, 10;
	or.b32  	%r77, %r75, %r76;
	st.global.u32 	[%rd1], %r11;
	mul.hi.u32 	%r78, %r77, 1374389535;
	shr.u32 	%r79, %r78, 5;
	mul.lo.s32 	%r80, %r79, 100;
	sub.s32 	%r81, %r77, %r80;
	setp.lt.u32 	%p10, %r81, 80;
	mov.u64 	%rd20, 0;
	@%p10 bra 	LBB25_11;
// %bb.10:                              //   in Loop: Header=BB25_4 Depth=2
	ld.volatile.global.u32 	%r82, [addresses_pool_len];
	mad.lo.s32 	%r83, %r11, 1103515245, 12345;
	mad.lo.s32 	%r84, %r83, 1103515245, 12345;
	shr.u32 	%r85, %r83, 6;
	and.b32  	%r86, %r85, 2096128;
	bfe.u32 	%r87, %r84, 16, 10;
	or.b32  	%r88, %r87, %r86;
	mad.lo.s32 	%r89, %r84, 1103515245, 12345;
	shl.b32 	%r90, %r88, 10;
	bfe.u32 	%r91, %r89, 16, 10;
	or.b32  	%r92, %r90, %r91;
	st.global.u32 	[%rd1], %r89;
	rem.u32 	%r93, %r92, %r82;
	cvt.u64.u32 	%rd20, %r93;
LBB25_11:                               //   in Loop: Header=BB25_4 Depth=2
	shl.b64 	%rd17, %rd20, 5;
	mov.u64 	%rd18, addresses_pool;
	add.s64 	%rd19, %rd18, %rd17;
	ld.global.u8 	%rs5, [%rd19+19];
	st.u8 	[%rd5+19], %rs5;
	ld.global.u8 	%rs6, [%rd19+18];
	st.u8 	[%rd5+18], %rs6;
	ld.global.u8 	%rs7, [%rd19+17];
	st.u8 	[%rd5+17], %rs7;
	ld.global.u8 	%rs8, [%rd19+16];
	st.u8 	[%rd5+16], %rs8;
	ld.global.u8 	%rs9, [%rd19+15];
	st.u8 	[%rd5+15], %rs9;
	ld.global.u8 	%rs10, [%rd19+14];
	st.u8 	[%rd5+14], %rs10;
	ld.global.u8 	%rs11, [%rd19+13];
	st.u8 	[%rd5+13], %rs11;
	ld.global.u8 	%rs12, [%rd19+12];
	st.u8 	[%rd5+12], %rs12;
	ld.global.u8 	%rs13, [%rd19+11];
	st.u8 	[%rd5+11], %rs13;
	ld.global.u8 	%rs14, [%rd19+10];
	st.u8 	[%rd5+10], %rs14;
	ld.global.u8 	%rs15, [%rd19+9];
	st.u8 	[%rd5+9], %rs15;
	ld.global.u8 	%rs16, [%rd19+8];
	st.u8 	[%rd5+8], %rs16;
	ld.global.u8 	%rs17, [%rd19+7];
	st.u8 	[%rd5+7], %rs17;
	ld.global.u8 	%rs18, [%rd19+6];
	st.u8 	[%rd5+6], %rs18;
	ld.global.u8 	%rs19, [%rd19+5];
	st.u8 	[%rd5+5], %rs19;
	ld.global.u8 	%rs20, [%rd19+4];
	st.u8 	[%rd5+4], %rs20;
	ld.global.u8 	%rs21, [%rd19+3];
	st.u8 	[%rd5+3], %rs21;
	ld.global.u8 	%rs22, [%rd19+2];
	st.u8 	[%rd5+2], %rs22;
	ld.global.u8 	%rs23, [%rd19+1];
	st.u8 	[%rd5+1], %rs23;
	ld.global.u8 	%rs24, [%rd19];
	st.u8 	[%rd5], %rs24;
	bra.uni 	LBB25_19;
LBB25_13:                               //   in Loop: Header=BB25_4 Depth=2
	setp.eq.s16 	%p5, %rs1, 34;
	@%p5 bra 	LBB25_14;
	bra.uni 	LBB25_19;
LBB25_14:                               //   in Loop: Header=BB25_4 Depth=2
	ld.global.u32 	%r94, [%rd1];
	mad.lo.s32 	%r95, %r94, -2139243339, -1492899873;
	shr.u32 	%r96, %r95, 16;
	st.global.u32 	[%rd1], %r95;
	cvt.u16.u32 	%rs25, %r96;
	and.b16  	%rs26, %rs25, 1;
	st.u8 	[%rd3+31], %rs26;
	bra.uni 	LBB25_19;
LBB25_15:                               //   in Loop: Header=BB25_4 Depth=2
	ld.global.u32 	%r52, [%rd1];
	mad.lo.s32 	%r53, %r52, -2139243339, -1492899873;
	shr.u32 	%r54, %r53, 16;
	st.global.u32 	[%rd1], %r53;
	st.u8 	[%rd3+31], %r54;
	bra.uni 	LBB25_19;
LBB25_17:                               //   in Loop: Header=BB25_4 Depth=2
	st.u8 	[%rd3+31], %rs4;
	st.u8 	[%rd3+30], %rs4;
	st.u8 	[%rd3+29], %rs4;
	st.u8 	[%rd3+28], %rs4;
	st.u8 	[%rd3+27], %rs4;
	st.u8 	[%rd3+26], %rs4;
	st.u8 	[%rd3+25], %rs4;
	st.u8 	[%rd3+24], %rs4;
	st.u8 	[%rd3+23], %rs4;
	st.u8 	[%rd3+22], %rs4;
	st.u8 	[%rd3+21], %rs4;
	st.u8 	[%rd3+20], %rs4;
	st.u8 	[%rd3+19], %rs4;
	st.u8 	[%rd3+18], %rs4;
	st.u8 	[%rd3+17], %rs4;
	st.u8 	[%rd3+16], %rs4;
	st.u8 	[%rd3+15], %rs4;
	st.u8 	[%rd3+14], %rs4;
	st.u8 	[%rd3+13], %rs4;
	st.u8 	[%rd3+12], %rs4;
	st.u8 	[%rd3+11], %rs4;
	st.u8 	[%rd3+10], %rs4;
	st.u8 	[%rd3+9], %rs4;
	st.u8 	[%rd3+8], %rs4;
	st.u8 	[%rd3+7], %rs4;
	st.u8 	[%rd3+6], %rs4;
	st.u8 	[%rd3+5], %rs4;
	st.u8 	[%rd3+4], %rs4;
	st.u8 	[%rd3+3], %rs4;
	st.u8 	[%rd3+2], %rs4;
	st.u8 	[%rd3+1], %rs4;
	st.u8 	[%rd3], %rs4;
	bra.uni 	LBB25_19;
LBB25_22:
	ret;
                                        // -- End function
}
	// .globl	cuhavoc                 // -- Begin function cuhavoc
.visible .func cuhavoc(
	.param .b64 cuhavoc_param_0,
	.param .b32 cuhavoc_param_1
)                                       // @cuhavoc
{
	.local .align 1 .b8 	__local_depot26[2048];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<64>;
	.reg .b16 	%rs<46>;
	.reg .b32 	%r<502>;
	.reg .b64 	%rd<208>;

// %bb.0:
	mov.u64 	%SPL, __local_depot26;
	ld.param.u32 	%r10, [cuhavoc_param_1];
	ld.param.u64 	%rd44, [cuhavoc_param_0];
	mov.u32 	%r12, %tid.x;
	mov.u32 	%r13, %ctaid.x;
	mov.u32 	%r14, %ntid.x;
	mad.lo.s32 	%r1, %r14, %r13, %r12;
	mul.wide.u32 	%rd46, %r1, 4;
	mov.u64 	%rd47, cuda_states;
	add.s64 	%rd2, %rd47, %rd46;
	ld.global.u32 	%r15, [%rd2];
	mad.lo.s32 	%r16, %r15, 1103515245, 12345;
	mad.lo.s32 	%r17, %r16, 1103515245, 12345;
	shr.u32 	%r18, %r16, 6;
	and.b32  	%r19, %r18, 2096128;
	bfe.u32 	%r20, %r17, 16, 10;
	or.b32  	%r21, %r20, %r19;
	mad.lo.s32 	%r2, %r17, 1103515245, 12345;
	shl.b32 	%r22, %r21, 10;
	bfe.u32 	%r23, %r2, 16, 10;
	or.b32  	%r24, %r22, %r23;
	st.global.u32 	[%rd2], %r2;
	mul.hi.u32 	%r25, %r24, 954437177;
	shr.u32 	%r26, %r25, 2;
	mul.lo.s32 	%r27, %r26, 18;
	sub.s32 	%r11, %r24, %r27;
	setp.gt.s32 	%p1, %r11, 8;
	@%p1 bra 	LBB26_18;
// %bb.1:
	setp.gt.s32 	%p14, %r11, 3;
	@%p14 bra 	LBB26_9;
	bra.uni 	LBB26_2;
LBB26_9:
	setp.gt.s32 	%p15, %r11, 5;
	@%p15 bra 	LBB26_13;
	bra.uni 	LBB26_10;
LBB26_13:
	setp.eq.s32 	%p16, %r11, 6;
	@%p16 bra 	LBB26_44;
// %bb.14:
	setp.eq.s32 	%p17, %r11, 7;
	@%p17 bra 	LBB26_47;
// %bb.15:
	setp.eq.s32 	%p18, %r11, 8;
	@%p18 bra 	LBB26_16;
	bra.uni 	LBB26_76;
LBB26_16:
	setp.lt.u32 	%p59, %r10, 4;
	@%p59 bra 	LBB26_76;
// %bb.17:
	add.s32 	%r311, %r10, -3;
	mad.lo.s32 	%r312, %r2, 1103515245, 12345;
	mad.lo.s32 	%r313, %r312, 1103515245, 12345;
	shr.u32 	%r314, %r312, 6;
	and.b32  	%r315, %r314, 2096128;
	bfe.u32 	%r316, %r313, 16, 10;
	or.b32  	%r317, %r316, %r315;
	mad.lo.s32 	%r318, %r313, 1103515245, 12345;
	shl.b32 	%r319, %r317, 10;
	bfe.u32 	%r320, %r318, 16, 10;
	or.b32  	%r321, %r319, %r320;
	rem.u32 	%r322, %r321, %r311;
	mad.lo.s32 	%r323, %r318, 1103515245, 12345;
	mad.lo.s32 	%r324, %r323, 1103515245, 12345;
	shr.u32 	%r325, %r323, 6;
	and.b32  	%r326, %r325, 2096128;
	bfe.u32 	%r327, %r324, 16, 10;
	or.b32  	%r328, %r327, %r326;
	mad.lo.s32 	%r329, %r324, 1103515245, 12345;
	shl.b32 	%r330, %r328, 10;
	bfe.u32 	%r331, %r329, 16, 10;
	or.b32  	%r332, %r330, %r331;
	st.global.u32 	[%rd2], %r329;
	mul.hi.u32 	%r333, %r332, -736280107;
	sub.s32 	%r334, %r332, %r333;
	shr.u32 	%r335, %r334, 1;
	add.s32 	%r336, %r335, %r333;
	shr.u32 	%r337, %r336, 5;
	mul.lo.s32 	%r338, %r337, 35;
	sub.s32 	%r339, %r332, %r338;
	add.s32 	%r340, %r339, 1;
	cvt.u64.u32 	%rd181, %r322;
	add.s64 	%rd182, %rd44, %rd181;
	ld.u8 	%r341, [%rd182];
	ld.u8 	%r342, [%rd182+1];
	shl.b32 	%r343, %r342, 8;
	or.b32  	%r344, %r343, %r341;
	ld.u8 	%r345, [%rd182+2];
	ld.u8 	%r346, [%rd182+3];
	shl.b32 	%r347, %r346, 8;
	or.b32  	%r348, %r347, %r345;
	shl.b32 	%r349, %r348, 16;
	or.b32  	%r350, %r349, %r344;
	mad.lo.s32 	%r351, %r329, -2139243339, -1492899873;
	st.global.u32 	[%rd2], %r351;
	and.b32  	%r352, %r351, 65536;
	setp.eq.s32 	%p60, %r352, 0;
	shr.u32 	%r353, %r350, 24;
	shr.u32 	%r354, %r350, 8;
	and.b32  	%r355, %r354, 65280;
	or.b32  	%r356, %r355, %r353;
	shl.b32 	%r357, %r350, 24;
	shl.b32 	%r358, %r350, 8;
	and.b32  	%r359, %r358, 16711680;
	or.b32  	%r360, %r357, %r359;
	or.b32  	%r361, %r360, %r356;
	not.b32 	%r362, %r339;
	selp.b32 	%r363, %r362, %r340, %p60;
	add.s32 	%r364, %r361, %r363;
	shr.u32 	%r365, %r364, 24;
	st.u8 	[%rd182+3], %r364;
	shr.u32 	%r366, %r364, 8;
	st.u8 	[%rd182+2], %r366;
	shr.u32 	%r367, %r364, 16;
	st.u8 	[%rd182+1], %r367;
	st.u8 	[%rd182], %r365;
	bra.uni 	LBB26_76;
LBB26_18:
	setp.gt.s32 	%p2, %r11, 12;
	@%p2 bra 	LBB26_28;
	bra.uni 	LBB26_19;
LBB26_28:
	setp.gt.s32 	%p3, %r11, 14;
	@%p3 bra 	LBB26_34;
	bra.uni 	LBB26_29;
LBB26_34:
	setp.eq.s32 	%p4, %r11, 15;
	@%p4 bra 	LBB26_59;
// %bb.35:
	setp.eq.s32 	%p5, %r11, 16;
	@%p5 bra 	LBB26_66;
// %bb.36:
	setp.eq.s32 	%p6, %r11, 17;
	@%p6 bra 	LBB26_37;
	bra.uni 	LBB26_76;
LBB26_37:
	mul.wide.s32 	%rd48, %r1, 4;
	mov.u64 	%rd49, __snap_map;
	add.s64 	%rd50, %rd49, %rd48;
	ld.global.u32 	%rd34, [%rd50];
	mov.u64 	%rd51, l2snap_lens;
	add.s64 	%rd52, %rd51, %rd34;
	ld.global.u8 	%r9, [%rd52];
	setp.eq.s32 	%p26, %r9, 0;
	@%p26 bra 	LBB26_76;
// %bb.38:
	mad.lo.s32 	%r28, %r2, 1103515245, 12345;
	mad.lo.s32 	%r29, %r28, 1103515245, 12345;
	shr.u32 	%r30, %r28, 6;
	and.b32  	%r31, %r30, 2096128;
	bfe.u32 	%r32, %r29, 16, 10;
	or.b32  	%r33, %r32, %r31;
	mad.lo.s32 	%r34, %r29, 1103515245, 12345;
	shl.b32 	%r35, %r33, 10;
	bfe.u32 	%r36, %r34, 16, 10;
	or.b32  	%r37, %r35, %r36;
	rem.u32 	%r38, %r37, %r9;
	mad.lo.s32 	%r39, %r34, 1103515245, 12345;
	mad.lo.s32 	%r40, %r39, 1103515245, 12345;
	shr.u32 	%r41, %r39, 6;
	and.b32  	%r42, %r41, 2096128;
	bfe.u32 	%r43, %r40, 16, 10;
	or.b32  	%r44, %r43, %r42;
	mad.lo.s32 	%r45, %r40, 1103515245, 12345;
	shl.b32 	%r46, %r44, 10;
	bfe.u32 	%r47, %r45, 16, 10;
	or.b32  	%r48, %r46, %r47;
	st.global.u32 	[%rd2], %r45;
	mul.hi.u32 	%r49, %r48, 1374389535;
	shr.u32 	%r50, %r49, 5;
	mul.lo.s32 	%r51, %r50, 100;
	sub.s32 	%r52, %r48, %r51;
	setp.gt.u32 	%p27, %r52, 89;
	cvt.u64.u32 	%rd35, %r38;
	@%p27 bra 	LBB26_74;
// %bb.39:
	shl.b64 	%rd63, %rd34, 13;
	mov.u64 	%rd64, l2snaps;
	add.s64 	%rd65, %rd64, %rd63;
	shl.b64 	%rd66, %rd35, 6;
	add.s64 	%rd67, %rd65, %rd66;
	cvt.u64.u32 	%rd36, %r10;
	sub.s64 	%rd68, %rd67, %rd36;
	add.s64 	%rd37, %rd68, 64;
	setp.eq.s32 	%p30, %r10, 0;
	mov.u64 	%rd206, 0;
	@%p30 bra 	LBB26_76;
LBB26_40:                               // %loop-memcpy-expansion23
                                        // =>This Inner Loop Header: Depth=1
	add.s64 	%rd69, %rd37, %rd206;
	ld.global.u8 	%rs7, [%rd69];
	add.s64 	%rd70, %rd44, %rd206;
	st.u8 	[%rd70], %rs7;
	add.s64 	%rd206, %rd206, 1;
	setp.lt.u64 	%p31, %rd206, %rd36;
	@%p31 bra 	LBB26_40;
	bra.uni 	LBB26_76;
LBB26_2:
	setp.gt.s32 	%p21, %r11, 1;
	@%p21 bra 	LBB26_6;
// %bb.3:
	setp.eq.s32 	%p24, %r11, 0;
	@%p24 bra 	LBB26_41;
// %bb.4:
	setp.eq.s32 	%p25, %r11, 1;
	@%p25 bra 	LBB26_5;
	bra.uni 	LBB26_76;
LBB26_5:
	mad.lo.s32 	%r475, %r2, 1103515245, 12345;
	mad.lo.s32 	%r476, %r475, 1103515245, 12345;
	shr.u32 	%r477, %r475, 6;
	and.b32  	%r478, %r477, 2096128;
	bfe.u32 	%r479, %r476, 16, 10;
	or.b32  	%r480, %r479, %r478;
	mad.lo.s32 	%r481, %r476, 1103515245, 12345;
	shl.b32 	%r482, %r480, 10;
	bfe.u32 	%r483, %r481, 16, 10;
	or.b32  	%r484, %r482, %r483;
	st.global.u32 	[%rd2], %r481;
	rem.u32 	%r485, %r484, %r10;
	cvt.u64.u32 	%rd194, %r485;
	add.s64 	%rd195, %rd44, %rd194;
	ld.u8 	%rs41, [%rd195];
	not.b16 	%rs42, %rs41;
	st.u8 	[%rd195], %rs42;
	bra.uni 	LBB26_76;
LBB26_19:
	setp.gt.s32 	%p9, %r11, 10;
	@%p9 bra 	LBB26_23;
// %bb.20:
	setp.eq.s32 	%p12, %r11, 9;
	@%p12 bra 	LBB26_49;
// %bb.21:
	setp.eq.s32 	%p13, %r11, 10;
	@%p13 bra 	LBB26_22;
	bra.uni 	LBB26_76;
LBB26_22:
	mad.lo.s32 	%r254, %r2, 1103515245, 12345;
	mad.lo.s32 	%r255, %r254, 1103515245, 12345;
	shr.u32 	%r256, %r254, 6;
	and.b32  	%r257, %r256, 2096128;
	bfe.u32 	%r258, %r255, 16, 10;
	or.b32  	%r259, %r258, %r257;
	mad.lo.s32 	%r260, %r255, 1103515245, 12345;
	shl.b32 	%r261, %r259, 10;
	bfe.u32 	%r262, %r260, 16, 10;
	or.b32  	%r263, %r261, %r262;
	mul.hi.u32 	%r264, %r263, 954437177;
	shr.u32 	%r265, %r264, 1;
	mul.lo.s32 	%r266, %r265, 9;
	sub.s32 	%r267, %r263, %r266;
	cvt.u64.u32 	%rd120, %r267;
	mov.u64 	%rd121, interesting_8;
	add.s64 	%rd122, %rd121, %rd120;
	ld.const.u8 	%rs17, [%rd122];
	mad.lo.s32 	%r268, %r260, 1103515245, 12345;
	mad.lo.s32 	%r269, %r268, 1103515245, 12345;
	shr.u32 	%r270, %r268, 6;
	and.b32  	%r271, %r270, 2096128;
	bfe.u32 	%r272, %r269, 16, 10;
	or.b32  	%r273, %r272, %r271;
	mad.lo.s32 	%r274, %r269, 1103515245, 12345;
	shl.b32 	%r275, %r273, 10;
	bfe.u32 	%r276, %r274, 16, 10;
	or.b32  	%r277, %r275, %r276;
	st.global.u32 	[%rd2], %r274;
	rem.u32 	%r278, %r277, %r10;
	cvt.u64.u32 	%rd123, %r278;
	add.s64 	%rd124, %rd44, %rd123;
	st.u8 	[%rd124], %rs17;
	bra.uni 	LBB26_76;
LBB26_10:
	setp.eq.s32 	%p19, %r11, 4;
	@%p19 bra 	LBB26_43;
// %bb.11:
	setp.eq.s32 	%p20, %r11, 5;
	@%p20 bra 	LBB26_12;
	bra.uni 	LBB26_76;
LBB26_12:
	mad.lo.s32 	%r429, %r2, -2139243339, -1492899873;
	shr.u32 	%r430, %r429, 16;
	mad.lo.s32 	%r431, %r429, 1103515245, 12345;
	mad.lo.s32 	%r432, %r431, 1103515245, 12345;
	shr.u32 	%r433, %r431, 6;
	and.b32  	%r434, %r433, 2096128;
	bfe.u32 	%r435, %r432, 16, 10;
	or.b32  	%r436, %r435, %r434;
	mad.lo.s32 	%r437, %r432, 1103515245, 12345;
	shl.b32 	%r438, %r436, 10;
	bfe.u32 	%r439, %r437, 16, 10;
	or.b32  	%r440, %r438, %r439;
	st.global.u32 	[%rd2], %r437;
	rem.u32 	%r441, %r440, %r10;
	cvt.u64.u32 	%rd186, %r441;
	add.s64 	%rd187, %rd44, %rd186;
	st.u8 	[%rd187], %r430;
	bra.uni 	LBB26_76;
LBB26_29:
	setp.eq.s32 	%p7, %r11, 13;
	@%p7 bra 	LBB26_56;
// %bb.30:
	setp.eq.s32 	%p8, %r11, 14;
	@%p8 bra 	LBB26_31;
	bra.uni 	LBB26_76;
LBB26_31:
	setp.eq.s32 	%p47, %r10, 0;
	@%p47 bra 	LBB26_76;
// %bb.32:
	mad.lo.s32 	%r101, %r2, 1103515245, 12345;
	mad.lo.s32 	%r102, %r101, 1103515245, 12345;
	shr.u32 	%r103, %r101, 6;
	and.b32  	%r104, %r103, 2096128;
	bfe.u32 	%r105, %r102, 16, 10;
	or.b32  	%r106, %r105, %r104;
	mad.lo.s32 	%r107, %r102, 1103515245, 12345;
	shl.b32 	%r108, %r106, 10;
	bfe.u32 	%r109, %r107, 16, 10;
	or.b32  	%r110, %r108, %r109;
	rem.u32 	%r111, %r110, %r10;
	sub.s32 	%r112, %r10, %r111;
	min.u32 	%r113, %r112, 16;
	mad.lo.s32 	%r114, %r107, 1103515245, 12345;
	mad.lo.s32 	%r115, %r114, 1103515245, 12345;
	shr.u32 	%r116, %r114, 6;
	and.b32  	%r117, %r116, 2096128;
	bfe.u32 	%r118, %r115, 16, 10;
	or.b32  	%r119, %r118, %r117;
	mad.lo.s32 	%r120, %r115, 1103515245, 12345;
	shl.b32 	%r121, %r119, 10;
	bfe.u32 	%r122, %r120, 16, 10;
	or.b32  	%r123, %r121, %r122;
	rem.u32 	%r124, %r123, %r113;
	add.s32 	%r125, %r124, 1;
	cvt.u64.u32 	%rd8, %r125;
	mad.lo.s32 	%r126, %r120, -2139243339, -1492899873;
	shr.u32 	%r127, %r126, 16;
	st.global.u32 	[%rd2], %r126;
	cvt.u16.u32 	%rs5, %r127;
	cvt.u64.u32 	%rd99, %r111;
	add.s64 	%rd9, %rd44, %rd99;
	setp.eq.s32 	%p48, %r125, 0;
	mov.u64 	%rd199, 0;
	@%p48 bra 	LBB26_76;
LBB26_33:                               // %loadstoreloop7
                                        // =>This Inner Loop Header: Depth=1
	add.s64 	%rd100, %rd9, %rd199;
	st.u8 	[%rd100], %rs5;
	add.s64 	%rd199, %rd199, 1;
	setp.lt.u64 	%p49, %rd199, %rd8;
	@%p49 bra 	LBB26_33;
	bra.uni 	LBB26_76;
LBB26_6:
	setp.eq.s32 	%p22, %r11, 2;
	@%p22 bra 	LBB26_42;
// %bb.7:
	setp.eq.s32 	%p23, %r11, 3;
	@%p23 bra 	LBB26_8;
	bra.uni 	LBB26_76;
LBB26_8:
	mad.lo.s32 	%r453, %r2, 1103515245, 12345;
	mad.lo.s32 	%r454, %r453, 1103515245, 12345;
	shr.u32 	%r455, %r453, 6;
	and.b32  	%r456, %r455, 2096128;
	bfe.u32 	%r457, %r454, 16, 10;
	or.b32  	%r458, %r457, %r456;
	mad.lo.s32 	%r459, %r454, 1103515245, 12345;
	shl.b32 	%r460, %r458, 10;
	bfe.u32 	%r461, %r459, 16, 10;
	or.b32  	%r462, %r460, %r461;
	st.global.u32 	[%rd2], %r459;
	rem.u32 	%r463, %r462, %r10;
	cvt.u64.u32 	%rd190, %r463;
	add.s64 	%rd191, %rd44, %rd190;
	ld.u8 	%rs37, [%rd191];
	add.s16 	%rs38, %rs37, -1;
	st.u8 	[%rd191], %rs38;
	bra.uni 	LBB26_76;
LBB26_23:
	setp.eq.s32 	%p10, %r11, 11;
	@%p10 bra 	LBB26_51;
// %bb.24:
	setp.eq.s32 	%p11, %r11, 12;
	@%p11 bra 	LBB26_25;
	bra.uni 	LBB26_76;
LBB26_25:
	setp.lt.u32 	%p53, %r10, 4;
	@%p53 bra 	LBB26_76;
// %bb.26:
	mad.lo.s32 	%r164, %r2, 1103515245, 12345;
	mad.lo.s32 	%r165, %r164, 1103515245, 12345;
	shr.u32 	%r166, %r164, 6;
	and.b32  	%r167, %r166, 2096128;
	bfe.u32 	%r168, %r165, 16, 10;
	or.b32  	%r169, %r168, %r167;
	mad.lo.s32 	%r170, %r165, 1103515245, 12345;
	shl.b32 	%r171, %r169, 10;
	bfe.u32 	%r172, %r170, 16, 10;
	or.b32  	%r173, %r171, %r172;
	mul.hi.u32 	%r174, %r173, 795364315;
	sub.s32 	%r175, %r173, %r174;
	shr.u32 	%r176, %r175, 1;
	add.s32 	%r177, %r176, %r174;
	shr.u32 	%r178, %r177, 4;
	mul.lo.s32 	%r179, %r178, 27;
	sub.s32 	%r180, %r173, %r179;
	mul.wide.u32 	%rd106, %r180, 4;
	mov.u64 	%rd107, interesting_32;
	add.s64 	%rd108, %rd107, %rd106;
	ld.const.u32 	%r4, [%rd108];
	mad.lo.s32 	%r5, %r170, -2139243339, -1492899873;
	and.b32  	%r181, %r5, 65536;
	setp.eq.s32 	%p54, %r181, 0;
	@%p54 bra 	LBB26_55;
	bra.uni 	LBB26_27;
LBB26_55:
	shr.u32 	%r197, %r4, 24;
	add.s32 	%r198, %r10, -3;
	mad.lo.s32 	%r199, %r5, 1103515245, 12345;
	mad.lo.s32 	%r200, %r199, 1103515245, 12345;
	shr.u32 	%r201, %r199, 6;
	and.b32  	%r202, %r201, 2096128;
	bfe.u32 	%r203, %r200, 16, 10;
	or.b32  	%r204, %r203, %r202;
	mad.lo.s32 	%r205, %r200, 1103515245, 12345;
	shl.b32 	%r206, %r204, 10;
	bfe.u32 	%r207, %r205, 16, 10;
	or.b32  	%r208, %r206, %r207;
	st.global.u32 	[%rd2], %r205;
	rem.u32 	%r209, %r208, %r198;
	cvt.u64.u32 	%rd111, %r209;
	add.s64 	%rd112, %rd44, %rd111;
	st.u8 	[%rd112+3], %r4;
	shr.u32 	%r210, %r4, 8;
	st.u8 	[%rd112+2], %r210;
	shr.u32 	%r211, %r4, 16;
	st.u8 	[%rd112+1], %r211;
	st.u8 	[%rd112], %r197;
	bra.uni 	LBB26_76;
LBB26_41:
	shl.b32 	%r486, %r10, 3;
	mad.lo.s32 	%r487, %r2, 1103515245, 12345;
	mad.lo.s32 	%r488, %r487, 1103515245, 12345;
	shr.u32 	%r489, %r487, 6;
	and.b32  	%r490, %r489, 2096128;
	bfe.u32 	%r491, %r488, 16, 10;
	or.b32  	%r492, %r491, %r490;
	mad.lo.s32 	%r493, %r488, 1103515245, 12345;
	shl.b32 	%r494, %r492, 10;
	bfe.u32 	%r495, %r493, 16, 10;
	or.b32  	%r496, %r494, %r495;
	st.global.u32 	[%rd2], %r493;
	rem.u32 	%r497, %r496, %r486;
	and.b32  	%r498, %r497, 7;
	mov.u32 	%r499, 128;
	shr.u32 	%r500, %r499, %r498;
	shr.u32 	%r501, %r497, 3;
	cvt.u64.u32 	%rd196, %r501;
	add.s64 	%rd197, %rd44, %rd196;
	ld.u8 	%rs43, [%rd197];
	cvt.u16.u32 	%rs44, %r500;
	xor.b16  	%rs45, %rs43, %rs44;
	st.u8 	[%rd197], %rs45;
	bra.uni 	LBB26_76;
LBB26_49:
	setp.lt.u32 	%p57, %r10, 8;
	@%p57 bra 	LBB26_76;
// %bb.50:
	add.s32 	%r279, %r10, -7;
	mad.lo.s32 	%r280, %r2, 1103515245, 12345;
	mad.lo.s32 	%r281, %r280, 1103515245, 12345;
	shr.u32 	%r282, %r280, 6;
	and.b32  	%r283, %r282, 2096128;
	bfe.u32 	%r284, %r281, 16, 10;
	or.b32  	%r285, %r284, %r283;
	mad.lo.s32 	%r286, %r281, 1103515245, 12345;
	shl.b32 	%r287, %r285, 10;
	bfe.u32 	%r288, %r286, 16, 10;
	or.b32  	%r289, %r287, %r288;
	rem.u32 	%r290, %r289, %r279;
	mad.lo.s32 	%r291, %r286, 1103515245, 12345;
	mad.lo.s32 	%r292, %r291, 1103515245, 12345;
	shr.u32 	%r293, %r291, 6;
	and.b32  	%r294, %r293, 2096128;
	bfe.u32 	%r295, %r292, 16, 10;
	or.b32  	%r296, %r295, %r294;
	mad.lo.s32 	%r297, %r292, 1103515245, 12345;
	shl.b32 	%r298, %r296, 10;
	bfe.u32 	%r299, %r297, 16, 10;
	or.b32  	%r300, %r298, %r299;
	mul.hi.u32 	%r301, %r300, -736280107;
	sub.s32 	%r302, %r300, %r301;
	shr.u32 	%r303, %r302, 1;
	add.s32 	%r304, %r303, %r301;
	shr.u32 	%r305, %r304, 5;
	mul.lo.s32 	%r306, %r305, 35;
	sub.s32 	%r307, %r300, %r306;
	add.s32 	%r308, %r307, 1;
	cvt.u64.u32 	%rd125, %r308;
	cvt.u64.u32 	%rd126, %r290;
	add.s64 	%rd127, %rd44, %rd126;
	ld.u8 	%rd128, [%rd127];
	ld.u8 	%rd129, [%rd127+1];
	shl.b64 	%rd130, %rd129, 8;
	or.b64  	%rd131, %rd130, %rd128;
	ld.u8 	%rd132, [%rd127+2];
	ld.u8 	%rd133, [%rd127+3];
	shl.b64 	%rd134, %rd133, 8;
	or.b64  	%rd135, %rd134, %rd132;
	shl.b64 	%rd136, %rd135, 16;
	or.b64  	%rd137, %rd136, %rd131;
	ld.u8 	%rd138, [%rd127+4];
	ld.u8 	%rd139, [%rd127+5];
	shl.b64 	%rd140, %rd139, 8;
	or.b64  	%rd141, %rd140, %rd138;
	ld.u8 	%rd142, [%rd127+6];
	ld.u8 	%rd143, [%rd127+7];
	shl.b64 	%rd144, %rd143, 8;
	or.b64  	%rd145, %rd144, %rd142;
	shl.b64 	%rd146, %rd145, 16;
	or.b64  	%rd147, %rd146, %rd141;
	shl.b64 	%rd148, %rd147, 32;
	or.b64  	%rd149, %rd148, %rd137;
	mad.lo.s32 	%r309, %r297, -2139243339, -1492899873;
	st.global.u32 	[%rd2], %r309;
	and.b32  	%r310, %r309, 65536;
	setp.eq.s32 	%p58, %r310, 0;
	shr.u64 	%rd150, %rd149, 56;
	shr.u64 	%rd151, %rd149, 40;
	and.b64  	%rd152, %rd151, 65280;
	or.b64  	%rd153, %rd152, %rd150;
	shr.u64 	%rd154, %rd149, 24;
	and.b64  	%rd155, %rd154, 16711680;
	shr.u64 	%rd156, %rd149, 8;
	and.b64  	%rd157, %rd156, 4278190080;
	or.b64  	%rd158, %rd157, %rd155;
	or.b64  	%rd159, %rd158, %rd153;
	shl.b64 	%rd160, %rd149, 8;
	and.b64  	%rd161, %rd160, 1095216660480;
	shl.b64 	%rd162, %rd149, 24;
	and.b64  	%rd163, %rd162, 280375465082880;
	or.b64  	%rd164, %rd163, %rd161;
	shl.b64 	%rd165, %rd149, 56;
	shl.b64 	%rd166, %rd149, 40;
	and.b64  	%rd167, %rd166, 71776119061217280;
	or.b64  	%rd168, %rd165, %rd167;
	or.b64  	%rd169, %rd168, %rd164;
	or.b64  	%rd170, %rd169, %rd159;
	neg.s64 	%rd171, %rd125;
	selp.b64 	%rd172, %rd171, %rd125, %p58;
	add.s64 	%rd173, %rd170, %rd172;
	shr.u64 	%rd174, %rd173, 56;
	shr.u64 	%rd175, %rd173, 40;
	st.u8 	[%rd127+7], %rd173;
	shr.u64 	%rd176, %rd173, 8;
	st.u8 	[%rd127+6], %rd176;
	shr.u64 	%rd177, %rd173, 16;
	st.u8 	[%rd127+5], %rd177;
	shr.u64 	%rd178, %rd173, 24;
	st.u8 	[%rd127+4], %rd178;
	shr.u64 	%rd179, %rd173, 32;
	st.u8 	[%rd127+3], %rd179;
	st.u8 	[%rd127+2], %rd175;
	shr.u64 	%rd180, %rd173, 48;
	st.u8 	[%rd127+1], %rd180;
	st.u8 	[%rd127], %rd174;
	bra.uni 	LBB26_76;
LBB26_42:
	mad.lo.s32 	%r464, %r2, 1103515245, 12345;
	mad.lo.s32 	%r465, %r464, 1103515245, 12345;
	shr.u32 	%r466, %r464, 6;
	and.b32  	%r467, %r466, 2096128;
	bfe.u32 	%r468, %r465, 16, 10;
	or.b32  	%r469, %r468, %r467;
	mad.lo.s32 	%r470, %r465, 1103515245, 12345;
	shl.b32 	%r471, %r469, 10;
	bfe.u32 	%r472, %r470, 16, 10;
	or.b32  	%r473, %r471, %r472;
	st.global.u32 	[%rd2], %r470;
	rem.u32 	%r474, %r473, %r10;
	cvt.u64.u32 	%rd192, %r474;
	add.s64 	%rd193, %rd44, %rd192;
	ld.u8 	%rs39, [%rd193];
	add.s16 	%rs40, %rs39, 1;
	st.u8 	[%rd193], %rs40;
	bra.uni 	LBB26_76;
LBB26_51:
	setp.lt.u32 	%p55, %r10, 2;
	@%p55 bra 	LBB26_76;
// %bb.52:
	mad.lo.s32 	%r212, %r2, 1103515245, 12345;
	mad.lo.s32 	%r213, %r212, 1103515245, 12345;
	shr.u32 	%r214, %r212, 6;
	and.b32  	%r215, %r214, 2096128;
	bfe.u32 	%r216, %r213, 16, 10;
	or.b32  	%r217, %r216, %r215;
	mad.lo.s32 	%r218, %r213, 1103515245, 12345;
	shl.b32 	%r219, %r217, 10;
	bfe.u32 	%r220, %r218, 16, 10;
	or.b32  	%r221, %r219, %r220;
	mul.hi.u32 	%r222, %r221, -1356305461;
	sub.s32 	%r223, %r221, %r222;
	shr.u32 	%r224, %r223, 1;
	add.s32 	%r225, %r224, %r222;
	shr.u32 	%r226, %r225, 4;
	mul.lo.s32 	%r227, %r226, 19;
	sub.s32 	%r228, %r221, %r227;
	mul.wide.u32 	%rd113, %r228, 2;
	mov.u64 	%rd114, interesting_16;
	add.s64 	%rd115, %rd114, %rd113;
	ld.const.u16 	%rs3, [%rd115];
	mad.lo.s32 	%r3, %r218, -2139243339, -1492899873;
	and.b32  	%r229, %r3, 65536;
	setp.eq.s32 	%p56, %r229, 0;
	@%p56 bra 	LBB26_54;
	bra.uni 	LBB26_53;
LBB26_54:
	shr.u16 	%rs16, %rs3, 8;
	add.s32 	%r242, %r10, -1;
	mad.lo.s32 	%r243, %r3, 1103515245, 12345;
	mad.lo.s32 	%r244, %r243, 1103515245, 12345;
	shr.u32 	%r245, %r243, 6;
	and.b32  	%r246, %r245, 2096128;
	bfe.u32 	%r247, %r244, 16, 10;
	or.b32  	%r248, %r247, %r246;
	mad.lo.s32 	%r249, %r244, 1103515245, 12345;
	shl.b32 	%r250, %r248, 10;
	bfe.u32 	%r251, %r249, 16, 10;
	or.b32  	%r252, %r250, %r251;
	st.global.u32 	[%rd2], %r249;
	rem.u32 	%r253, %r252, %r242;
	cvt.u64.u32 	%rd118, %r253;
	add.s64 	%rd119, %rd44, %rd118;
	st.u8 	[%rd119+1], %rs3;
	st.u8 	[%rd119], %rs16;
	bra.uni 	LBB26_76;
LBB26_44:
	mad.lo.s32 	%r399, %r2, -2139243339, -1492899873;
	and.b32  	%r400, %r399, 65536;
	setp.eq.s32 	%p63, %r400, 0;
	mad.lo.s32 	%r401, %r399, 1103515245, 12345;
	mad.lo.s32 	%r402, %r401, 1103515245, 12345;
	shr.u32 	%r403, %r401, 6;
	and.b32  	%r404, %r403, 2096128;
	bfe.u32 	%r405, %r402, 16, 10;
	or.b32  	%r406, %r405, %r404;
	mad.lo.s32 	%r407, %r402, 1103515245, 12345;
	shl.b32 	%r408, %r406, 10;
	bfe.u32 	%r409, %r407, 16, 10;
	or.b32  	%r410, %r408, %r409;
	mul.hi.u32 	%r411, %r410, -736280107;
	sub.s32 	%r412, %r410, %r411;
	shr.u32 	%r413, %r412, 1;
	add.s32 	%r414, %r413, %r411;
	shr.u32 	%r415, %r414, 5;
	mul.lo.s32 	%r416, %r415, 35;
	sub.s32 	%r417, %r410, %r416;
	mad.lo.s32 	%r418, %r407, 1103515245, 12345;
	mad.lo.s32 	%r419, %r418, 1103515245, 12345;
	shr.u32 	%r420, %r418, 6;
	and.b32  	%r421, %r420, 2096128;
	bfe.u32 	%r422, %r419, 16, 10;
	or.b32  	%r423, %r422, %r421;
	mad.lo.s32 	%r424, %r419, 1103515245, 12345;
	shl.b32 	%r425, %r423, 10;
	bfe.u32 	%r426, %r424, 16, 10;
	or.b32  	%r427, %r425, %r426;
	st.global.u32 	[%rd2], %r424;
	rem.u32 	%r428, %r427, %r10;
	cvt.u64.u32 	%rd185, %r428;
	add.s64 	%rd3, %rd44, %rd185;
	ld.u8 	%rs1, [%rd3];
	cvt.u16.u32 	%rs2, %r417;
	@%p63 bra 	LBB26_46;
	bra.uni 	LBB26_45;
LBB26_46:
	not.b16 	%rs33, %rs2;
	add.s16 	%rs34, %rs1, %rs33;
	st.u8 	[%rd3], %rs34;
	bra.uni 	LBB26_76;
LBB26_47:
	setp.lt.u32 	%p61, %r10, 2;
	@%p61 bra 	LBB26_76;
// %bb.48:
	add.s32 	%r368, %r10, -1;
	mad.lo.s32 	%r369, %r2, 1103515245, 12345;
	mad.lo.s32 	%r370, %r369, 1103515245, 12345;
	shr.u32 	%r371, %r369, 6;
	and.b32  	%r372, %r371, 2096128;
	bfe.u32 	%r373, %r370, 16, 10;
	or.b32  	%r374, %r373, %r372;
	mad.lo.s32 	%r375, %r370, 1103515245, 12345;
	shl.b32 	%r376, %r374, 10;
	bfe.u32 	%r377, %r375, 16, 10;
	or.b32  	%r378, %r376, %r377;
	rem.u32 	%r379, %r378, %r368;
	mad.lo.s32 	%r380, %r375, 1103515245, 12345;
	mad.lo.s32 	%r381, %r380, 1103515245, 12345;
	shr.u32 	%r382, %r380, 6;
	and.b32  	%r383, %r382, 2096128;
	bfe.u32 	%r384, %r381, 16, 10;
	or.b32  	%r385, %r384, %r383;
	mad.lo.s32 	%r386, %r381, 1103515245, 12345;
	shl.b32 	%r387, %r385, 10;
	bfe.u32 	%r388, %r386, 16, 10;
	or.b32  	%r389, %r387, %r388;
	st.global.u32 	[%rd2], %r386;
	mul.hi.u32 	%r390, %r389, -736280107;
	sub.s32 	%r391, %r389, %r390;
	shr.u32 	%r392, %r391, 1;
	add.s32 	%r393, %r392, %r390;
	shr.u32 	%r394, %r393, 5;
	mul.lo.s32 	%r395, %r394, 35;
	sub.s32 	%r396, %r389, %r395;
	cvt.u16.u32 	%rs18, %r396;
	add.s16 	%rs19, %rs18, 1;
	cvt.u64.u32 	%rd183, %r379;
	add.s64 	%rd184, %rd44, %rd183;
	ld.u8 	%rs20, [%rd184];
	ld.u8 	%rs21, [%rd184+1];
	shl.b16 	%rs22, %rs21, 8;
	or.b16  	%rs23, %rs22, %rs20;
	mad.lo.s32 	%r397, %r386, -2139243339, -1492899873;
	st.global.u32 	[%rd2], %r397;
	and.b32  	%r398, %r397, 65536;
	setp.eq.s32 	%p62, %r398, 0;
	shr.u16 	%rs24, %rs23, 8;
	shl.b16 	%rs25, %rs23, 8;
	or.b16  	%rs26, %rs25, %rs24;
	not.b16 	%rs27, %rs18;
	selp.b16 	%rs28, %rs27, %rs19, %p62;
	add.s16 	%rs29, %rs26, %rs28;
	shr.u16 	%rs30, %rs29, 8;
	st.u8 	[%rd184+1], %rs29;
	st.u8 	[%rd184], %rs30;
	bra.uni 	LBB26_76;
LBB26_59:
	setp.lt.u32 	%p40, %r10, 2;
	@%p40 bra 	LBB26_76;
// %bb.60:
	add.u64 	%rd1, %SPL, 0;
	mad.lo.s32 	%r66, %r2, 1103515245, 12345;
	mad.lo.s32 	%r67, %r66, 1103515245, 12345;
	shr.u32 	%r68, %r66, 6;
	and.b32  	%r69, %r68, 2096128;
	bfe.u32 	%r70, %r67, 16, 10;
	or.b32  	%r71, %r70, %r69;
	mad.lo.s32 	%r72, %r67, 1103515245, 12345;
	shl.b32 	%r73, %r71, 10;
	bfe.u32 	%r74, %r72, 16, 10;
	or.b32  	%r75, %r73, %r74;
	rem.u32 	%r76, %r75, %r10;
	mad.lo.s32 	%r77, %r72, 1103515245, 12345;
	mad.lo.s32 	%r78, %r77, 1103515245, 12345;
	shr.u32 	%r79, %r77, 6;
	and.b32  	%r80, %r79, 2096128;
	bfe.u32 	%r81, %r78, 16, 10;
	or.b32  	%r82, %r81, %r80;
	mad.lo.s32 	%r83, %r78, 1103515245, 12345;
	shl.b32 	%r84, %r82, 10;
	bfe.u32 	%r85, %r83, 16, 10;
	or.b32  	%r86, %r84, %r85;
	rem.u32 	%r6, %r86, %r10;
	max.u32 	%r87, %r76, %r6;
	sub.s32 	%r88, %r10, %r87;
	mad.lo.s32 	%r89, %r83, 1103515245, 12345;
	mad.lo.s32 	%r90, %r89, 1103515245, 12345;
	shr.u32 	%r91, %r89, 6;
	and.b32  	%r92, %r91, 2096128;
	bfe.u32 	%r93, %r90, 16, 10;
	or.b32  	%r94, %r93, %r92;
	mad.lo.s32 	%r95, %r90, 1103515245, 12345;
	shl.b32 	%r96, %r94, 10;
	bfe.u32 	%r97, %r95, 16, 10;
	or.b32  	%r98, %r96, %r97;
	st.global.u32 	[%rd2], %r95;
	rem.u32 	%r99, %r98, %r88;
	add.s32 	%r100, %r99, 1;
	cvt.u64.u32 	%rd12, %r100;
	cvt.u64.u32 	%rd88, %r76;
	add.s64 	%rd14, %rd44, %rd88;
	setp.eq.s32 	%p41, %r100, 0;
	mov.u64 	%rd200, 0;
	@%p41 bra 	LBB26_62;
LBB26_61:                               // %loop-memcpy-expansion
                                        // =>This Inner Loop Header: Depth=1
	add.s64 	%rd89, %rd14, %rd200;
	ld.u8 	%rs12, [%rd89];
	add.s64 	%rd90, %rd1, %rd200;
	st.local.u8 	[%rd90], %rs12;
	add.s64 	%rd200, %rd200, 1;
	setp.lt.u64 	%p42, %rd200, %rd12;
	@%p42 bra 	LBB26_61;
LBB26_62:                               // %post-loop-memcpy-expansion
	cvt.u64.u32 	%rd92, %r6;
	add.s64 	%rd18, %rd44, %rd92;
	setp.eq.s64 	%p43, %rd12, 0;
	mov.u64 	%rd201, 0;
	@%p43 bra 	LBB26_64;
LBB26_63:                               // %loop-memcpy-expansion9
                                        // =>This Inner Loop Header: Depth=1
	add.s64 	%rd93, %rd18, %rd201;
	ld.u8 	%rs13, [%rd93];
	add.s64 	%rd94, %rd14, %rd201;
	st.u8 	[%rd94], %rs13;
	add.s64 	%rd201, %rd201, 1;
	setp.lt.u64 	%p44, %rd201, %rd12;
	@%p44 bra 	LBB26_63;
LBB26_64:                               // %post-loop-memcpy-expansion8
	mov.u64 	%rd202, 0;
	@%p43 bra 	LBB26_76;
LBB26_65:                               // %loop-memcpy-expansion12
                                        // =>This Inner Loop Header: Depth=1
	add.s64 	%rd96, %rd1, %rd202;
	ld.local.u8 	%rs14, [%rd96];
	add.s64 	%rd97, %rd18, %rd202;
	st.u8 	[%rd97], %rs14;
	add.s64 	%rd202, %rd202, 1;
	setp.lt.u64 	%p46, %rd202, %rd12;
	@%p46 bra 	LBB26_65;
	bra.uni 	LBB26_76;
LBB26_66:
	ld.global.u32 	%r7, [cbconstants_length];
	setp.eq.s32 	%p32, %r7, 0;
	@%p32 bra 	LBB26_76;
// %bb.67:
	mad.lo.s32 	%r53, %r2, 1103515245, 12345;
	mad.lo.s32 	%r54, %r53, 1103515245, 12345;
	shr.u32 	%r55, %r53, 6;
	and.b32  	%r56, %r55, 2096128;
	bfe.u32 	%r57, %r54, 16, 10;
	or.b32  	%r58, %r57, %r56;
	mad.lo.s32 	%r59, %r54, 1103515245, 12345;
	shl.b32 	%r60, %r58, 10;
	bfe.u32 	%r61, %r59, 16, 10;
	or.b32  	%r62, %r60, %r61;
	st.global.u32 	[%rd2], %r59;
	rem.u32 	%r63, %r62, %r7;
	cvt.u64.u32 	%rd71, %r63;
	mul.wide.u32 	%rd72, %r63, 32;
	mov.u64 	%rd73, cbconstants;
	add.s64 	%rd23, %rd73, %rd72;
	mov.u64 	%rd74, cbconstant_sizes;
	add.s64 	%rd75, %rd74, %rd71;
	ld.global.u8 	%rs8, [%rd75];
	cvt.u32.u16 	%r64, %rs8;
	and.b32  	%r8, %r64, 255;
	setp.lt.u32 	%p33, %r8, %r10;
	@%p33 bra 	LBB26_70;
	bra.uni 	LBB26_68;
LBB26_70:
	cvt.u64.u16 	%rd76, %rs8;
	and.b64  	%rd24, %rd76, 255;
	sub.s32 	%r65, %r10, %r8;
	cvt.u64.u32 	%rd28, %r65;
	setp.eq.s32 	%p36, %r65, 0;
	mov.u64 	%rd204, 0;
	@%p36 bra 	LBB26_72;
LBB26_71:                               // %loadstoreloop18
                                        // =>This Inner Loop Header: Depth=1
	add.s64 	%rd81, %rd44, %rd204;
	mov.u16 	%rs10, 0;
	st.u8 	[%rd81], %rs10;
	add.s64 	%rd204, %rd204, 1;
	setp.lt.u64 	%p37, %rd204, %rd28;
	@%p37 bra 	LBB26_71;
LBB26_72:                               // %split17
	cvt.u64.u32 	%rd83, %r10;
	sub.s64 	%rd84, %rd83, %rd24;
	add.s64 	%rd31, %rd44, %rd84;
	setp.eq.s64 	%p38, %rd24, 0;
	mov.u64 	%rd205, 0;
	@%p38 bra 	LBB26_76;
LBB26_73:                               // %loop-memcpy-expansion20
                                        // =>This Inner Loop Header: Depth=1
	add.s64 	%rd85, %rd23, %rd205;
	ld.global.u8 	%rs11, [%rd85];
	add.s64 	%rd86, %rd31, %rd205;
	st.u8 	[%rd86], %rs11;
	add.s64 	%rd205, %rd205, 1;
	setp.lt.u64 	%p39, %rd205, %rd24;
	@%p39 bra 	LBB26_73;
	bra.uni 	LBB26_76;
LBB26_43:
	mad.lo.s32 	%r442, %r2, 1103515245, 12345;
	mad.lo.s32 	%r443, %r442, 1103515245, 12345;
	shr.u32 	%r444, %r442, 6;
	and.b32  	%r445, %r444, 2096128;
	bfe.u32 	%r446, %r443, 16, 10;
	or.b32  	%r447, %r446, %r445;
	mad.lo.s32 	%r448, %r443, 1103515245, 12345;
	shl.b32 	%r449, %r447, 10;
	bfe.u32 	%r450, %r448, 16, 10;
	or.b32  	%r451, %r449, %r450;
	st.global.u32 	[%rd2], %r448;
	rem.u32 	%r452, %r451, %r10;
	cvt.u64.u32 	%rd188, %r452;
	add.s64 	%rd189, %rd44, %rd188;
	ld.u8 	%rs35, [%rd189];
	neg.s16 	%rs36, %rs35;
	st.u8 	[%rd189], %rs36;
	bra.uni 	LBB26_76;
LBB26_56:
	setp.eq.s32 	%p50, %r10, 0;
	@%p50 bra 	LBB26_76;
// %bb.57:
	mad.lo.s32 	%r128, %r2, 1103515245, 12345;
	mad.lo.s32 	%r129, %r128, 1103515245, 12345;
	shr.u32 	%r130, %r128, 6;
	and.b32  	%r131, %r130, 2096128;
	bfe.u32 	%r132, %r129, 16, 10;
	or.b32  	%r133, %r132, %r131;
	mad.lo.s32 	%r134, %r129, 1103515245, 12345;
	shl.b32 	%r135, %r133, 10;
	bfe.u32 	%r136, %r134, 16, 10;
	or.b32  	%r137, %r135, %r136;
	rem.u32 	%r138, %r137, %r10;
	sub.s32 	%r139, %r10, %r138;
	min.u32 	%r140, %r139, 16;
	mad.lo.s32 	%r141, %r134, 1103515245, 12345;
	mad.lo.s32 	%r142, %r141, 1103515245, 12345;
	shr.u32 	%r143, %r141, 6;
	and.b32  	%r144, %r143, 2096128;
	bfe.u32 	%r145, %r142, 16, 10;
	or.b32  	%r146, %r145, %r144;
	mad.lo.s32 	%r147, %r142, 1103515245, 12345;
	shl.b32 	%r148, %r146, 10;
	bfe.u32 	%r149, %r147, 16, 10;
	or.b32  	%r150, %r148, %r149;
	rem.u32 	%r151, %r150, %r140;
	add.s32 	%r152, %r151, 1;
	cvt.u64.u32 	%rd4, %r152;
	mad.lo.s32 	%r153, %r147, 1103515245, 12345;
	mad.lo.s32 	%r154, %r153, 1103515245, 12345;
	shr.u32 	%r155, %r153, 6;
	and.b32  	%r156, %r155, 2096128;
	bfe.u32 	%r157, %r154, 16, 10;
	or.b32  	%r158, %r157, %r156;
	mad.lo.s32 	%r159, %r154, 1103515245, 12345;
	shl.b32 	%r160, %r158, 10;
	bfe.u32 	%r161, %r159, 16, 10;
	or.b32  	%r162, %r160, %r161;
	st.global.u32 	[%rd2], %r159;
	rem.u32 	%r163, %r162, %r10;
	cvt.u64.u32 	%rd102, %r163;
	add.s64 	%rd103, %rd44, %rd102;
	ld.u8 	%rs4, [%rd103];
	cvt.u64.u32 	%rd104, %r138;
	add.s64 	%rd5, %rd44, %rd104;
	setp.eq.s32 	%p51, %r152, 0;
	mov.u64 	%rd198, 0;
	@%p51 bra 	LBB26_76;
LBB26_58:                               // %loadstoreloop
                                        // =>This Inner Loop Header: Depth=1
	add.s64 	%rd105, %rd5, %rd198;
	st.u8 	[%rd105], %rs4;
	add.s64 	%rd198, %rd198, 1;
	setp.lt.u64 	%p52, %rd198, %rd4;
	@%p52 bra 	LBB26_58;
	bra.uni 	LBB26_76;
LBB26_45:
	add.s16 	%rs31, %rs2, %rs1;
	add.s16 	%rs32, %rs31, 1;
	st.u8 	[%rd3], %rs32;
	bra.uni 	LBB26_76;
LBB26_74:
	shl.b64 	%rd54, %rd34, 13;
	mov.u64 	%rd55, l2snaps;
	add.s64 	%rd56, %rd55, %rd54;
	shl.b64 	%rd57, %rd35, 6;
	add.s64 	%rd58, %rd56, %rd57;
	cvt.u64.u32 	%rd40, %r10;
	sub.s64 	%rd59, %rd58, %rd40;
	add.s64 	%rd41, %rd59, 32;
	setp.eq.s32 	%p28, %r10, 0;
	mov.u64 	%rd207, 0;
	@%p28 bra 	LBB26_76;
LBB26_75:                               // %loop-memcpy-expansion26
                                        // =>This Inner Loop Header: Depth=1
	add.s64 	%rd60, %rd41, %rd207;
	ld.global.u8 	%rs6, [%rd60];
	add.s64 	%rd61, %rd44, %rd207;
	st.u8 	[%rd61], %rs6;
	add.s64 	%rd207, %rd207, 1;
	setp.lt.u64 	%p29, %rd207, %rd40;
	@%p29 bra 	LBB26_75;
	bra.uni 	LBB26_76;
LBB26_68:
	cvt.u64.u32 	%rd25, %r10;
	setp.eq.s32 	%p34, %r10, 0;
	mov.u64 	%rd203, 0;
	@%p34 bra 	LBB26_76;
LBB26_69:                               // %loop-memcpy-expansion15
                                        // =>This Inner Loop Header: Depth=1
	add.s64 	%rd78, %rd23, %rd203;
	ld.global.u8 	%rs9, [%rd78];
	add.s64 	%rd79, %rd44, %rd203;
	st.u8 	[%rd79], %rs9;
	add.s64 	%rd203, %rd203, 1;
	setp.lt.u64 	%p35, %rd203, %rd25;
	@%p35 bra 	LBB26_69;
	bra.uni 	LBB26_76;
LBB26_27:
	add.s32 	%r182, %r10, -3;
	mad.lo.s32 	%r183, %r5, 1103515245, 12345;
	mad.lo.s32 	%r184, %r183, 1103515245, 12345;
	shr.u32 	%r185, %r183, 6;
	and.b32  	%r186, %r185, 2096128;
	bfe.u32 	%r187, %r184, 16, 10;
	or.b32  	%r188, %r187, %r186;
	mad.lo.s32 	%r189, %r184, 1103515245, 12345;
	shl.b32 	%r190, %r188, 10;
	bfe.u32 	%r191, %r189, 16, 10;
	or.b32  	%r192, %r190, %r191;
	st.global.u32 	[%rd2], %r189;
	rem.u32 	%r193, %r192, %r182;
	cvt.u64.u32 	%rd109, %r193;
	add.s64 	%rd110, %rd44, %rd109;
	shr.u32 	%r194, %r4, 24;
	st.u8 	[%rd110+3], %r194;
	shr.u32 	%r195, %r4, 16;
	st.u8 	[%rd110+2], %r195;
	shr.u32 	%r196, %r4, 8;
	st.u8 	[%rd110+1], %r196;
	st.u8 	[%rd110], %r4;
	bra.uni 	LBB26_76;
LBB26_53:
	add.s32 	%r230, %r10, -1;
	mad.lo.s32 	%r231, %r3, 1103515245, 12345;
	mad.lo.s32 	%r232, %r231, 1103515245, 12345;
	shr.u32 	%r233, %r231, 6;
	and.b32  	%r234, %r233, 2096128;
	bfe.u32 	%r235, %r232, 16, 10;
	or.b32  	%r236, %r235, %r234;
	mad.lo.s32 	%r237, %r232, 1103515245, 12345;
	shl.b32 	%r238, %r236, 10;
	bfe.u32 	%r239, %r237, 16, 10;
	or.b32  	%r240, %r238, %r239;
	st.global.u32 	[%rd2], %r237;
	rem.u32 	%r241, %r240, %r230;
	cvt.u64.u32 	%rd116, %r241;
	add.s64 	%rd117, %rd44, %rd116;
	shr.u16 	%rs15, %rs3, 8;
	st.u8 	[%rd117+1], %rs15;
	st.u8 	[%rd117], %rs3;
LBB26_76:
	ret;
                                        // -- End function
}
	// .globl	main_contract           // -- Begin function main_contract
.visible .entry main_contract(
	.param .b64 main_contract_param_0,
	.param .b32 main_contract_param_1
)                                       // @main_contract
{
	.local .align 16 .b8 	__local_depot27[64];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<27>;

// %bb.0:
	mov.u64 	%SPL, __local_depot27;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd1, [main_contract_param_0];
	add.u64 	%rd2, %SP, 0;
	add.u64 	%rd3, %SPL, 0;
	add.u64 	%rd4, %SP, 32;
	add.u64 	%rd5, %SPL, 32;
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %ntid.x;
	mad.lo.s32 	%r4, %r3, %r2, %r1;
	cvt.u64.u32 	%rd6, %r4;
	mov.u64 	%rd7, __hnbs;
	add.s64 	%rd8, %rd7, %rd6;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd8], %rs1;
	shl.b32 	%r5, %r4, 11;
	cvt.u64.u32 	%rd9, %r5;
	add.s64 	%rd10, %rd1, %rd9;
	ld.global.u64 	%rd11, [%rd10+8];
	ld.global.u64 	%rd12, [%rd10];
	ld.global.u64 	%rd13, [%rd10+24];
	ld.global.u64 	%rd14, [%rd10+16];
	st.local.u64 	[%rd3+16], %rd14;
	st.local.u64 	[%rd3+24], %rd13;
	st.local.u64 	[%rd3], %rd12;
	st.local.u64 	[%rd3+8], %rd11;
	ld.global.u64 	%rd15, [%rd10+40];
	ld.global.u64 	%rd16, [%rd10+32];
	ld.global.u64 	%rd17, [%rd10+56];
	ld.global.u64 	%rd18, [%rd10+48];
	st.local.u64 	[%rd5+16], %rd18;
	st.local.u64 	[%rd5+24], %rd17;
	st.local.u64 	[%rd5], %rd16;
	st.local.u64 	[%rd5+8], %rd15;
	ld.global.u32 	%r6, [%rd10+64];
	add.s64 	%rd19, %rd10, 68;
	cvta.global.u64 	%rd20, %rd19;
	mov.u64 	%rd21, l1snap_lens;
	add.s64 	%rd22, %rd21, %rd6;
	st.global.u8 	[%rd22], %rs1;
	mul.wide.u32 	%rd23, %r4, 8;
	mov.u64 	%rd24, __bitmaps;
	add.s64 	%rd25, %rd24, %rd23;
	ld.global.u64 	%rd26, [%rd25];
	{ // callseq 18, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd4;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd20;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r6;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd26;
	.param .b32 retval0;
	call.uni (retval0), 
	contract, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	ld.param.b32 	%r7, [retval0+0];
	} // callseq 18
	ret;
                                        // -- End function
}
